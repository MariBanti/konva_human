{
  "version": 3,
  "sources": ["../../../../../../node_modules/konva/lib/Global.js", "../../../../../../node_modules/konva/lib/Util.js", "../../../../../../node_modules/konva/lib/Validators.js", "../../../../../../node_modules/konva/lib/Factory.js", "../../../../../../node_modules/konva/lib/Context.js", "../../../../../../node_modules/konva/lib/Canvas.js", "../../../../../../node_modules/konva/lib/DragAndDrop.js", "../../../../../../node_modules/konva/lib/Node.js", "../../../../../../node_modules/konva/lib/Container.js", "../../../../../../node_modules/konva/lib/PointerEvents.js", "../../../../../../node_modules/konva/lib/Stage.js", "../../../../../../node_modules/konva/lib/Shape.js", "../../../../../../node_modules/konva/lib/Layer.js", "../../../../../../node_modules/konva/lib/FastLayer.js", "../../../../../../node_modules/konva/lib/Group.js", "../../../../../../node_modules/konva/lib/Animation.js", "../../../../../../node_modules/konva/lib/Tween.js", "../../../../../../node_modules/konva/lib/_CoreInternals.js", "../../../../../../node_modules/konva/lib/shapes/Arc.js", "../../../../../../node_modules/konva/lib/shapes/Line.js", "../../../../../../node_modules/konva/lib/BezierFunctions.js", "../../../../../../node_modules/konva/lib/shapes/Path.js", "../../../../../../node_modules/konva/lib/shapes/Arrow.js", "../../../../../../node_modules/konva/lib/shapes/Circle.js", "../../../../../../node_modules/konva/lib/shapes/Ellipse.js", "../../../../../../node_modules/konva/lib/shapes/Image.js", "../../../../../../node_modules/konva/lib/shapes/Label.js", "../../../../../../node_modules/konva/lib/shapes/Rect.js", "../../../../../../node_modules/konva/lib/shapes/RegularPolygon.js", "../../../../../../node_modules/konva/lib/shapes/Ring.js", "../../../../../../node_modules/konva/lib/shapes/Sprite.js", "../../../../../../node_modules/konva/lib/shapes/Star.js", "../../../../../../node_modules/konva/lib/shapes/Text.js", "../../../../../../node_modules/konva/lib/shapes/TextPath.js", "../../../../../../node_modules/konva/lib/shapes/Transformer.js", "../../../../../../node_modules/konva/lib/shapes/Wedge.js", "../../../../../../node_modules/konva/lib/filters/Blur.js", "../../../../../../node_modules/konva/lib/filters/Brighten.js", "../../../../../../node_modules/konva/lib/filters/Contrast.js", "../../../../../../node_modules/konva/lib/filters/Emboss.js", "../../../../../../node_modules/konva/lib/filters/Enhance.js", "../../../../../../node_modules/konva/lib/filters/Grayscale.js", "../../../../../../node_modules/konva/lib/filters/HSL.js", "../../../../../../node_modules/konva/lib/filters/HSV.js", "../../../../../../node_modules/konva/lib/filters/Invert.js", "../../../../../../node_modules/konva/lib/filters/Kaleidoscope.js", "../../../../../../node_modules/konva/lib/filters/Mask.js", "../../../../../../node_modules/konva/lib/filters/Noise.js", "../../../../../../node_modules/konva/lib/filters/Pixelate.js", "../../../../../../node_modules/konva/lib/filters/Posterize.js", "../../../../../../node_modules/konva/lib/filters/RGB.js", "../../../../../../node_modules/konva/lib/filters/RGBA.js", "../../../../../../node_modules/konva/lib/filters/Sepia.js", "../../../../../../node_modules/konva/lib/filters/Solarize.js", "../../../../../../node_modules/konva/lib/filters/Threshold.js", "../../../../../../node_modules/konva/lib/_FullInternals.js", "../../../../../../node_modules/konva/lib/index.js"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._registerNode = exports.Konva = exports.glob = void 0;\nconst PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n  return typeof window !== 'undefined' && ({}.toString.call(window) === '[object Window]' || {}.toString.call(window) === '[object global]');\n}\nexports.glob = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' ? self : {};\nexports.Konva = {\n  _global: exports.glob,\n  version: '9.3.20',\n  isBrowser: detectBrowser(),\n  isUnminified: /param/.test(function (param) {}.toString()),\n  dblClickWindow: 400,\n  getAngle(angle) {\n    return exports.Konva.angleDeg ? angle * PI_OVER_180 : angle;\n  },\n  enableTrace: false,\n  pointerEventsEnabled: true,\n  autoDrawEnabled: true,\n  hitOnDragEnabled: false,\n  capturePointerEventsEnabled: false,\n  _mouseListenClick: false,\n  _touchListenClick: false,\n  _pointerListenClick: false,\n  _mouseInDblClickWindow: false,\n  _touchInDblClickWindow: false,\n  _pointerInDblClickWindow: false,\n  _mouseDblClickPointerId: null,\n  _touchDblClickPointerId: null,\n  _pointerDblClickPointerId: null,\n  _fixTextRendering: false,\n  pixelRatio: typeof window !== 'undefined' && window.devicePixelRatio || 1,\n  dragDistance: 3,\n  angleDeg: true,\n  showWarnings: true,\n  dragButtons: [0, 1],\n  isDragging() {\n    return exports.Konva['DD'].isDragging;\n  },\n  isTransforming() {\n    var _a;\n    return (_a = exports.Konva['Transformer']) === null || _a === void 0 ? void 0 : _a.isTransforming();\n  },\n  isDragReady() {\n    return !!exports.Konva['DD'].node;\n  },\n  releaseCanvasOnDestroy: true,\n  document: exports.glob.document,\n  _injectGlobal(Konva) {\n    exports.glob.Konva = Konva;\n  }\n};\nconst _registerNode = NodeClass => {\n  exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nexports._registerNode = _registerNode;\nexports.Konva._injectGlobal(exports.Konva);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Util = exports.Transform = void 0;\nconst Global_1 = require(\"./Global\");\nclass Transform {\n  constructor(m = [1, 0, 0, 1, 0, 0]) {\n    this.dirty = false;\n    this.m = m && m.slice() || [1, 0, 0, 1, 0, 0];\n  }\n  reset() {\n    this.m[0] = 1;\n    this.m[1] = 0;\n    this.m[2] = 0;\n    this.m[3] = 1;\n    this.m[4] = 0;\n    this.m[5] = 0;\n  }\n  copy() {\n    return new Transform(this.m);\n  }\n  copyInto(tr) {\n    tr.m[0] = this.m[0];\n    tr.m[1] = this.m[1];\n    tr.m[2] = this.m[2];\n    tr.m[3] = this.m[3];\n    tr.m[4] = this.m[4];\n    tr.m[5] = this.m[5];\n  }\n  point(point) {\n    const m = this.m;\n    return {\n      x: m[0] * point.x + m[2] * point.y + m[4],\n      y: m[1] * point.x + m[3] * point.y + m[5]\n    };\n  }\n  translate(x, y) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  }\n  scale(sx, sy) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  }\n  rotate(rad) {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  getTranslation() {\n    return {\n      x: this.m[4],\n      y: this.m[5]\n    };\n  }\n  skew(sx, sy) {\n    const m11 = this.m[0] + this.m[2] * sy;\n    const m12 = this.m[1] + this.m[3] * sy;\n    const m21 = this.m[2] + this.m[0] * sx;\n    const m22 = this.m[3] + this.m[1] * sx;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n  multiply(matrix) {\n    const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n    const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n    const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  }\n  invert() {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  }\n  getMatrix() {\n    return this.m;\n  }\n  decompose() {\n    const a = this.m[0];\n    const b = this.m[1];\n    const c = this.m[2];\n    const d = this.m[3];\n    const e = this.m[4];\n    const f = this.m[5];\n    const delta = a * d - b * c;\n    const result = {\n      x: e,\n      y: f,\n      rotation: 0,\n      scaleX: 0,\n      scaleY: 0,\n      skewX: 0,\n      skewY: 0\n    };\n    if (a != 0 || b != 0) {\n      const r = Math.sqrt(a * a + b * b);\n      result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n      result.scaleX = r;\n      result.scaleY = delta / r;\n      result.skewX = (a * c + b * d) / delta;\n      result.skewY = 0;\n    } else if (c != 0 || d != 0) {\n      const s = Math.sqrt(c * c + d * d);\n      result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n      result.scaleX = delta / s;\n      result.scaleY = s;\n      result.skewX = 0;\n      result.skewY = (a * c + b * d) / delta;\n    } else {}\n    result.rotation = exports.Util._getRotation(result.rotation);\n    return result;\n  }\n}\nexports.Transform = Transform;\nconst OBJECT_ARRAY = '[object Array]',\n  OBJECT_NUMBER = '[object Number]',\n  OBJECT_STRING = '[object String]',\n  OBJECT_BOOLEAN = '[object Boolean]',\n  PI_OVER_DEG180 = Math.PI / 180,\n  DEG180_OVER_PI = 180 / Math.PI,\n  HASH = '#',\n  EMPTY_STRING = '',\n  ZERO = '0',\n  KONVA_WARNING = 'Konva warning: ',\n  KONVA_ERROR = 'Konva error: ',\n  RGB_PAREN = 'rgb(',\n  COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5]\n  },\n  RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\nlet animQueue = [];\nconst req = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || function (f) {\n  setTimeout(f, 60);\n};\nexports.Util = {\n  _isElement(obj) {\n    return !!(obj && obj.nodeType == 1);\n  },\n  _isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  },\n  _isPlainObject(obj) {\n    return !!obj && obj.constructor === Object;\n  },\n  _isArray(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n  },\n  _isNumber(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n  },\n  _isString(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_STRING;\n  },\n  _isBoolean(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n  },\n  isObject(val) {\n    return val instanceof Object;\n  },\n  isValidSelector(selector) {\n    if (typeof selector !== 'string') {\n      return false;\n    }\n    const firstChar = selector[0];\n    return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n  },\n  _sign(number) {\n    if (number === 0) {\n      return 1;\n    }\n    if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  },\n  requestAnimFrame(callback) {\n    animQueue.push(callback);\n    if (animQueue.length === 1) {\n      req(function () {\n        const queue = animQueue;\n        animQueue = [];\n        queue.forEach(function (cb) {\n          cb();\n        });\n      });\n    }\n  },\n  createCanvasElement() {\n    const canvas = document.createElement('canvas');\n    try {\n      canvas.style = canvas.style || {};\n    } catch (e) {}\n    return canvas;\n  },\n  createImageElement() {\n    return document.createElement('img');\n  },\n  _isInDocument(el) {\n    while (el = el.parentNode) {\n      if (el == document) {\n        return true;\n      }\n    }\n    return false;\n  },\n  _urlToImage(url, callback) {\n    const imageObj = exports.Util.createImageElement();\n    imageObj.onload = function () {\n      callback(imageObj);\n    };\n    imageObj.src = url;\n  },\n  _rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  },\n  _hexToRgb(hex) {\n    hex = hex.replace(HASH, EMPTY_STRING);\n    const bigint = parseInt(hex, 16);\n    return {\n      r: bigint >> 16 & 255,\n      g: bigint >> 8 & 255,\n      b: bigint & 255\n    };\n  },\n  getRandomColor() {\n    let randColor = (Math.random() * 0xffffff << 0).toString(16);\n    while (randColor.length < 6) {\n      randColor = ZERO + randColor;\n    }\n    return HASH + randColor;\n  },\n  getRGB(color) {\n    let rgb;\n    if (color in COLORS) {\n      rgb = COLORS[color];\n      return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2]\n      };\n    } else if (color[0] === HASH) {\n      return this._hexToRgb(color.substring(1));\n    } else if (color.substr(0, 4) === RGB_PAREN) {\n      rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    } else {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n  },\n  colorToRGBA(str) {\n    str = str || 'black';\n    return exports.Util._namedColorToRBA(str) || exports.Util._hex3ColorToRGBA(str) || exports.Util._hex4ColorToRGBA(str) || exports.Util._hex6ColorToRGBA(str) || exports.Util._hex8ColorToRGBA(str) || exports.Util._rgbColorToRGBA(str) || exports.Util._rgbaColorToRGBA(str) || exports.Util._hslColorToRGBA(str);\n  },\n  _namedColorToRBA(str) {\n    const c = COLORS[str.toLowerCase()];\n    if (!c) {\n      return null;\n    }\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 1\n    };\n  },\n  _rgbColorToRGBA(str) {\n    if (str.indexOf('rgb(') === 0) {\n      str = str.match(/rgb\\(([^)]+)\\)/)[1];\n      const parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: 1\n      };\n    }\n  },\n  _rgbaColorToRGBA(str) {\n    if (str.indexOf('rgba(') === 0) {\n      str = str.match(/rgba\\(([^)]+)\\)/)[1];\n      const parts = str.split(/ *, */).map((n, index) => {\n        if (n.slice(-1) === '%') {\n          return index === 3 ? parseInt(n) / 100 : parseInt(n) / 100 * 255;\n        }\n        return Number(n);\n      });\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: parts[3]\n      };\n    }\n  },\n  _hex8ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 9) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: parseInt(str.slice(7, 9), 16) / 0xff\n      };\n    }\n  },\n  _hex6ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 7) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: 1\n      };\n    }\n  },\n  _hex4ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 5) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: parseInt(str[4] + str[4], 16) / 0xff\n      };\n    }\n  },\n  _hex3ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 4) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: 1\n      };\n    }\n  },\n  _hslColorToRGBA(str) {\n    if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n      const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n      const h = Number(hsl[0]) / 360;\n      const s = Number(hsl[1]) / 100;\n      const l = Number(hsl[2]) / 100;\n      let t2;\n      let t3;\n      let val;\n      if (s === 0) {\n        val = l * 255;\n        return {\n          r: Math.round(val),\n          g: Math.round(val),\n          b: Math.round(val),\n          a: 1\n        };\n      }\n      if (l < 0.5) {\n        t2 = l * (1 + s);\n      } else {\n        t2 = l + s - l * s;\n      }\n      const t1 = 2 * l - t2;\n      const rgb = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        t3 = h + 1 / 3 * -(i - 1);\n        if (t3 < 0) {\n          t3++;\n        }\n        if (t3 > 1) {\n          t3--;\n        }\n        if (6 * t3 < 1) {\n          val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n          val = t2;\n        } else if (3 * t3 < 2) {\n          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n          val = t1;\n        }\n        rgb[i] = val * 255;\n      }\n      return {\n        r: Math.round(rgb[0]),\n        g: Math.round(rgb[1]),\n        b: Math.round(rgb[2]),\n        a: 1\n      };\n    }\n  },\n  haveIntersection(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n  },\n  cloneObject(obj) {\n    const retObj = {};\n    for (const key in obj) {\n      if (this._isPlainObject(obj[key])) {\n        retObj[key] = this.cloneObject(obj[key]);\n      } else if (this._isArray(obj[key])) {\n        retObj[key] = this.cloneArray(obj[key]);\n      } else {\n        retObj[key] = obj[key];\n      }\n    }\n    return retObj;\n  },\n  cloneArray(arr) {\n    return arr.slice(0);\n  },\n  degToRad(deg) {\n    return deg * PI_OVER_DEG180;\n  },\n  radToDeg(rad) {\n    return rad * DEG180_OVER_PI;\n  },\n  _degToRad(deg) {\n    exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n    return exports.Util.degToRad(deg);\n  },\n  _radToDeg(rad) {\n    exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n    return exports.Util.radToDeg(rad);\n  },\n  _getRotation(radians) {\n    return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\n  },\n  _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n  throw(str) {\n    throw new Error(KONVA_ERROR + str);\n  },\n  error(str) {\n    console.error(KONVA_ERROR + str);\n  },\n  warn(str) {\n    if (!Global_1.Konva.showWarnings) {\n      return;\n    }\n    console.warn(KONVA_WARNING + str);\n  },\n  each(obj, func) {\n    for (const key in obj) {\n      func(key, obj[key]);\n    }\n  },\n  _inRange(val, left, right) {\n    return left <= val && val < right;\n  },\n  _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n    let x, y, dist;\n    const pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    if (pd2 == 0) {\n      x = x1;\n      y = y1;\n      dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n    } else {\n      const u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n      if (u < 0) {\n        x = x1;\n        y = y1;\n        dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      } else if (u > 1.0) {\n        x = x2;\n        y = y2;\n        dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n      } else {\n        x = x1 + u * (x2 - x1);\n        y = y1 + u * (y2 - y1);\n        dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n      }\n    }\n    return [x, y, dist];\n  },\n  _getProjectionToLine(pt, line, isClosed) {\n    const pc = exports.Util.cloneObject(pt);\n    let dist = Number.MAX_VALUE;\n    line.forEach(function (p1, i) {\n      if (!isClosed && i === line.length - 1) {\n        return;\n      }\n      const p2 = line[(i + 1) % line.length];\n      const proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n      const px = proj[0],\n        py = proj[1],\n        pdist = proj[2];\n      if (pdist < dist) {\n        pc.x = px;\n        pc.y = py;\n        dist = pdist;\n      }\n    });\n    return pc;\n  },\n  _prepareArrayForTween(startArray, endArray, isClosed) {\n    const start = [],\n      end = [];\n    if (startArray.length > endArray.length) {\n      const temp = endArray;\n      endArray = startArray;\n      startArray = temp;\n    }\n    for (let n = 0; n < startArray.length; n += 2) {\n      start.push({\n        x: startArray[n],\n        y: startArray[n + 1]\n      });\n    }\n    for (let n = 0; n < endArray.length; n += 2) {\n      end.push({\n        x: endArray[n],\n        y: endArray[n + 1]\n      });\n    }\n    const newStart = [];\n    end.forEach(function (point) {\n      const pr = exports.Util._getProjectionToLine(point, start, isClosed);\n      newStart.push(pr.x);\n      newStart.push(pr.y);\n    });\n    return newStart;\n  },\n  _prepareToStringify(obj) {\n    let desc;\n    obj.visitedByCircularReferenceRemoval = true;\n    for (const key in obj) {\n      if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n        continue;\n      }\n      desc = Object.getOwnPropertyDescriptor(obj, key);\n      if (obj[key].visitedByCircularReferenceRemoval || exports.Util._isElement(obj[key])) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      } else if (exports.Util._prepareToStringify(obj[key]) === null) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      }\n    }\n    delete obj.visitedByCircularReferenceRemoval;\n    return obj;\n  },\n  _assign(target, source) {\n    for (const key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  },\n  _getFirstPointerId(evt) {\n    if (!evt.touches) {\n      return evt.pointerId || 999;\n    } else {\n      return evt.changedTouches[0].identifier;\n    }\n  },\n  releaseCanvas(...canvases) {\n    if (!Global_1.Konva.releaseCanvasOnDestroy) return;\n    canvases.forEach(c => {\n      c.width = 0;\n      c.height = 0;\n    });\n  },\n  drawRoundedRectPath(context, width, height, cornerRadius) {\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.moveTo(topLeft, 0);\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGBComponent = RGBComponent;\nexports.alphaComponent = alphaComponent;\nexports.getNumberValidator = getNumberValidator;\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nexports.getStringValidator = getStringValidator;\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nexports.getFunctionValidator = getFunctionValidator;\nexports.getNumberArrayValidator = getNumberArrayValidator;\nexports.getBooleanValidator = getBooleanValidator;\nexports.getComponentValidator = getComponentValidator;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n  if (Util_1.Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n  if (Util_1.Util._isBoolean(val)) {\n    return val;\n  }\n  return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n  return Math.round(val);\n}\nfunction alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n  return val;\n}\nfunction getNumberValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isNumber(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      let isNumber = Util_1.Util._isNumber(val);\n      let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n      if (!isNumber && !isValidArray) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberOrAutoValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util_1.Util._isNumber(val);\n      var isAuto = val === 'auto';\n      if (!(isNumber || isAuto)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n      return val;\n    };\n  }\n}\nfunction getStringValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isString(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n      return val;\n    };\n  }\n}\nfunction getStringOrGradientValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const isString = Util_1.Util._isString(val);\n      const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' || val && val['addColorStop'];\n      if (!(isString || isGradient)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n      return val;\n    };\n  }\n}\nfunction getFunctionValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isFunction(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberArrayValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n      if (TypedArray && val instanceof TypedArray) {\n        return val;\n      }\n      if (!Util_1.Util._isArray(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util_1.Util._isNumber(item)) {\n            Util_1.Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n      return val;\n    };\n  }\n}\nfunction getBooleanValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      var isBool = val === true || val === false;\n      if (!isBool) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n      return val;\n    };\n  }\n}\nfunction getComponentValidator(components) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (val === undefined || val === null) {\n        return val;\n      }\n      if (!Util_1.Util.isObject(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n      return val;\n    };\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Factory = void 0;\nconst Util_1 = require(\"./Util\");\nconst Validators_1 = require(\"./Validators\");\nconst GET = 'get';\nconst SET = 'set';\nexports.Factory = {\n  addGetterSetter(constructor, attr, def, validator, after) {\n    exports.Factory.addGetter(constructor, attr, def);\n    exports.Factory.addSetter(constructor, attr, validator, after);\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addGetter(constructor, attr, def) {\n    var method = GET + Util_1.Util._capitalize(attr);\n    constructor.prototype[method] = constructor.prototype[method] || function () {\n      const val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n  },\n  addSetter(constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n    if (!constructor.prototype[method]) {\n      exports.Factory.overWriteSetter(constructor, attr, validator, after);\n    }\n  },\n  overWriteSetter(constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n    constructor.prototype[method] = function (val) {\n      if (validator && val !== undefined && val !== null) {\n        val = validator.call(this, val, attr);\n      }\n      this._setAttr(attr, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n  },\n  addComponentsGetterSetter(constructor, attr, components, validator, after) {\n    const len = components.length,\n      capitalize = Util_1.Util._capitalize,\n      getter = GET + capitalize(attr),\n      setter = SET + capitalize(attr);\n    constructor.prototype[getter] = function () {\n      const ret = {};\n      for (let n = 0; n < len; n++) {\n        const component = components[n];\n        ret[component] = this.getAttr(attr + capitalize(component));\n      }\n      return ret;\n    };\n    const basicValidator = (0, Validators_1.getComponentValidator)(components);\n    constructor.prototype[setter] = function (val) {\n      const oldVal = this.attrs[attr];\n      if (validator) {\n        val = validator.call(this, val, attr);\n      }\n      if (basicValidator) {\n        basicValidator.call(this, val, attr);\n      }\n      for (const key in val) {\n        if (!val.hasOwnProperty(key)) {\n          continue;\n        }\n        this._setAttr(attr + capitalize(key), val[key]);\n      }\n      if (!val) {\n        components.forEach(component => {\n          this._setAttr(attr + capitalize(component), undefined);\n        });\n      }\n      this._fireChangeEvent(attr, oldVal, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addOverloadedGetterSetter(constructor, attr) {\n    var capitalizedAttr = Util_1.Util._capitalize(attr),\n      setter = SET + capitalizedAttr,\n      getter = GET + capitalizedAttr;\n    constructor.prototype[attr] = function () {\n      if (arguments.length) {\n        this[setter](arguments[0]);\n        return this;\n      }\n      return this[getter]();\n    };\n  },\n  addDeprecatedGetterSetter(constructor, attr, def, validator) {\n    Util_1.Util.error('Adding deprecated ' + attr);\n    const method = GET + Util_1.Util._capitalize(attr);\n    const message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n    constructor.prototype[method] = function () {\n      Util_1.Util.error(message);\n      const val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n    exports.Factory.addSetter(constructor, attr, validator, function () {\n      Util_1.Util.error(message);\n    });\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  backCompat(constructor, methods) {\n    Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n      const method = constructor.prototype[newMethodName];\n      const oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n      const oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n      function deprecated() {\n        method.apply(this, arguments);\n        Util_1.Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n      }\n      constructor.prototype[oldMethodName] = deprecated;\n      constructor.prototype[oldGetter] = deprecated;\n      constructor.prototype[oldSetter] = deprecated;\n    });\n  },\n  afterSetFilter() {\n    this._filterUpToDate = false;\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = require(\"./Util\");\nconst Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n  const retArr = [],\n    len = arr.length,\n    util = Util_1.Util;\n  for (let n = 0; n < len; n++) {\n    let val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nconst COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'roundRect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nconst CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'letterSpacing', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'direction', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nconst traceArrMax = 100;\nclass Context {\n  constructor(canvas) {\n    this.canvas = canvas;\n    if (Global_1.Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  fillShape(shape) {\n    if (shape.fillEnabled()) {\n      this._fill(shape);\n    }\n  }\n  _fill(shape) {}\n  strokeShape(shape) {\n    if (shape.hasStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {}\n  fillStrokeShape(shape) {\n    if (shape.attrs.fillAfterStrokeEnabled) {\n      this.strokeShape(shape);\n      this.fillShape(shape);\n    } else {\n      this.fillShape(shape);\n      this.strokeShape(shape);\n    }\n  }\n  getTrace(relaxed, rounded) {\n    let traceArr = this.traceArr,\n      len = traceArr.length,\n      str = '',\n      n,\n      trace,\n      method,\n      args;\n    for (n = 0; n < len; n++) {\n      trace = traceArr[n];\n      method = trace.method;\n      if (method) {\n        args = trace.args;\n        str += method;\n        if (relaxed) {\n          str += DOUBLE_PAREN;\n        } else {\n          if (Util_1.Util._isArray(args[0])) {\n            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n          } else {\n            if (rounded) {\n              args = args.map(a => typeof a === 'number' ? Math.floor(a) : a);\n            }\n            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n          }\n        }\n      } else {\n        str += trace.property;\n        if (!relaxed) {\n          str += EQUALS + trace.val;\n        }\n      }\n      str += SEMICOLON;\n    }\n    return str;\n  }\n  clearTrace() {\n    this.traceArr = [];\n  }\n  _trace(str) {\n    let traceArr = this.traceArr,\n      len;\n    traceArr.push(str);\n    len = traceArr.length;\n    if (len >= traceArrMax) {\n      traceArr.shift();\n    }\n  }\n  reset() {\n    const pixelRatio = this.getCanvas().getPixelRatio();\n    this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  clear(bounds) {\n    const canvas = this.getCanvas();\n    if (bounds) {\n      this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n    } else {\n      this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n    }\n  }\n  _applyLineCap(shape) {\n    const lineCap = shape.attrs.lineCap;\n    if (lineCap) {\n      this.setAttr('lineCap', lineCap);\n    }\n  }\n  _applyOpacity(shape) {\n    const absOpacity = shape.getAbsoluteOpacity();\n    if (absOpacity !== 1) {\n      this.setAttr('globalAlpha', absOpacity);\n    }\n  }\n  _applyLineJoin(shape) {\n    const lineJoin = shape.attrs.lineJoin;\n    if (lineJoin) {\n      this.setAttr('lineJoin', lineJoin);\n    }\n  }\n  setAttr(attr, val) {\n    this._context[attr] = val;\n  }\n  arc(x, y, radius, startAngle, endAngle, counterClockwise) {\n    this._context.arc(x, y, radius, startAngle, endAngle, counterClockwise);\n  }\n  arcTo(x1, y1, x2, y2, radius) {\n    this._context.arcTo(x1, y1, x2, y2, radius);\n  }\n  beginPath() {\n    this._context.beginPath();\n  }\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  }\n  clearRect(x, y, width, height) {\n    this._context.clearRect(x, y, width, height);\n  }\n  clip(...args) {\n    this._context.clip.apply(this._context, args);\n  }\n  closePath() {\n    this._context.closePath();\n  }\n  createImageData(width, height) {\n    const a = arguments;\n    if (a.length === 2) {\n      return this._context.createImageData(width, height);\n    } else if (a.length === 1) {\n      return this._context.createImageData(width);\n    }\n  }\n  createLinearGradient(x0, y0, x1, y1) {\n    return this._context.createLinearGradient(x0, y0, x1, y1);\n  }\n  createPattern(image, repetition) {\n    return this._context.createPattern(image, repetition);\n  }\n  createRadialGradient(x0, y0, r0, x1, y1, r1) {\n    return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\n  }\n  drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n    const a = arguments,\n      _context = this._context;\n    if (a.length === 3) {\n      _context.drawImage(image, sx, sy);\n    } else if (a.length === 5) {\n      _context.drawImage(image, sx, sy, sWidth, sHeight);\n    } else if (a.length === 9) {\n      _context.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n    }\n  }\n  ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise) {\n    this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise);\n  }\n  isPointInPath(x, y, path, fillRule) {\n    if (path) {\n      return this._context.isPointInPath(path, x, y, fillRule);\n    }\n    return this._context.isPointInPath(x, y, fillRule);\n  }\n  fill(...args) {\n    this._context.fill.apply(this._context, args);\n  }\n  fillRect(x, y, width, height) {\n    this._context.fillRect(x, y, width, height);\n  }\n  strokeRect(x, y, width, height) {\n    this._context.strokeRect(x, y, width, height);\n  }\n  fillText(text, x, y, maxWidth) {\n    if (maxWidth) {\n      this._context.fillText(text, x, y, maxWidth);\n    } else {\n      this._context.fillText(text, x, y);\n    }\n  }\n  measureText(text) {\n    return this._context.measureText(text);\n  }\n  getImageData(sx, sy, sw, sh) {\n    return this._context.getImageData(sx, sy, sw, sh);\n  }\n  lineTo(x, y) {\n    this._context.lineTo(x, y);\n  }\n  moveTo(x, y) {\n    this._context.moveTo(x, y);\n  }\n  rect(x, y, width, height) {\n    this._context.rect(x, y, width, height);\n  }\n  roundRect(x, y, width, height, radii) {\n    this._context.roundRect(x, y, width, height, radii);\n  }\n  putImageData(imageData, dx, dy) {\n    this._context.putImageData(imageData, dx, dy);\n  }\n  quadraticCurveTo(cpx, cpy, x, y) {\n    this._context.quadraticCurveTo(cpx, cpy, x, y);\n  }\n  restore() {\n    this._context.restore();\n  }\n  rotate(angle) {\n    this._context.rotate(angle);\n  }\n  save() {\n    this._context.save();\n  }\n  scale(x, y) {\n    this._context.scale(x, y);\n  }\n  setLineDash(segments) {\n    if (this._context.setLineDash) {\n      this._context.setLineDash(segments);\n    } else if ('mozDash' in this._context) {\n      this._context['mozDash'] = segments;\n    } else if ('webkitLineDash' in this._context) {\n      this._context['webkitLineDash'] = segments;\n    }\n  }\n  getLineDash() {\n    return this._context.getLineDash();\n  }\n  setTransform(a, b, c, d, e, f) {\n    this._context.setTransform(a, b, c, d, e, f);\n  }\n  stroke(path2d) {\n    if (path2d) {\n      this._context.stroke(path2d);\n    } else {\n      this._context.stroke();\n    }\n  }\n  strokeText(text, x, y, maxWidth) {\n    this._context.strokeText(text, x, y, maxWidth);\n  }\n  transform(a, b, c, d, e, f) {\n    this._context.transform(a, b, c, d, e, f);\n  }\n  translate(x, y) {\n    this._context.translate(x, y);\n  }\n  _enableTrace() {\n    let that = this,\n      len = CONTEXT_METHODS.length,\n      origSetter = this.setAttr,\n      n,\n      args;\n    const func = function (methodName) {\n      let origMethod = that[methodName],\n        ret;\n      that[methodName] = function () {\n        args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n        ret = origMethod.apply(that, arguments);\n        that._trace({\n          method: methodName,\n          args: args\n        });\n        return ret;\n      };\n    };\n    for (n = 0; n < len; n++) {\n      func(CONTEXT_METHODS[n]);\n    }\n    that.setAttr = function () {\n      origSetter.apply(that, arguments);\n      const prop = arguments[0];\n      let val = arguments[1];\n      if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n        val = val / this.canvas.getPixelRatio();\n      }\n      that._trace({\n        property: prop,\n        val: val\n      });\n    };\n  }\n  _applyGlobalCompositeOperation(node) {\n    const op = node.attrs.globalCompositeOperation;\n    const def = !op || op === 'source-over';\n    if (!def) {\n      this.setAttr('globalCompositeOperation', op);\n    }\n  }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get() {\n      return this._context[prop];\n    },\n    set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nclass SceneContext extends Context {\n  constructor(canvas, {\n    willReadFrequently = false\n  } = {}) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently\n    });\n  }\n  _fillColor(shape) {\n    const fill = shape.fill();\n    this.setAttr('fillStyle', fill);\n    shape._fillFunc(this);\n  }\n  _fillPattern(shape) {\n    this.setAttr('fillStyle', shape._getFillPattern());\n    shape._fillFunc(this);\n  }\n  _fillLinearGradient(shape) {\n    const grd = shape._getLinearGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fillRadialGradient(shape) {\n    const grd = shape._getRadialGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fill(shape) {\n    const hasColor = shape.fill(),\n      fillPriority = shape.getFillPriority();\n    if (hasColor && fillPriority === 'color') {\n      this._fillColor(shape);\n      return;\n    }\n    const hasPattern = shape.getFillPatternImage();\n    if (hasPattern && fillPriority === 'pattern') {\n      this._fillPattern(shape);\n      return;\n    }\n    const hasLinearGradient = shape.getFillLinearGradientColorStops();\n    if (hasLinearGradient && fillPriority === 'linear-gradient') {\n      this._fillLinearGradient(shape);\n      return;\n    }\n    const hasRadialGradient = shape.getFillRadialGradientColorStops();\n    if (hasRadialGradient && fillPriority === 'radial-gradient') {\n      this._fillRadialGradient(shape);\n      return;\n    }\n    if (hasColor) {\n      this._fillColor(shape);\n    } else if (hasPattern) {\n      this._fillPattern(shape);\n    } else if (hasLinearGradient) {\n      this._fillLinearGradient(shape);\n    } else if (hasRadialGradient) {\n      this._fillRadialGradient(shape);\n    }\n  }\n  _strokeLinearGradient(shape) {\n    const start = shape.getStrokeLinearGradientStartPoint(),\n      end = shape.getStrokeLinearGradientEndPoint(),\n      colorStops = shape.getStrokeLinearGradientColorStops(),\n      grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n    if (colorStops) {\n      for (let n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('strokeStyle', grd);\n    }\n  }\n  _stroke(shape) {\n    const dash = shape.dash(),\n      strokeScaleEnabled = shape.getStrokeScaleEnabled();\n    if (shape.hasStroke()) {\n      if (!strokeScaleEnabled) {\n        this.save();\n        const pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      if (dash && shape.dashEnabled()) {\n        this.setLineDash(dash);\n        this.setAttr('lineDashOffset', shape.dashOffset());\n      }\n      this.setAttr('lineWidth', shape.strokeWidth());\n      if (!shape.getShadowForStrokeEnabled()) {\n        this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n      }\n      const hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n      if (hasLinearGradient) {\n        this._strokeLinearGradient(shape);\n      } else {\n        this.setAttr('strokeStyle', shape.stroke());\n      }\n      shape._strokeFunc(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n  _applyShadow(shape) {\n    var _a, _b, _c;\n    const color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n      blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n      offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n        x: 0,\n        y: 0\n      },\n      scale = shape.getAbsoluteScale(),\n      ratio = this.canvas.getPixelRatio(),\n      scaleX = scale.x * ratio,\n      scaleY = scale.y * ratio;\n    this.setAttr('shadowColor', color);\n    this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n    this.setAttr('shadowOffsetX', offset.x * scaleX);\n    this.setAttr('shadowOffsetY', offset.y * scaleY);\n  }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n  }\n  _fill(shape) {\n    this.save();\n    this.setAttr('fillStyle', shape.colorKey);\n    shape._fillFuncHit(this);\n    this.restore();\n  }\n  strokeShape(shape) {\n    if (shape.hasHitStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {\n    if (shape.hasHitStroke()) {\n      const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (!strokeScaleEnabled) {\n        this.save();\n        const pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      const hitStrokeWidth = shape.hitStrokeWidth();\n      const strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n      this.setAttr('lineWidth', strokeWidth);\n      this.setAttr('strokeStyle', shape.colorKey);\n      shape._strokeFuncHit(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n}\nexports.HitContext = HitContext;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HitCanvas = exports.SceneCanvas = exports.Canvas = void 0;\nconst Util_1 = require(\"./Util\");\nconst Context_1 = require(\"./Context\");\nconst Global_1 = require(\"./Global\");\nlet _pixelRatio;\nfunction getDevicePixelRatio() {\n  if (_pixelRatio) {\n    return _pixelRatio;\n  }\n  const canvas = Util_1.Util.createCanvasElement();\n  const context = canvas.getContext('2d');\n  _pixelRatio = function () {\n    const devicePixelRatio = Global_1.Konva._global.devicePixelRatio || 1,\n      backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }();\n  Util_1.Util.releaseCanvas(canvas);\n  return _pixelRatio;\n}\nclass Canvas {\n  constructor(config) {\n    this.pixelRatio = 1;\n    this.width = 0;\n    this.height = 0;\n    this.isCache = false;\n    const conf = config || {};\n    const pixelRatio = conf.pixelRatio || Global_1.Konva.pixelRatio || getDevicePixelRatio();\n    this.pixelRatio = pixelRatio;\n    this._canvas = Util_1.Util.createCanvasElement();\n    this._canvas.style.padding = '0';\n    this._canvas.style.margin = '0';\n    this._canvas.style.border = '0';\n    this._canvas.style.background = 'transparent';\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0';\n    this._canvas.style.left = '0';\n  }\n  getContext() {\n    return this.context;\n  }\n  getPixelRatio() {\n    return this.pixelRatio;\n  }\n  setPixelRatio(pixelRatio) {\n    const previousRatio = this.pixelRatio;\n    this.pixelRatio = pixelRatio;\n    this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n  }\n  setWidth(width) {\n    this.width = this._canvas.width = width * this.pixelRatio;\n    this._canvas.style.width = width + 'px';\n    const pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  setHeight(height) {\n    this.height = this._canvas.height = height * this.pixelRatio;\n    this._canvas.style.height = height + 'px';\n    const pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  getWidth() {\n    return this.width;\n  }\n  getHeight() {\n    return this.height;\n  }\n  setSize(width, height) {\n    this.setWidth(width || 0);\n    this.setHeight(height || 0);\n  }\n  toDataURL(mimeType, quality) {\n    try {\n      return this._canvas.toDataURL(mimeType, quality);\n    } catch (e) {\n      try {\n        return this._canvas.toDataURL();\n      } catch (err) {\n        Util_1.Util.error('Unable to get data URL. ' + err.message + ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        return '';\n      }\n    }\n  }\n}\nexports.Canvas = Canvas;\nclass SceneCanvas extends Canvas {\n  constructor(config = {\n    width: 0,\n    height: 0,\n    willReadFrequently: false\n  }) {\n    super(config);\n    this.context = new Context_1.SceneContext(this, {\n      willReadFrequently: config.willReadFrequently\n    });\n    this.setSize(config.width, config.height);\n  }\n}\nexports.SceneCanvas = SceneCanvas;\nclass HitCanvas extends Canvas {\n  constructor(config = {\n    width: 0,\n    height: 0\n  }) {\n    super(config);\n    this.hitCanvas = true;\n    this.context = new Context_1.HitContext(this);\n    this.setSize(config.width, config.height);\n  }\n}\nexports.HitCanvas = HitCanvas;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DD = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nexports.DD = {\n  get isDragging() {\n    let flag = false;\n    exports.DD._dragElements.forEach(elem => {\n      if (elem.dragStatus === 'dragging') {\n        flag = true;\n      }\n    });\n    return flag;\n  },\n  justDragged: false,\n  get node() {\n    let node;\n    exports.DD._dragElements.forEach(elem => {\n      node = elem.node;\n    });\n    return node;\n  },\n  _dragElements: new Map(),\n  _drag(evt) {\n    const nodesToFireEvents = [];\n    exports.DD._dragElements.forEach((elem, key) => {\n      const {\n        node\n      } = elem;\n      const stage = node.getStage();\n      stage.setPointersPositions(evt);\n      if (elem.pointerId === undefined) {\n        elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n      }\n      const pos = stage._changedPointerPositions.find(pos => pos.id === elem.pointerId);\n      if (!pos) {\n        return;\n      }\n      if (elem.dragStatus !== 'dragging') {\n        const dragDistance = node.dragDistance();\n        const distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n        if (distance < dragDistance) {\n          return;\n        }\n        node.startDrag({\n          evt\n        });\n        if (!node.isDragging()) {\n          return;\n        }\n      }\n      node._setDragPosition(evt, elem);\n      nodesToFireEvents.push(node);\n    });\n    nodesToFireEvents.forEach(node => {\n      node.fire('dragmove', {\n        type: 'dragmove',\n        target: node,\n        evt: evt\n      }, true);\n    });\n  },\n  _endDragBefore(evt) {\n    const drawNodes = [];\n    exports.DD._dragElements.forEach(elem => {\n      const {\n        node\n      } = elem;\n      const stage = node.getStage();\n      if (evt) {\n        stage.setPointersPositions(evt);\n      }\n      const pos = stage._changedPointerPositions.find(pos => pos.id === elem.pointerId);\n      if (!pos) {\n        return;\n      }\n      if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n        exports.DD.justDragged = true;\n        Global_1.Konva._mouseListenClick = false;\n        Global_1.Konva._touchListenClick = false;\n        Global_1.Konva._pointerListenClick = false;\n        elem.dragStatus = 'stopped';\n      }\n      const drawNode = elem.node.getLayer() || elem.node instanceof Global_1.Konva['Stage'] && elem.node;\n      if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n        drawNodes.push(drawNode);\n      }\n    });\n    drawNodes.forEach(drawNode => {\n      drawNode.draw();\n    });\n  },\n  _endDragAfter(evt) {\n    exports.DD._dragElements.forEach((elem, key) => {\n      if (elem.dragStatus === 'stopped') {\n        elem.node.fire('dragend', {\n          type: 'dragend',\n          target: elem.node,\n          evt: evt\n        }, true);\n      }\n      if (elem.dragStatus !== 'dragging') {\n        exports.DD._dragElements.delete(key);\n      }\n    });\n  }\n};\nif (Global_1.Konva.isBrowser) {\n  window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n  window.addEventListener('touchend', exports.DD._endDragBefore, true);\n  window.addEventListener('touchcancel', exports.DD._endDragBefore, true);\n  window.addEventListener('mousemove', exports.DD._drag);\n  window.addEventListener('touchmove', exports.DD._drag);\n  window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n  window.addEventListener('touchend', exports.DD._endDragAfter, false);\n  window.addEventListener('touchcancel', exports.DD._endDragAfter, false);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Node = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Global_1 = require(\"./Global\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Validators_1 = require(\"./Validators\");\nconst ABSOLUTE_OPACITY = 'absoluteOpacity',\n  ALL_LISTENERS = 'allEventListeners',\n  ABSOLUTE_TRANSFORM = 'absoluteTransform',\n  ABSOLUTE_SCALE = 'absoluteScale',\n  CANVAS = 'canvas',\n  CHANGE = 'Change',\n  CHILDREN = 'children',\n  KONVA = 'konva',\n  LISTENING = 'listening',\n  MOUSEENTER = 'mouseenter',\n  MOUSELEAVE = 'mouseleave',\n  NAME = 'name',\n  SET = 'set',\n  SHAPE = 'Shape',\n  SPACE = ' ',\n  STAGE = 'stage',\n  TRANSFORM = 'transform',\n  UPPER_STAGE = 'Stage',\n  VISIBLE = 'visible',\n  TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nlet idCounter = 1;\nclass Node {\n  constructor(config) {\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n  hasChildren() {\n    return false;\n  }\n  _clearCache(attr) {\n    if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n      this._cache.get(attr).dirty = true;\n    } else if (attr) {\n      this._cache.delete(attr);\n    } else {\n      this._cache.clear();\n    }\n  }\n  _getCache(attr, privateGetter) {\n    let cache = this._cache.get(attr);\n    const isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n    const invalid = cache === undefined || isTransform && cache.dirty === true;\n    if (invalid) {\n      cache = privateGetter.call(this);\n      this._cache.set(attr, cache);\n    }\n    return cache;\n  }\n  _calculate(name, deps, getter) {\n    if (!this._attachedDepsListeners.get(name)) {\n      const depsString = deps.map(dep => dep + 'Change.konva').join(SPACE);\n      this.on(depsString, () => {\n        this._clearCache(name);\n      });\n      this._attachedDepsListeners.set(name, true);\n    }\n    return this._getCache(name, getter);\n  }\n  _getCanvasCache() {\n    return this._cache.get(CANVAS);\n  }\n  _clearSelfAndDescendantCache(attr) {\n    this._clearCache(attr);\n    if (attr === ABSOLUTE_TRANSFORM) {\n      this.fire('absoluteTransformChange');\n    }\n  }\n  clearCache() {\n    if (this._cache.has(CANVAS)) {\n      const {\n        scene,\n        filter,\n        hit\n      } = this._cache.get(CANVAS);\n      Util_1.Util.releaseCanvas(scene, filter, hit);\n      this._cache.delete(CANVAS);\n    }\n    this._clearSelfAndDescendantCache();\n    this._requestDraw();\n    return this;\n  }\n  cache(config) {\n    const conf = config || {};\n    let rect = {};\n    if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n      rect = this.getClientRect({\n        skipTransform: true,\n        relativeTo: this.getParent() || undefined\n      });\n    }\n    let width = Math.ceil(conf.width || rect.width),\n      height = Math.ceil(conf.height || rect.height),\n      pixelRatio = conf.pixelRatio,\n      x = conf.x === undefined ? Math.floor(rect.x) : conf.x,\n      y = conf.y === undefined ? Math.floor(rect.y) : conf.y,\n      offset = conf.offset || 0,\n      drawBorder = conf.drawBorder || false,\n      hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n    if (!width || !height) {\n      Util_1.Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n      return;\n    }\n    const extraPaddingX = Math.abs(Math.round(rect.x) - x) > 0.5 ? 1 : 0;\n    const extraPaddingY = Math.abs(Math.round(rect.y) - y) > 0.5 ? 1 : 0;\n    width += offset * 2 + extraPaddingX;\n    height += offset * 2 + extraPaddingY;\n    x -= offset;\n    y -= offset;\n    const cachedSceneCanvas = new Canvas_1.SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: width,\n        height: height\n      }),\n      cachedFilterCanvas = new Canvas_1.SceneCanvas({\n        pixelRatio: pixelRatio,\n        width: 0,\n        height: 0,\n        willReadFrequently: true\n      }),\n      cachedHitCanvas = new Canvas_1.HitCanvas({\n        pixelRatio: hitCanvasPixelRatio,\n        width: width,\n        height: height\n      }),\n      sceneContext = cachedSceneCanvas.getContext(),\n      hitContext = cachedHitCanvas.getContext();\n    cachedHitCanvas.isCache = true;\n    cachedSceneCanvas.isCache = true;\n    this._cache.delete(CANVAS);\n    this._filterUpToDate = false;\n    if (conf.imageSmoothingEnabled === false) {\n      cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n      cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n    }\n    sceneContext.save();\n    hitContext.save();\n    sceneContext.translate(-x, -y);\n    hitContext.translate(-x, -y);\n    this._isUnderCache = true;\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n    this.drawScene(cachedSceneCanvas, this);\n    this.drawHit(cachedHitCanvas, this);\n    this._isUnderCache = false;\n    sceneContext.restore();\n    hitContext.restore();\n    if (drawBorder) {\n      sceneContext.save();\n      sceneContext.beginPath();\n      sceneContext.rect(0, 0, width, height);\n      sceneContext.closePath();\n      sceneContext.setAttr('strokeStyle', 'red');\n      sceneContext.setAttr('lineWidth', 5);\n      sceneContext.stroke();\n      sceneContext.restore();\n    }\n    this._cache.set(CANVAS, {\n      scene: cachedSceneCanvas,\n      filter: cachedFilterCanvas,\n      hit: cachedHitCanvas,\n      x: x,\n      y: y\n    });\n    this._requestDraw();\n    return this;\n  }\n  isCached() {\n    return this._cache.has(CANVAS);\n  }\n  getClientRect(config) {\n    throw new Error('abstract \"getClientRect\" method call');\n  }\n  _transformedRect(rect, top) {\n    const points = [{\n      x: rect.x,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }, {\n      x: rect.x,\n      y: rect.y + rect.height\n    }];\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    const trans = this.getAbsoluteTransform(top);\n    points.forEach(function (point) {\n      const transformed = trans.point(point);\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  _drawCachedSceneCanvas(context) {\n    context.save();\n    context._applyOpacity(this);\n    context._applyGlobalCompositeOperation(this);\n    const canvasCache = this._getCanvasCache();\n    context.translate(canvasCache.x, canvasCache.y);\n    const cacheCanvas = this._getCachedSceneCanvas();\n    const ratio = cacheCanvas.pixelRatio;\n    context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n    context.restore();\n  }\n  _drawCachedHitCanvas(context) {\n    const canvasCache = this._getCanvasCache(),\n      hitCanvas = canvasCache.hit;\n    context.save();\n    context.translate(canvasCache.x, canvasCache.y);\n    context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n    context.restore();\n  }\n  _getCachedSceneCanvas() {\n    let filters = this.filters(),\n      cachedCanvas = this._getCanvasCache(),\n      sceneCanvas = cachedCanvas.scene,\n      filterCanvas = cachedCanvas.filter,\n      filterContext = filterCanvas.getContext(),\n      len,\n      imageData,\n      n,\n      filter;\n    if (filters) {\n      if (!this._filterUpToDate) {\n        const ratio = sceneCanvas.pixelRatio;\n        filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n        try {\n          len = filters.length;\n          filterContext.clear();\n          filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n          imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n          for (n = 0; n < len; n++) {\n            filter = filters[n];\n            if (typeof filter !== 'function') {\n              Util_1.Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n              continue;\n            }\n            filter.call(this, imageData);\n            filterContext.putImageData(imageData, 0, 0);\n          }\n        } catch (e) {\n          Util_1.Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        }\n        this._filterUpToDate = true;\n      }\n      return filterCanvas;\n    }\n    return sceneCanvas;\n  }\n  on(evtStr, handler) {\n    this._cache && this._cache.delete(ALL_LISTENERS);\n    if (arguments.length === 3) {\n      return this._delegate.apply(this, arguments);\n    }\n    let events = evtStr.split(SPACE),\n      len = events.length,\n      n,\n      event,\n      parts,\n      baseEvent,\n      name;\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1] || '';\n      if (!this.eventListeners[baseEvent]) {\n        this.eventListeners[baseEvent] = [];\n      }\n      this.eventListeners[baseEvent].push({\n        name: name,\n        handler: handler\n      });\n    }\n    return this;\n  }\n  off(evtStr, callback) {\n    let events = (evtStr || '').split(SPACE),\n      len = events.length,\n      n,\n      t,\n      event,\n      parts,\n      baseEvent,\n      name;\n    this._cache && this._cache.delete(ALL_LISTENERS);\n    if (!evtStr) {\n      for (t in this.eventListeners) {\n        this._off(t);\n      }\n    }\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1];\n      if (baseEvent) {\n        if (this.eventListeners[baseEvent]) {\n          this._off(baseEvent, name, callback);\n        }\n      } else {\n        for (t in this.eventListeners) {\n          this._off(t, name, callback);\n        }\n      }\n    }\n    return this;\n  }\n  dispatchEvent(evt) {\n    const e = {\n      target: this,\n      type: evt.type,\n      evt: evt\n    };\n    this.fire(evt.type, e);\n    return this;\n  }\n  addEventListener(type, handler) {\n    this.on(type, function (evt) {\n      handler.call(this, evt.evt);\n    });\n    return this;\n  }\n  removeEventListener(type) {\n    this.off(type);\n    return this;\n  }\n  _delegate(event, selector, handler) {\n    const stopNode = this;\n    this.on(event, function (evt) {\n      const targets = evt.target.findAncestors(selector, true, stopNode);\n      for (let i = 0; i < targets.length; i++) {\n        evt = Util_1.Util.cloneObject(evt);\n        evt.currentTarget = targets[i];\n        handler.call(targets[i], evt);\n      }\n    });\n  }\n  remove() {\n    if (this.isDragging()) {\n      this.stopDrag();\n    }\n    DragAndDrop_1.DD._dragElements.delete(this._id);\n    this._remove();\n    return this;\n  }\n  _clearCaches() {\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n    this._clearSelfAndDescendantCache(STAGE);\n    this._clearSelfAndDescendantCache(VISIBLE);\n    this._clearSelfAndDescendantCache(LISTENING);\n  }\n  _remove() {\n    this._clearCaches();\n    const parent = this.getParent();\n    if (parent && parent.children) {\n      parent.children.splice(this.index, 1);\n      parent._setChildrenIndices();\n      this.parent = null;\n    }\n  }\n  destroy() {\n    this.remove();\n    this.clearCache();\n    return this;\n  }\n  getAttr(attr) {\n    const method = 'get' + Util_1.Util._capitalize(attr);\n    if (Util_1.Util._isFunction(this[method])) {\n      return this[method]();\n    }\n    return this.attrs[attr];\n  }\n  getAncestors() {\n    let parent = this.getParent(),\n      ancestors = [];\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.getParent();\n    }\n    return ancestors;\n  }\n  getAttrs() {\n    return this.attrs || {};\n  }\n  setAttrs(config) {\n    this._batchTransformChanges(() => {\n      let key, method;\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Util_1.Util._capitalize(key);\n        if (Util_1.Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          this._setAttr(key, config[key]);\n        }\n      }\n    });\n    return this;\n  }\n  isListening() {\n    return this._getCache(LISTENING, this._isListening);\n  }\n  _isListening(relativeTo) {\n    const listening = this.listening();\n    if (!listening) {\n      return false;\n    }\n    const parent = this.getParent();\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isListening(relativeTo);\n    } else {\n      return true;\n    }\n  }\n  isVisible() {\n    return this._getCache(VISIBLE, this._isVisible);\n  }\n  _isVisible(relativeTo) {\n    const visible = this.visible();\n    if (!visible) {\n      return false;\n    }\n    const parent = this.getParent();\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isVisible(relativeTo);\n    } else {\n      return true;\n    }\n  }\n  shouldDrawHit(top, skipDragCheck = false) {\n    if (top) {\n      return this._isVisible(top) && this._isListening(top);\n    }\n    const layer = this.getLayer();\n    let layerUnderDrag = false;\n    DragAndDrop_1.DD._dragElements.forEach(elem => {\n      if (elem.dragStatus !== 'dragging') {\n        return;\n      } else if (elem.node.nodeType === 'Stage') {\n        layerUnderDrag = true;\n      } else if (elem.node.getLayer() === layer) {\n        layerUnderDrag = true;\n      }\n    });\n    const dragSkip = !skipDragCheck && !Global_1.Konva.hitOnDragEnabled && (layerUnderDrag || Global_1.Konva.isTransforming());\n    return this.isListening() && this.isVisible() && !dragSkip;\n  }\n  show() {\n    this.visible(true);\n    return this;\n  }\n  hide() {\n    this.visible(false);\n    return this;\n  }\n  getZIndex() {\n    return this.index || 0;\n  }\n  getAbsoluteZIndex() {\n    let depth = this.getDepth(),\n      that = this,\n      index = 0,\n      nodes,\n      len,\n      n,\n      child;\n    function addChildren(children) {\n      nodes = [];\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        child = children[n];\n        index++;\n        if (child.nodeType !== SHAPE) {\n          nodes = nodes.concat(child.getChildren().slice());\n        }\n        if (child._id === that._id) {\n          n = len;\n        }\n      }\n      if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n        addChildren(nodes);\n      }\n    }\n    const stage = this.getStage();\n    if (that.nodeType !== UPPER_STAGE && stage) {\n      addChildren(stage.getChildren());\n    }\n    return index;\n  }\n  getDepth() {\n    let depth = 0,\n      parent = this.parent;\n    while (parent) {\n      depth++;\n      parent = parent.parent;\n    }\n    return depth;\n  }\n  _batchTransformChanges(func) {\n    this._batchingTransformChange = true;\n    func();\n    this._batchingTransformChange = false;\n    if (this._needClearTransformCache) {\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    }\n    this._needClearTransformCache = false;\n  }\n  setPosition(pos) {\n    this._batchTransformChanges(() => {\n      this.x(pos.x);\n      this.y(pos.y);\n    });\n    return this;\n  }\n  getPosition() {\n    return {\n      x: this.x(),\n      y: this.y()\n    };\n  }\n  getRelativePointerPosition() {\n    const stage = this.getStage();\n    if (!stage) {\n      return null;\n    }\n    const pos = stage.getPointerPosition();\n    if (!pos) {\n      return null;\n    }\n    const transform = this.getAbsoluteTransform().copy();\n    transform.invert();\n    return transform.point(pos);\n  }\n  getAbsolutePosition(top) {\n    let haveCachedParent = false;\n    let parent = this.parent;\n    while (parent) {\n      if (parent.isCached()) {\n        haveCachedParent = true;\n        break;\n      }\n      parent = parent.parent;\n    }\n    if (haveCachedParent && !top) {\n      top = true;\n    }\n    const absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n      absoluteTransform = new Util_1.Transform(),\n      offset = this.offset();\n    absoluteTransform.m = absoluteMatrix.slice();\n    absoluteTransform.translate(offset.x, offset.y);\n    return absoluteTransform.getTranslation();\n  }\n  setAbsolutePosition(pos) {\n    const {\n      x,\n      y,\n      ...origTrans\n    } = this._clearTransform();\n    this.attrs.x = x;\n    this.attrs.y = y;\n    this._clearCache(TRANSFORM);\n    const it = this._getAbsoluteTransform().copy();\n    it.invert();\n    it.translate(pos.x, pos.y);\n    pos = {\n      x: this.attrs.x + it.getTranslation().x,\n      y: this.attrs.y + it.getTranslation().y\n    };\n    this._setTransform(origTrans);\n    this.setPosition({\n      x: pos.x,\n      y: pos.y\n    });\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    return this;\n  }\n  _setTransform(trans) {\n    let key;\n    for (key in trans) {\n      this.attrs[key] = trans[key];\n    }\n  }\n  _clearTransform() {\n    const trans = {\n      x: this.x(),\n      y: this.y(),\n      rotation: this.rotation(),\n      scaleX: this.scaleX(),\n      scaleY: this.scaleY(),\n      offsetX: this.offsetX(),\n      offsetY: this.offsetY(),\n      skewX: this.skewX(),\n      skewY: this.skewY()\n    };\n    this.attrs.x = 0;\n    this.attrs.y = 0;\n    this.attrs.rotation = 0;\n    this.attrs.scaleX = 1;\n    this.attrs.scaleY = 1;\n    this.attrs.offsetX = 0;\n    this.attrs.offsetY = 0;\n    this.attrs.skewX = 0;\n    this.attrs.skewY = 0;\n    return trans;\n  }\n  move(change) {\n    let changeX = change.x,\n      changeY = change.y,\n      x = this.x(),\n      y = this.y();\n    if (changeX !== undefined) {\n      x += changeX;\n    }\n    if (changeY !== undefined) {\n      y += changeY;\n    }\n    this.setPosition({\n      x: x,\n      y: y\n    });\n    return this;\n  }\n  _eachAncestorReverse(func, top) {\n    let family = [],\n      parent = this.getParent(),\n      len,\n      n;\n    if (top && top._id === this._id) {\n      return;\n    }\n    family.unshift(this);\n    while (parent && (!top || parent._id !== top._id)) {\n      family.unshift(parent);\n      parent = parent.parent;\n    }\n    len = family.length;\n    for (n = 0; n < len; n++) {\n      func(family[n]);\n    }\n  }\n  rotate(theta) {\n    this.rotation(this.rotation() + theta);\n    return this;\n  }\n  moveToTop() {\n    if (!this.parent) {\n      Util_1.Util.warn('Node has no parent. moveToTop function is ignored.');\n      return false;\n    }\n    const index = this.index,\n      len = this.parent.getChildren().length;\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveUp() {\n    if (!this.parent) {\n      Util_1.Util.warn('Node has no parent. moveUp function is ignored.');\n      return false;\n    }\n    const index = this.index,\n      len = this.parent.getChildren().length;\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index + 1, 0, this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveDown() {\n    if (!this.parent) {\n      Util_1.Util.warn('Node has no parent. moveDown function is ignored.');\n      return false;\n    }\n    const index = this.index;\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index - 1, 0, this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  moveToBottom() {\n    if (!this.parent) {\n      Util_1.Util.warn('Node has no parent. moveToBottom function is ignored.');\n      return false;\n    }\n    const index = this.index;\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.unshift(this);\n      this.parent._setChildrenIndices();\n      return true;\n    }\n    return false;\n  }\n  setZIndex(zIndex) {\n    if (!this.parent) {\n      Util_1.Util.warn('Node has no parent. zIndex parameter is ignored.');\n      return this;\n    }\n    if (zIndex < 0 || zIndex >= this.parent.children.length) {\n      Util_1.Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n    }\n    const index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.splice(zIndex, 0, this);\n    this.parent._setChildrenIndices();\n    return this;\n  }\n  getAbsoluteOpacity() {\n    return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n  }\n  _getAbsoluteOpacity() {\n    let absOpacity = this.opacity();\n    const parent = this.getParent();\n    if (parent && !parent._isUnderCache) {\n      absOpacity *= parent.getAbsoluteOpacity();\n    }\n    return absOpacity;\n  }\n  moveTo(newContainer) {\n    if (this.getParent() !== newContainer) {\n      this._remove();\n      newContainer.add(this);\n    }\n    return this;\n  }\n  toObject() {\n    let attrs = this.getAttrs(),\n      key,\n      val,\n      getter,\n      defaultValue,\n      nonPlainObject;\n    const obj = {\n      attrs: {},\n      className: this.getClassName()\n    };\n    for (key in attrs) {\n      val = attrs[key];\n      nonPlainObject = Util_1.Util.isObject(val) && !Util_1.Util._isPlainObject(val) && !Util_1.Util._isArray(val);\n      if (nonPlainObject) {\n        continue;\n      }\n      getter = typeof this[key] === 'function' && this[key];\n      delete attrs[key];\n      defaultValue = getter ? getter.call(this) : null;\n      attrs[key] = val;\n      if (defaultValue !== val) {\n        obj.attrs[key] = val;\n      }\n    }\n    return Util_1.Util._prepareToStringify(obj);\n  }\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n  getParent() {\n    return this.parent;\n  }\n  findAncestors(selector, includeSelf, stopNode) {\n    const res = [];\n    if (includeSelf && this._isMatch(selector)) {\n      res.push(this);\n    }\n    let ancestor = this.parent;\n    while (ancestor) {\n      if (ancestor === stopNode) {\n        return res;\n      }\n      if (ancestor._isMatch(selector)) {\n        res.push(ancestor);\n      }\n      ancestor = ancestor.parent;\n    }\n    return res;\n  }\n  isAncestorOf(node) {\n    return false;\n  }\n  findAncestor(selector, includeSelf, stopNode) {\n    return this.findAncestors(selector, includeSelf, stopNode)[0];\n  }\n  _isMatch(selector) {\n    if (!selector) {\n      return false;\n    }\n    if (typeof selector === 'function') {\n      return selector(this);\n    }\n    let selectorArr = selector.replace(/ /g, '').split(','),\n      len = selectorArr.length,\n      n,\n      sel;\n    for (n = 0; n < len; n++) {\n      sel = selectorArr[n];\n      if (!Util_1.Util.isValidSelector(sel)) {\n        Util_1.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n        Util_1.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n        Util_1.Util.warn('Konva is awesome, right?');\n      }\n      if (sel.charAt(0) === '#') {\n        if (this.id() === sel.slice(1)) {\n          return true;\n        }\n      } else if (sel.charAt(0) === '.') {\n        if (this.hasName(sel.slice(1))) {\n          return true;\n        }\n      } else if (this.className === sel || this.nodeType === sel) {\n        return true;\n      }\n    }\n    return false;\n  }\n  getLayer() {\n    const parent = this.getParent();\n    return parent ? parent.getLayer() : null;\n  }\n  getStage() {\n    return this._getCache(STAGE, this._getStage);\n  }\n  _getStage() {\n    const parent = this.getParent();\n    if (parent) {\n      return parent.getStage();\n    } else {\n      return null;\n    }\n  }\n  fire(eventType, evt = {}, bubble) {\n    evt.target = evt.target || this;\n    if (bubble) {\n      this._fireAndBubble(eventType, evt);\n    } else {\n      this._fire(eventType, evt);\n    }\n    return this;\n  }\n  getAbsoluteTransform(top) {\n    if (top) {\n      return this._getAbsoluteTransform(top);\n    } else {\n      return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n  }\n  _getAbsoluteTransform(top) {\n    let at;\n    if (top) {\n      at = new Util_1.Transform();\n      this._eachAncestorReverse(function (node) {\n        const transformsEnabled = node.transformsEnabled();\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n        }\n      }, top);\n      return at;\n    } else {\n      at = this._cache.get(ABSOLUTE_TRANSFORM) || new Util_1.Transform();\n      if (this.parent) {\n        this.parent.getAbsoluteTransform().copyInto(at);\n      } else {\n        at.reset();\n      }\n      const transformsEnabled = this.transformsEnabled();\n      if (transformsEnabled === 'all') {\n        at.multiply(this.getTransform());\n      } else if (transformsEnabled === 'position') {\n        const x = this.attrs.x || 0;\n        const y = this.attrs.y || 0;\n        const offsetX = this.attrs.offsetX || 0;\n        const offsetY = this.attrs.offsetY || 0;\n        at.translate(x - offsetX, y - offsetY);\n      }\n      at.dirty = false;\n      return at;\n    }\n  }\n  getAbsoluteScale(top) {\n    let parent = this;\n    while (parent) {\n      if (parent._isUnderCache) {\n        top = parent;\n      }\n      parent = parent.getParent();\n    }\n    const transform = this.getAbsoluteTransform(top);\n    const attrs = transform.decompose();\n    return {\n      x: attrs.scaleX,\n      y: attrs.scaleY\n    };\n  }\n  getAbsoluteRotation() {\n    return this.getAbsoluteTransform().decompose().rotation;\n  }\n  getTransform() {\n    return this._getCache(TRANSFORM, this._getTransform);\n  }\n  _getTransform() {\n    var _a, _b;\n    const m = this._cache.get(TRANSFORM) || new Util_1.Transform();\n    m.reset();\n    const x = this.x(),\n      y = this.y(),\n      rotation = Global_1.Konva.getAngle(this.rotation()),\n      scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n      scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n      skewX = this.attrs.skewX || 0,\n      skewY = this.attrs.skewY || 0,\n      offsetX = this.attrs.offsetX || 0,\n      offsetY = this.attrs.offsetY || 0;\n    if (x !== 0 || y !== 0) {\n      m.translate(x, y);\n    }\n    if (rotation !== 0) {\n      m.rotate(rotation);\n    }\n    if (skewX !== 0 || skewY !== 0) {\n      m.skew(skewX, skewY);\n    }\n    if (scaleX !== 1 || scaleY !== 1) {\n      m.scale(scaleX, scaleY);\n    }\n    if (offsetX !== 0 || offsetY !== 0) {\n      m.translate(-1 * offsetX, -1 * offsetY);\n    }\n    m.dirty = false;\n    return m;\n  }\n  clone(obj) {\n    let attrs = Util_1.Util.cloneObject(this.attrs),\n      key,\n      allListeners,\n      len,\n      n,\n      listener;\n    for (key in obj) {\n      attrs[key] = obj[key];\n    }\n    const node = new this.constructor(attrs);\n    for (key in this.eventListeners) {\n      allListeners = this.eventListeners[key];\n      len = allListeners.length;\n      for (n = 0; n < len; n++) {\n        listener = allListeners[n];\n        if (listener.name.indexOf(KONVA) < 0) {\n          if (!node.eventListeners[key]) {\n            node.eventListeners[key] = [];\n          }\n          node.eventListeners[key].push(listener);\n        }\n      }\n    }\n    return node;\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    const box = this.getClientRect();\n    const stage = this.getStage(),\n      x = config.x !== undefined ? config.x : Math.floor(box.x),\n      y = config.y !== undefined ? config.y : Math.floor(box.y),\n      pixelRatio = config.pixelRatio || 1,\n      canvas = new Canvas_1.SceneCanvas({\n        width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n        height: config.height || Math.ceil(box.height) || (stage ? stage.height() : 0),\n        pixelRatio: pixelRatio\n      }),\n      context = canvas.getContext();\n    const bufferCanvas = new Canvas_1.SceneCanvas({\n      width: canvas.width / canvas.pixelRatio + Math.abs(x),\n      height: canvas.height / canvas.pixelRatio + Math.abs(y),\n      pixelRatio: canvas.pixelRatio\n    });\n    if (config.imageSmoothingEnabled === false) {\n      context._context.imageSmoothingEnabled = false;\n    }\n    context.save();\n    if (x || y) {\n      context.translate(-1 * x, -1 * y);\n    }\n    this.drawScene(canvas, undefined, bufferCanvas);\n    context.restore();\n    return canvas;\n  }\n  toCanvas(config) {\n    return this._toKonvaCanvas(config)._canvas;\n  }\n  toDataURL(config) {\n    config = config || {};\n    const mimeType = config.mimeType || null,\n      quality = config.quality || null;\n    const url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n    if (config.callback) {\n      config.callback(url);\n    }\n    return url;\n  }\n  toImage(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n        Util_1.Util._urlToImage(this.toDataURL(config), function (img) {\n          resolve(img);\n          callback === null || callback === void 0 ? void 0 : callback(img);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n  toBlob(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n        this.toCanvas(config).toBlob(blob => {\n          resolve(blob);\n          callback === null || callback === void 0 ? void 0 : callback(blob);\n        }, config === null || config === void 0 ? void 0 : config.mimeType, config === null || config === void 0 ? void 0 : config.quality);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n  setSize(size) {\n    this.width(size.width);\n    this.height(size.height);\n    return this;\n  }\n  getSize() {\n    return {\n      width: this.width(),\n      height: this.height()\n    };\n  }\n  getClassName() {\n    return this.className || this.nodeType;\n  }\n  getType() {\n    return this.nodeType;\n  }\n  getDragDistance() {\n    if (this.attrs.dragDistance !== undefined) {\n      return this.attrs.dragDistance;\n    } else if (this.parent) {\n      return this.parent.getDragDistance();\n    } else {\n      return Global_1.Konva.dragDistance;\n    }\n  }\n  _off(type, name, callback) {\n    let evtListeners = this.eventListeners[type],\n      i,\n      evtName,\n      handler;\n    for (i = 0; i < evtListeners.length; i++) {\n      evtName = evtListeners[i].name;\n      handler = evtListeners[i].handler;\n      if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n        evtListeners.splice(i, 1);\n        if (evtListeners.length === 0) {\n          delete this.eventListeners[type];\n          break;\n        }\n        i--;\n      }\n    }\n  }\n  _fireChangeEvent(attr, oldVal, newVal) {\n    this._fire(attr + CHANGE, {\n      oldVal: oldVal,\n      newVal: newVal\n    });\n  }\n  addName(name) {\n    if (!this.hasName(name)) {\n      const oldName = this.name();\n      const newName = oldName ? oldName + ' ' + name : name;\n      this.name(newName);\n    }\n    return this;\n  }\n  hasName(name) {\n    if (!name) {\n      return false;\n    }\n    const fullName = this.name();\n    if (!fullName) {\n      return false;\n    }\n    const names = (fullName || '').split(/\\s/g);\n    return names.indexOf(name) !== -1;\n  }\n  removeName(name) {\n    const names = (this.name() || '').split(/\\s/g);\n    const index = names.indexOf(name);\n    if (index !== -1) {\n      names.splice(index, 1);\n      this.name(names.join(' '));\n    }\n    return this;\n  }\n  setAttr(attr, val) {\n    const func = this[SET + Util_1.Util._capitalize(attr)];\n    if (Util_1.Util._isFunction(func)) {\n      func.call(this, val);\n    } else {\n      this._setAttr(attr, val);\n    }\n    return this;\n  }\n  _requestDraw() {\n    if (Global_1.Konva.autoDrawEnabled) {\n      const drawNode = this.getLayer() || this.getStage();\n      drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n    }\n  }\n  _setAttr(key, val) {\n    const oldVal = this.attrs[key];\n    if (oldVal === val && !Util_1.Util.isObject(val)) {\n      return;\n    }\n    if (val === undefined || val === null) {\n      delete this.attrs[key];\n    } else {\n      this.attrs[key] = val;\n    }\n    if (this._shouldFireChangeEvents) {\n      this._fireChangeEvent(key, oldVal, val);\n    }\n    this._requestDraw();\n  }\n  _setComponentAttr(key, component, val) {\n    let oldVal;\n    if (val !== undefined) {\n      oldVal = this.attrs[key];\n      if (!oldVal) {\n        this.attrs[key] = this.getAttr(key);\n      }\n      this.attrs[key][component] = val;\n      this._fireChangeEvent(key, oldVal, val);\n    }\n  }\n  _fireAndBubble(eventType, evt, compareShape) {\n    if (evt && this.nodeType === SHAPE) {\n      evt.target = this;\n    }\n    const shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n    if (!shouldStop) {\n      this._fire(eventType, evt);\n      const stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n      if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n        if (compareShape && compareShape.parent) {\n          this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n        } else {\n          this._fireAndBubble.call(this.parent, eventType, evt);\n        }\n      }\n    }\n  }\n  _getProtoListeners(eventType) {\n    var _a, _b, _c;\n    const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\n    let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\n    if (events === undefined) {\n      events = [];\n      let obj = Object.getPrototypeOf(this);\n      while (obj) {\n        const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\n        events.push(...hierarchyEvents);\n        obj = Object.getPrototypeOf(obj);\n      }\n      allListeners[eventType] = events;\n      this._cache.set(ALL_LISTENERS, allListeners);\n    }\n    return events;\n  }\n  _fire(eventType, evt) {\n    evt = evt || {};\n    evt.currentTarget = this;\n    evt.type = eventType;\n    const topListeners = this._getProtoListeners(eventType);\n    if (topListeners) {\n      for (var i = 0; i < topListeners.length; i++) {\n        topListeners[i].handler.call(this, evt);\n      }\n    }\n    const selfListeners = this.eventListeners[eventType];\n    if (selfListeners) {\n      for (var i = 0; i < selfListeners.length; i++) {\n        selfListeners[i].handler.call(this, evt);\n      }\n    }\n  }\n  draw() {\n    this.drawScene();\n    this.drawHit();\n    return this;\n  }\n  _createDragElement(evt) {\n    const pointerId = evt ? evt.pointerId : undefined;\n    const stage = this.getStage();\n    const ap = this.getAbsolutePosition();\n    if (!stage) {\n      return;\n    }\n    const pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n    DragAndDrop_1.DD._dragElements.set(this._id, {\n      node: this,\n      startPointerPos: pos,\n      offset: {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      },\n      dragStatus: 'ready',\n      pointerId\n    });\n  }\n  startDrag(evt, bubbleEvent = true) {\n    if (!DragAndDrop_1.DD._dragElements.has(this._id)) {\n      this._createDragElement(evt);\n    }\n    const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n    elem.dragStatus = 'dragging';\n    this.fire('dragstart', {\n      type: 'dragstart',\n      target: this,\n      evt: evt && evt.evt\n    }, bubbleEvent);\n  }\n  _setDragPosition(evt, elem) {\n    const pos = this.getStage()._getPointerById(elem.pointerId);\n    if (!pos) {\n      return;\n    }\n    let newNodePos = {\n      x: pos.x - elem.offset.x,\n      y: pos.y - elem.offset.y\n    };\n    const dbf = this.dragBoundFunc();\n    if (dbf !== undefined) {\n      const bounded = dbf.call(this, newNodePos, evt);\n      if (!bounded) {\n        Util_1.Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n      } else {\n        newNodePos = bounded;\n      }\n    }\n    if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n      this.setAbsolutePosition(newNodePos);\n      this._requestDraw();\n    }\n    this._lastPos = newNodePos;\n  }\n  stopDrag(evt) {\n    const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n    if (elem) {\n      elem.dragStatus = 'stopped';\n    }\n    DragAndDrop_1.DD._endDragBefore(evt);\n    DragAndDrop_1.DD._endDragAfter(evt);\n  }\n  setDraggable(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  }\n  isDragging() {\n    const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n    return elem ? elem.dragStatus === 'dragging' : false;\n  }\n  _listenDrag() {\n    this._dragCleanup();\n    this.on('mousedown.konva touchstart.konva', function (evt) {\n      const shouldCheckButton = evt.evt['button'] !== undefined;\n      const canDrag = !shouldCheckButton || Global_1.Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n      if (!canDrag) {\n        return;\n      }\n      if (this.isDragging()) {\n        return;\n      }\n      let hasDraggingChild = false;\n      DragAndDrop_1.DD._dragElements.forEach(elem => {\n        if (this.isAncestorOf(elem.node)) {\n          hasDraggingChild = true;\n        }\n      });\n      if (!hasDraggingChild) {\n        this._createDragElement(evt);\n      }\n    });\n  }\n  _dragChange() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      this._dragCleanup();\n      const stage = this.getStage();\n      if (!stage) {\n        return;\n      }\n      const dragElement = DragAndDrop_1.DD._dragElements.get(this._id);\n      const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n      const isReady = dragElement && dragElement.dragStatus === 'ready';\n      if (isDragging) {\n        this.stopDrag();\n      } else if (isReady) {\n        DragAndDrop_1.DD._dragElements.delete(this._id);\n      }\n    }\n  }\n  _dragCleanup() {\n    this.off('mousedown.konva');\n    this.off('touchstart.konva');\n  }\n  isClientRectOnScreen(margin = {\n    x: 0,\n    y: 0\n  }) {\n    const stage = this.getStage();\n    if (!stage) {\n      return false;\n    }\n    const screenRect = {\n      x: -margin.x,\n      y: -margin.y,\n      width: stage.width() + 2 * margin.x,\n      height: stage.height() + 2 * margin.y\n    };\n    return Util_1.Util.haveIntersection(screenRect, this.getClientRect());\n  }\n  static create(data, container) {\n    if (Util_1.Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  }\n  static _createNode(obj, container) {\n    let className = Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n    if (container) {\n      obj.attrs.container = container;\n    }\n    if (!Global_1.Konva[className]) {\n      Util_1.Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n      className = 'Shape';\n    }\n    const Class = Global_1.Konva[className];\n    no = new Class(obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(Node._createNode(children[n]));\n      }\n    }\n    return no;\n  }\n}\nexports.Node = Node;\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n  this._clearCache(TRANSFORM);\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory_1.Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'y', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'opacity', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'name', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'id', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'rotation', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'scaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'skewY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'offsetY', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'dragDistance', undefined, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'width', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'height', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'listening', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'preventDefault', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'filters', undefined, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'transformsEnabled', 'all', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\nconst Factory_1 = require(\"./Factory\");\nconst Node_1 = require(\"./Node\");\nconst Validators_1 = require(\"./Validators\");\nclass Container extends Node_1.Node {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n  }\n  getChildren(filterFunc) {\n    if (!filterFunc) {\n      return this.children || [];\n    }\n    const children = this.children || [];\n    const results = [];\n    children.forEach(function (child) {\n      if (filterFunc(child)) {\n        results.push(child);\n      }\n    });\n    return results;\n  }\n  hasChildren() {\n    return this.getChildren().length > 0;\n  }\n  removeChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.remove();\n    });\n    this.children = [];\n    this._requestDraw();\n    return this;\n  }\n  destroyChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.destroy();\n    });\n    this.children = [];\n    this._requestDraw();\n    return this;\n  }\n  add(...children) {\n    if (children.length === 0) {\n      return this;\n    }\n    if (children.length > 1) {\n      for (let i = 0; i < children.length; i++) {\n        this.add(children[i]);\n      }\n      return this;\n    }\n    const child = children[0];\n    if (child.getParent()) {\n      child.moveTo(this);\n      return this;\n    }\n    this._validateAdd(child);\n    child.index = this.getChildren().length;\n    child.parent = this;\n    child._clearCaches();\n    this.getChildren().push(child);\n    this._fire('add', {\n      child: child\n    });\n    this._requestDraw();\n    return this;\n  }\n  destroy() {\n    if (this.hasChildren()) {\n      this.destroyChildren();\n    }\n    super.destroy();\n    return this;\n  }\n  find(selector) {\n    return this._generalFind(selector, false);\n  }\n  findOne(selector) {\n    const result = this._generalFind(selector, true);\n    return result.length > 0 ? result[0] : undefined;\n  }\n  _generalFind(selector, findOne) {\n    const retArr = [];\n    this._descendants(node => {\n      const valid = node._isMatch(selector);\n      if (valid) {\n        retArr.push(node);\n      }\n      if (valid && findOne) {\n        return true;\n      }\n      return false;\n    });\n    return retArr;\n  }\n  _descendants(fn) {\n    let shouldStop = false;\n    const children = this.getChildren();\n    for (const child of children) {\n      shouldStop = fn(child);\n      if (shouldStop) {\n        return true;\n      }\n      if (!child.hasChildren()) {\n        continue;\n      }\n      shouldStop = child._descendants(fn);\n      if (shouldStop) {\n        return true;\n      }\n    }\n    return false;\n  }\n  toObject() {\n    const obj = Node_1.Node.prototype.toObject.call(this);\n    obj.children = [];\n    this.getChildren().forEach(child => {\n      obj.children.push(child.toObject());\n    });\n    return obj;\n  }\n  isAncestorOf(node) {\n    let parent = node.getParent();\n    while (parent) {\n      if (parent._id === this._id) {\n        return true;\n      }\n      parent = parent.getParent();\n    }\n    return false;\n  }\n  clone(obj) {\n    const node = Node_1.Node.prototype.clone.call(this, obj);\n    this.getChildren().forEach(function (no) {\n      node.add(no.clone());\n    });\n    return node;\n  }\n  getAllIntersections(pos) {\n    const arr = [];\n    this.find('Shape').forEach(shape => {\n      if (shape.isVisible() && shape.intersects(pos)) {\n        arr.push(shape);\n      }\n    });\n    return arr;\n  }\n  _clearSelfAndDescendantCache(attr) {\n    var _a;\n    super._clearSelfAndDescendantCache(attr);\n    if (this.isCached()) {\n      return;\n    }\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n      node._clearSelfAndDescendantCache(attr);\n    });\n  }\n  _setChildrenIndices() {\n    var _a;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n      child.index = n;\n    });\n    this._requestDraw();\n  }\n  drawScene(can, top, bufferCanvas) {\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.getCanvas(),\n      context = canvas && canvas.getContext(),\n      cachedCanvas = this._getCanvasCache(),\n      cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n    const caching = canvas && canvas.isCache;\n    if (!this.isVisible() && !caching) {\n      return this;\n    }\n    if (cachedSceneCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedSceneCanvas(context);\n      context.restore();\n    } else {\n      this._drawChildren('drawScene', canvas, top, bufferCanvas);\n    }\n    return this;\n  }\n  drawHit(can, top) {\n    if (!this.shouldDrawHit(top)) {\n      return this;\n    }\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.hitCanvas,\n      context = canvas && canvas.getContext(),\n      cachedCanvas = this._getCanvasCache(),\n      cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n    if (cachedHitCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedHitCanvas(context);\n      context.restore();\n    } else {\n      this._drawChildren('drawHit', canvas, top);\n    }\n    return this;\n  }\n  _drawChildren(drawMethod, canvas, top, bufferCanvas) {\n    var _a;\n    const context = canvas && canvas.getContext(),\n      clipWidth = this.clipWidth(),\n      clipHeight = this.clipHeight(),\n      clipFunc = this.clipFunc(),\n      hasClip = typeof clipWidth === 'number' && typeof clipHeight === 'number' || clipFunc;\n    const selfCache = top === this;\n    if (hasClip) {\n      context.save();\n      const transform = this.getAbsoluteTransform(top);\n      let m = transform.getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      context.beginPath();\n      let clipArgs;\n      if (clipFunc) {\n        clipArgs = clipFunc.call(this, context, this);\n      } else {\n        const clipX = this.clipX();\n        const clipY = this.clipY();\n        context.rect(clipX || 0, clipY || 0, clipWidth, clipHeight);\n      }\n      context.clip.apply(context, clipArgs);\n      m = transform.copy().invert().getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    const hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n    if (hasComposition) {\n      context.save();\n      context._applyGlobalCompositeOperation(this);\n    }\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      child[drawMethod](canvas, top, bufferCanvas);\n    });\n    if (hasComposition) {\n      context.restore();\n    }\n    if (hasClip) {\n      context.restore();\n    }\n  }\n  getClientRect(config = {}) {\n    var _a;\n    const skipTransform = config.skipTransform;\n    const relativeTo = config.relativeTo;\n    let minX, minY, maxX, maxY;\n    let selfRect = {\n      x: Infinity,\n      y: Infinity,\n      width: 0,\n      height: 0\n    };\n    const that = this;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      if (!child.visible()) {\n        return;\n      }\n      const rect = child.getClientRect({\n        relativeTo: that,\n        skipShadow: config.skipShadow,\n        skipStroke: config.skipStroke\n      });\n      if (rect.width === 0 && rect.height === 0) {\n        return;\n      }\n      if (minX === undefined) {\n        minX = rect.x;\n        minY = rect.y;\n        maxX = rect.x + rect.width;\n        maxY = rect.y + rect.height;\n      } else {\n        minX = Math.min(minX, rect.x);\n        minY = Math.min(minY, rect.y);\n        maxX = Math.max(maxX, rect.x + rect.width);\n        maxY = Math.max(maxY, rect.y + rect.height);\n      }\n    });\n    const shapes = this.find('Shape');\n    let hasVisible = false;\n    for (let i = 0; i < shapes.length; i++) {\n      const shape = shapes[i];\n      if (shape._isVisible(this)) {\n        hasVisible = true;\n        break;\n      }\n    }\n    if (hasVisible && minX !== undefined) {\n      selfRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    } else {\n      selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    if (!skipTransform) {\n      return this._transformedRect(selfRect, relativeTo);\n    }\n    return selfRect;\n  }\n}\nexports.Container = Container;\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCapturedShape = getCapturedShape;\nexports.createEvent = createEvent;\nexports.hasPointerCapture = hasPointerCapture;\nexports.setPointerCapture = setPointerCapture;\nexports.releaseCapture = releaseCapture;\nconst Global_1 = require(\"./Global\");\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\nfunction getCapturedShape(pointerId) {\n  return Captures.get(pointerId);\n}\nfunction createEvent(evt) {\n  return {\n    evt,\n    pointerId: evt.pointerId\n  };\n}\nfunction hasPointerCapture(pointerId, shape) {\n  return Captures.get(pointerId) === shape;\n}\nfunction setPointerCapture(pointerId, shape) {\n  releaseCapture(pointerId);\n  const stage = shape.getStage();\n  if (!stage) return;\n  Captures.set(pointerId, shape);\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n  }\n}\nfunction releaseCapture(pointerId, target) {\n  const shape = Captures.get(pointerId);\n  if (!shape) return;\n  const stage = shape.getStage();\n  if (stage && stage.content) {}\n  Captures.delete(pointerId);\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stage = exports.stages = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nconst Canvas_1 = require(\"./Canvas\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nconst STAGE = 'Stage',\n  STRING = 'string',\n  PX = 'px',\n  MOUSEOUT = 'mouseout',\n  MOUSELEAVE = 'mouseleave',\n  MOUSEOVER = 'mouseover',\n  MOUSEENTER = 'mouseenter',\n  MOUSEMOVE = 'mousemove',\n  MOUSEDOWN = 'mousedown',\n  MOUSEUP = 'mouseup',\n  POINTERMOVE = 'pointermove',\n  POINTERDOWN = 'pointerdown',\n  POINTERUP = 'pointerup',\n  POINTERCANCEL = 'pointercancel',\n  LOSTPOINTERCAPTURE = 'lostpointercapture',\n  POINTEROUT = 'pointerout',\n  POINTERLEAVE = 'pointerleave',\n  POINTEROVER = 'pointerover',\n  POINTERENTER = 'pointerenter',\n  CONTEXTMENU = 'contextmenu',\n  TOUCHSTART = 'touchstart',\n  TOUCHEND = 'touchend',\n  TOUCHMOVE = 'touchmove',\n  TOUCHCANCEL = 'touchcancel',\n  WHEEL = 'wheel',\n  MAX_LAYERS_NUMBER = 5,\n  EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nconst EVENTS_MAP = {\n  mouse: {\n    [POINTEROUT]: MOUSEOUT,\n    [POINTERLEAVE]: MOUSELEAVE,\n    [POINTEROVER]: MOUSEOVER,\n    [POINTERENTER]: MOUSEENTER,\n    [POINTERMOVE]: MOUSEMOVE,\n    [POINTERDOWN]: MOUSEDOWN,\n    [POINTERUP]: MOUSEUP,\n    [POINTERCANCEL]: 'mousecancel',\n    pointerclick: 'click',\n    pointerdblclick: 'dblclick'\n  },\n  touch: {\n    [POINTEROUT]: 'touchout',\n    [POINTERLEAVE]: 'touchleave',\n    [POINTEROVER]: 'touchover',\n    [POINTERENTER]: 'touchenter',\n    [POINTERMOVE]: TOUCHMOVE,\n    [POINTERDOWN]: TOUCHSTART,\n    [POINTERUP]: TOUCHEND,\n    [POINTERCANCEL]: TOUCHCANCEL,\n    pointerclick: 'tap',\n    pointerdblclick: 'dbltap'\n  },\n  pointer: {\n    [POINTEROUT]: POINTEROUT,\n    [POINTERLEAVE]: POINTERLEAVE,\n    [POINTEROVER]: POINTEROVER,\n    [POINTERENTER]: POINTERENTER,\n    [POINTERMOVE]: POINTERMOVE,\n    [POINTERDOWN]: POINTERDOWN,\n    [POINTERUP]: POINTERUP,\n    [POINTERCANCEL]: POINTERCANCEL,\n    pointerclick: 'pointerclick',\n    pointerdblclick: 'pointerdblclick'\n  }\n};\nconst getEventType = type => {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n  return 'mouse';\n};\nconst getEventsMap = eventType => {\n  const type = getEventType(eventType);\n  if (type === 'pointer') {\n    return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\nfunction checkNoClip(attrs = {}) {\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n  return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n  constructor(config) {\n    super(checkNoClip(config));\n    this._pointerPositions = [];\n    this._changedPointerPositions = [];\n    this._buildDOM();\n    this._bindContentEvents();\n    exports.stages.push(this);\n    this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n    this.on('visibleChange.konva', this._checkVisibility);\n    this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n      checkNoClip(this.attrs);\n    });\n    this._checkVisibility();\n  }\n  _validateAdd(child) {\n    const isLayer = child.getType() === 'Layer';\n    const isFastLayer = child.getType() === 'FastLayer';\n    const valid = isLayer || isFastLayer;\n    if (!valid) {\n      Util_1.Util.throw('You may only add layers to the stage.');\n    }\n  }\n  _checkVisibility() {\n    if (!this.content) {\n      return;\n    }\n    const style = this.visible() ? '' : 'none';\n    this.content.style.display = style;\n  }\n  setContainer(container) {\n    if (typeof container === STRING) {\n      if (container.charAt(0) === '.') {\n        const className = container.slice(1);\n        container = document.getElementsByClassName(className)[0];\n      } else {\n        var id;\n        if (container.charAt(0) !== '#') {\n          id = container;\n        } else {\n          id = container.slice(1);\n        }\n        container = document.getElementById(id);\n      }\n      if (!container) {\n        throw 'Can not find container in document with id ' + id;\n      }\n    }\n    this._setAttr('container', container);\n    if (this.content) {\n      if (this.content.parentElement) {\n        this.content.parentElement.removeChild(this.content);\n      }\n      container.appendChild(this.content);\n    }\n    return this;\n  }\n  shouldDrawHit() {\n    return true;\n  }\n  clear() {\n    const layers = this.children,\n      len = layers.length;\n    for (let n = 0; n < len; n++) {\n      layers[n].clear();\n    }\n    return this;\n  }\n  clone(obj) {\n    if (!obj) {\n      obj = {};\n    }\n    obj.container = typeof document !== 'undefined' && document.createElement('div');\n    return Container_1.Container.prototype.clone.call(this, obj);\n  }\n  destroy() {\n    super.destroy();\n    const content = this.content;\n    if (content && Util_1.Util._isInDocument(content)) {\n      this.container().removeChild(content);\n    }\n    const index = exports.stages.indexOf(this);\n    if (index > -1) {\n      exports.stages.splice(index, 1);\n    }\n    Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n    return this;\n  }\n  getPointerPosition() {\n    const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n    if (!pos) {\n      Util_1.Util.warn(NO_POINTERS_MESSAGE);\n      return null;\n    }\n    return {\n      x: pos.x,\n      y: pos.y\n    };\n  }\n  _getPointerById(id) {\n    return this._pointerPositions.find(p => p.id === id);\n  }\n  getPointersPositions() {\n    return this._pointerPositions;\n  }\n  getStage() {\n    return this;\n  }\n  getContent() {\n    return this.content;\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.x = config.x || 0;\n    config.y = config.y || 0;\n    config.width = config.width || this.width();\n    config.height = config.height || this.height();\n    const canvas = new Canvas_1.SceneCanvas({\n      width: config.width,\n      height: config.height,\n      pixelRatio: config.pixelRatio || 1\n    });\n    const _context = canvas.getContext()._context;\n    const layers = this.children;\n    if (config.x || config.y) {\n      _context.translate(-1 * config.x, -1 * config.y);\n    }\n    layers.forEach(function (layer) {\n      if (!layer.isVisible()) {\n        return;\n      }\n      const layerCanvas = layer._toKonvaCanvas(config);\n      _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n    });\n    return canvas;\n  }\n  getIntersection(pos) {\n    if (!pos) {\n      return null;\n    }\n    const layers = this.children,\n      len = layers.length,\n      end = len - 1;\n    for (let n = end; n >= 0; n--) {\n      const shape = layers[n].getIntersection(pos);\n      if (shape) {\n        return shape;\n      }\n    }\n    return null;\n  }\n  _resizeDOM() {\n    const width = this.width();\n    const height = this.height();\n    if (this.content) {\n      this.content.style.width = width + PX;\n      this.content.style.height = height + PX;\n    }\n    this.bufferCanvas.setSize(width, height);\n    this.bufferHitCanvas.setSize(width, height);\n    this.children.forEach(layer => {\n      layer.setSize({\n        width,\n        height\n      });\n      layer.draw();\n    });\n  }\n  add(layer, ...rest) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n      return this;\n    }\n    super.add(layer);\n    const length = this.children.length;\n    if (length > MAX_LAYERS_NUMBER) {\n      Util_1.Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n    }\n    layer.setSize({\n      width: this.width(),\n      height: this.height()\n    });\n    layer.draw();\n    if (Global_1.Konva.isBrowser) {\n      this.content.appendChild(layer.canvas._canvas);\n    }\n    return this;\n  }\n  getParent() {\n    return null;\n  }\n  getLayer() {\n    return null;\n  }\n  hasPointerCapture(pointerId) {\n    return PointerEvents.hasPointerCapture(pointerId, this);\n  }\n  setPointerCapture(pointerId) {\n    PointerEvents.setPointerCapture(pointerId, this);\n  }\n  releaseCapture(pointerId) {\n    PointerEvents.releaseCapture(pointerId, this);\n  }\n  getLayers() {\n    return this.children;\n  }\n  _bindContentEvents() {\n    if (!Global_1.Konva.isBrowser) {\n      return;\n    }\n    EVENTS.forEach(([event, methodName]) => {\n      this.content.addEventListener(event, evt => {\n        this[methodName](evt);\n      }, {\n        passive: false\n      });\n    });\n  }\n  _pointerenter(evt) {\n    this.setPointersPositions(evt);\n    const events = getEventsMap(evt.type);\n    if (events) {\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _pointerover(evt) {\n    this.setPointersPositions(evt);\n    const events = getEventsMap(evt.type);\n    if (events) {\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _getTargetShape(evenType) {\n    let shape = this[evenType + 'targetShape'];\n    if (shape && !shape.getStage()) {\n      shape = null;\n    }\n    return shape;\n  }\n  _pointerleave(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    const targetShape = this._getTargetShape(eventType);\n    const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\n    if (targetShape && eventsEnabled) {\n      targetShape._fireAndBubble(events.pointerout, {\n        evt: evt\n      });\n      targetShape._fireAndBubble(events.pointerleave, {\n        evt: evt\n      });\n      this._fire(events.pointerleave, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n      this[eventType + 'targetShape'] = null;\n    } else if (eventsEnabled) {\n      this._fire(events.pointerleave, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n      this._fire(events.pointerout, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n    this.pointerPos = null;\n    this._pointerPositions = [];\n  }\n  _pointerdown(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    let triggeredOnShape = false;\n    this._changedPointerPositions.forEach(pos => {\n      const shape = this.getIntersection(pos);\n      DragAndDrop_1.DD.justDragged = false;\n      Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n      if (!shape || !shape.isListening()) {\n        this[eventType + 'ClickStartShape'] = undefined;\n        return;\n      }\n      if (Global_1.Konva.capturePointerEventsEnabled) {\n        shape.setPointerCapture(pos.id);\n      }\n      this[eventType + 'ClickStartShape'] = shape;\n      shape._fireAndBubble(events.pointerdown, {\n        evt: evt,\n        pointerId: pos.id\n      });\n      triggeredOnShape = true;\n      const isTouch = evt.type.indexOf('touch') >= 0;\n      if (shape.preventDefault() && evt.cancelable && isTouch) {\n        evt.preventDefault();\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointerdown, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._pointerPositions[0].id\n      });\n    }\n  }\n  _pointermove(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    if (Global_1.Konva.isDragging() && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n      evt.preventDefault();\n    }\n    this.setPointersPositions(evt);\n    const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\n    if (!eventsEnabled) {\n      return;\n    }\n    const processedShapesIds = {};\n    let triggeredOnShape = false;\n    const targetShape = this._getTargetShape(eventType);\n    this._changedPointerPositions.forEach(pos => {\n      const shape = PointerEvents.getCapturedShape(pos.id) || this.getIntersection(pos);\n      const pointerId = pos.id;\n      const event = {\n        evt: evt,\n        pointerId\n      };\n      const differentTarget = targetShape !== shape;\n      if (differentTarget && targetShape) {\n        targetShape._fireAndBubble(events.pointerout, {\n          ...event\n        }, shape);\n        targetShape._fireAndBubble(events.pointerleave, {\n          ...event\n        }, shape);\n      }\n      if (shape) {\n        if (processedShapesIds[shape._id]) {\n          return;\n        }\n        processedShapesIds[shape._id] = true;\n      }\n      if (shape && shape.isListening()) {\n        triggeredOnShape = true;\n        if (differentTarget) {\n          shape._fireAndBubble(events.pointerover, {\n            ...event\n          }, targetShape);\n          shape._fireAndBubble(events.pointerenter, {\n            ...event\n          }, targetShape);\n          this[eventType + 'targetShape'] = shape;\n        }\n        shape._fireAndBubble(events.pointermove, {\n          ...event\n        });\n      } else {\n        if (targetShape) {\n          this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n          this[eventType + 'targetShape'] = null;\n        }\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointermove, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._changedPointerPositions[0].id\n      });\n    }\n  }\n  _pointerup(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    const clickStartShape = this[eventType + 'ClickStartShape'];\n    const clickEndShape = this[eventType + 'ClickEndShape'];\n    const processedShapesIds = {};\n    let triggeredOnShape = false;\n    this._changedPointerPositions.forEach(pos => {\n      const shape = PointerEvents.getCapturedShape(pos.id) || this.getIntersection(pos);\n      if (shape) {\n        shape.releaseCapture(pos.id);\n        if (processedShapesIds[shape._id]) {\n          return;\n        }\n        processedShapesIds[shape._id] = true;\n      }\n      const pointerId = pos.id;\n      const event = {\n        evt: evt,\n        pointerId\n      };\n      let fireDblClick = false;\n      if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n        fireDblClick = true;\n        clearTimeout(this[eventType + 'DblTimeout']);\n      } else if (!DragAndDrop_1.DD.justDragged) {\n        Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n        clearTimeout(this[eventType + 'DblTimeout']);\n      }\n      this[eventType + 'DblTimeout'] = setTimeout(function () {\n        Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n      }, Global_1.Konva.dblClickWindow);\n      if (shape && shape.isListening()) {\n        triggeredOnShape = true;\n        this[eventType + 'ClickEndShape'] = shape;\n        shape._fireAndBubble(events.pointerup, {\n          ...event\n        });\n        if (Global_1.Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n          shape._fireAndBubble(events.pointerclick, {\n            ...event\n          });\n          if (fireDblClick && clickEndShape && clickEndShape === shape) {\n            shape._fireAndBubble(events.pointerdblclick, {\n              ...event\n            });\n          }\n        }\n      } else {\n        this[eventType + 'ClickEndShape'] = null;\n        if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n          this._fire(events.pointerclick, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n        }\n        if (fireDblClick) {\n          this._fire(events.pointerdblclick, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n        }\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointerup, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._changedPointerPositions[0].id\n      });\n    }\n    Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n    if (evt.cancelable && eventType !== 'touch' && eventType !== 'pointer') {\n      evt.preventDefault();\n    }\n  }\n  _contextmenu(evt) {\n    this.setPointersPositions(evt);\n    const shape = this.getIntersection(this.getPointerPosition());\n    if (shape && shape.isListening()) {\n      shape._fireAndBubble(CONTEXTMENU, {\n        evt: evt\n      });\n    } else {\n      this._fire(CONTEXTMENU, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _wheel(evt) {\n    this.setPointersPositions(evt);\n    const shape = this.getIntersection(this.getPointerPosition());\n    if (shape && shape.isListening()) {\n      shape._fireAndBubble(WHEEL, {\n        evt: evt\n      });\n    } else {\n      this._fire(WHEEL, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _pointercancel(evt) {\n    this.setPointersPositions(evt);\n    const shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n    if (shape) {\n      shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n    }\n    PointerEvents.releaseCapture(evt.pointerId);\n  }\n  _lostpointercapture(evt) {\n    PointerEvents.releaseCapture(evt.pointerId);\n  }\n  setPointersPositions(evt) {\n    const contentPosition = this._getContentPosition();\n    let x = null,\n      y = null;\n    evt = evt ? evt : window.event;\n    if (evt.touches !== undefined) {\n      this._pointerPositions = [];\n      this._changedPointerPositions = [];\n      Array.prototype.forEach.call(evt.touches, touch => {\n        this._pointerPositions.push({\n          id: touch.identifier,\n          x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n          y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n        });\n      });\n      Array.prototype.forEach.call(evt.changedTouches || evt.touches, touch => {\n        this._changedPointerPositions.push({\n          id: touch.identifier,\n          x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n          y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n        });\n      });\n    } else {\n      x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n      y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n      this.pointerPos = {\n        x: x,\n        y: y\n      };\n      this._pointerPositions = [{\n        x,\n        y,\n        id: Util_1.Util._getFirstPointerId(evt)\n      }];\n      this._changedPointerPositions = [{\n        x,\n        y,\n        id: Util_1.Util._getFirstPointerId(evt)\n      }];\n    }\n  }\n  _setPointerPosition(evt) {\n    Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n    this.setPointersPositions(evt);\n  }\n  _getContentPosition() {\n    if (!this.content || !this.content.getBoundingClientRect) {\n      return {\n        top: 0,\n        left: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n    const rect = this.content.getBoundingClientRect();\n    return {\n      top: rect.top,\n      left: rect.left,\n      scaleX: rect.width / this.content.clientWidth || 1,\n      scaleY: rect.height / this.content.clientHeight || 1\n    };\n  }\n  _buildDOM() {\n    this.bufferCanvas = new Canvas_1.SceneCanvas({\n      width: this.width(),\n      height: this.height()\n    });\n    this.bufferHitCanvas = new Canvas_1.HitCanvas({\n      pixelRatio: 1,\n      width: this.width(),\n      height: this.height()\n    });\n    if (!Global_1.Konva.isBrowser) {\n      return;\n    }\n    const container = this.container();\n    if (!container) {\n      throw 'Stage has no container. A container is required.';\n    }\n    container.innerHTML = '';\n    this.content = document.createElement('div');\n    this.content.style.position = 'relative';\n    this.content.style.userSelect = 'none';\n    this.content.className = 'konvajs-content';\n    this.content.setAttribute('role', 'presentation');\n    container.appendChild(this.content);\n    this._resizeDOM();\n  }\n  cache() {\n    Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n    return this;\n  }\n  clearCache() {\n    return this;\n  }\n  batchDraw() {\n    this.getChildren().forEach(function (layer) {\n      layer.batchDraw();\n    });\n    return this;\n  }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\nif (Global_1.Konva.isBrowser) {\n  document.addEventListener('visibilitychange', () => {\n    exports.stages.forEach(stage => {\n      stage.batchDraw();\n    });\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shape = exports.shapes = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Node_1 = require(\"./Node\");\nconst Validators_1 = require(\"./Validators\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nconst HAS_SHADOW = 'hasShadow';\nconst SHADOW_RGBA = 'shadowRGBA';\nconst patternImage = 'patternImage';\nconst linearGradient = 'linearGradient';\nconst radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n  if (dummyContext) {\n    return dummyContext;\n  }\n  dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\n  return dummyContext;\n}\nexports.shapes = {};\nfunction _fillFunc(context) {\n  const fillRule = this.attrs.fillRule;\n  if (fillRule) {\n    context.fill(fillRule);\n  } else {\n    context.fill();\n  }\n}\nfunction _strokeFunc(context) {\n  context.stroke();\n}\nfunction _fillFuncHit(context) {\n  const fillRule = this.attrs.fillRule;\n  if (fillRule) {\n    context.fill(fillRule);\n  } else {\n    context.fill();\n  }\n}\nfunction _strokeFuncHit(context) {\n  context.stroke();\n}\nfunction _clearHasShadowCache() {\n  this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n  this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n  this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n  this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n  this._clearCache(radialGradient);\n}\nclass Shape extends Node_1.Node {\n  constructor(config) {\n    super(config);\n    let key;\n    while (true) {\n      key = Util_1.Util.getRandomColor();\n      if (key && !(key in exports.shapes)) {\n        break;\n      }\n    }\n    this.colorKey = key;\n    exports.shapes[key] = this;\n  }\n  getContext() {\n    Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n    return this.getLayer().getContext();\n  }\n  getCanvas() {\n    Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n    return this.getLayer().getCanvas();\n  }\n  getSceneFunc() {\n    return this.attrs.sceneFunc || this['_sceneFunc'];\n  }\n  getHitFunc() {\n    return this.attrs.hitFunc || this['_hitFunc'];\n  }\n  hasShadow() {\n    return this._getCache(HAS_SHADOW, this._hasShadow);\n  }\n  _hasShadow() {\n    return this.shadowEnabled() && this.shadowOpacity() !== 0 && !!(this.shadowColor() || this.shadowBlur() || this.shadowOffsetX() || this.shadowOffsetY());\n  }\n  _getFillPattern() {\n    return this._getCache(patternImage, this.__getFillPattern);\n  }\n  __getFillPattern() {\n    if (this.fillPatternImage()) {\n      const ctx = getDummyContext();\n      const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n      if (pattern && pattern.setTransform) {\n        const tr = new Util_1.Transform();\n        tr.translate(this.fillPatternX(), this.fillPatternY());\n        tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\n        tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n        tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n        const m = tr.getMatrix();\n        const matrix = typeof DOMMatrix === 'undefined' ? {\n          a: m[0],\n          b: m[1],\n          c: m[2],\n          d: m[3],\n          e: m[4],\n          f: m[5]\n        } : new DOMMatrix(m);\n        pattern.setTransform(matrix);\n      }\n      return pattern;\n    }\n  }\n  _getLinearGradient() {\n    return this._getCache(linearGradient, this.__getLinearGradient);\n  }\n  __getLinearGradient() {\n    const colorStops = this.fillLinearGradientColorStops();\n    if (colorStops) {\n      const ctx = getDummyContext();\n      const start = this.fillLinearGradientStartPoint();\n      const end = this.fillLinearGradientEndPoint();\n      const grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n      for (let n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      return grd;\n    }\n  }\n  _getRadialGradient() {\n    return this._getCache(radialGradient, this.__getRadialGradient);\n  }\n  __getRadialGradient() {\n    const colorStops = this.fillRadialGradientColorStops();\n    if (colorStops) {\n      const ctx = getDummyContext();\n      const start = this.fillRadialGradientStartPoint();\n      const end = this.fillRadialGradientEndPoint();\n      const grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n      for (let n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      return grd;\n    }\n  }\n  getShadowRGBA() {\n    return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n  }\n  _getShadowRGBA() {\n    if (!this.hasShadow()) {\n      return;\n    }\n    const rgba = Util_1.Util.colorToRGBA(this.shadowColor());\n    if (rgba) {\n      return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + rgba.a * (this.shadowOpacity() || 1) + ')';\n    }\n  }\n  hasFill() {\n    return this._calculate('hasFill', ['fillEnabled', 'fill', 'fillPatternImage', 'fillLinearGradientColorStops', 'fillRadialGradientColorStops'], () => {\n      return this.fillEnabled() && !!(this.fill() || this.fillPatternImage() || this.fillLinearGradientColorStops() || this.fillRadialGradientColorStops());\n    });\n  }\n  hasStroke() {\n    return this._calculate('hasStroke', ['strokeEnabled', 'strokeWidth', 'stroke', 'strokeLinearGradientColorStops'], () => {\n      return this.strokeEnabled() && this.strokeWidth() && !!(this.stroke() || this.strokeLinearGradientColorStops());\n    });\n  }\n  hasHitStroke() {\n    const width = this.hitStrokeWidth();\n    if (width === 'auto') {\n      return this.hasStroke();\n    }\n    return this.strokeEnabled() && !!width;\n  }\n  intersects(point) {\n    const stage = this.getStage();\n    if (!stage) {\n      return false;\n    }\n    const bufferHitCanvas = stage.bufferHitCanvas;\n    bufferHitCanvas.getContext().clear();\n    this.drawHit(bufferHitCanvas, undefined, true);\n    const p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n    return p[3] > 0;\n  }\n  destroy() {\n    Node_1.Node.prototype.destroy.call(this);\n    delete exports.shapes[this.colorKey];\n    delete this.colorKey;\n    return this;\n  }\n  _useBufferCanvas(forceFill) {\n    var _a;\n    const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n    if (!perfectDrawEnabled) {\n      return false;\n    }\n    const hasFill = forceFill || this.hasFill();\n    const hasStroke = this.hasStroke();\n    const isTransparent = this.getAbsoluteOpacity() !== 1;\n    if (hasFill && hasStroke && isTransparent) {\n      return true;\n    }\n    const hasShadow = this.hasShadow();\n    const strokeForShadow = this.shadowForStrokeEnabled();\n    if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n      return true;\n    }\n    return false;\n  }\n  setStrokeHitEnabled(val) {\n    Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n    if (val) {\n      this.hitStrokeWidth('auto');\n    } else {\n      this.hitStrokeWidth(0);\n    }\n  }\n  getStrokeHitEnabled() {\n    if (this.hitStrokeWidth() === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  getSelfRect() {\n    const size = this.size();\n    return {\n      x: this._centroid ? -size.width / 2 : 0,\n      y: this._centroid ? -size.height / 2 : 0,\n      width: size.width,\n      height: size.height\n    };\n  }\n  getClientRect(config = {}) {\n    let hasCachedParent = false;\n    let parent = this.getParent();\n    while (parent) {\n      if (parent.isCached()) {\n        hasCachedParent = true;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    const skipTransform = config.skipTransform;\n    const relativeTo = config.relativeTo || hasCachedParent && this.getStage() || undefined;\n    const fillRect = this.getSelfRect();\n    const applyStroke = !config.skipStroke && this.hasStroke();\n    const strokeWidth = applyStroke && this.strokeWidth() || 0;\n    const fillAndStrokeWidth = fillRect.width + strokeWidth;\n    const fillAndStrokeHeight = fillRect.height + strokeWidth;\n    const applyShadow = !config.skipShadow && this.hasShadow();\n    const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n    const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n    const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n    const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n    const blurRadius = applyShadow && this.shadowBlur() || 0;\n    const width = preWidth + blurRadius * 2;\n    const height = preHeight + blurRadius * 2;\n    const rect = {\n      width: width,\n      height: height,\n      x: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n      y: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n    };\n    if (!skipTransform) {\n      return this._transformedRect(rect, relativeTo);\n    }\n    return rect;\n  }\n  drawScene(can, top, bufferCanvas) {\n    const layer = this.getLayer();\n    let canvas = can || layer.getCanvas(),\n      context = canvas.getContext(),\n      cachedCanvas = this._getCanvasCache(),\n      drawFunc = this.getSceneFunc(),\n      hasShadow = this.hasShadow(),\n      stage,\n      bufferContext;\n    const skipBuffer = canvas.isCache;\n    const cachingSelf = top === this;\n    if (!this.isVisible() && !cachingSelf) {\n      return this;\n    }\n    if (cachedCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedSceneCanvas(context);\n      context.restore();\n      return this;\n    }\n    if (!drawFunc) {\n      return this;\n    }\n    context.save();\n    if (this._useBufferCanvas() && !skipBuffer) {\n      stage = this.getStage();\n      const bc = bufferCanvas || stage.bufferCanvas;\n      bufferContext = bc.getContext();\n      bufferContext.clear();\n      bufferContext.save();\n      bufferContext._applyLineJoin(this);\n      var o = this.getAbsoluteTransform(top).getMatrix();\n      bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n      drawFunc.call(this, bufferContext, this);\n      bufferContext.restore();\n      const ratio = bc.pixelRatio;\n      if (hasShadow) {\n        context._applyShadow(this);\n      }\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      context.drawImage(bc._canvas, 0, 0, bc.width / ratio, bc.height / ratio);\n    } else {\n      context._applyLineJoin(this);\n      if (!cachingSelf) {\n        var o = this.getAbsoluteTransform(top).getMatrix();\n        context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n      }\n      if (hasShadow) {\n        context._applyShadow(this);\n      }\n      drawFunc.call(this, context, this);\n    }\n    context.restore();\n    return this;\n  }\n  drawHit(can, top, skipDragCheck = false) {\n    if (!this.shouldDrawHit(top, skipDragCheck)) {\n      return this;\n    }\n    const layer = this.getLayer(),\n      canvas = can || layer.hitCanvas,\n      context = canvas && canvas.getContext(),\n      drawFunc = this.hitFunc() || this.sceneFunc(),\n      cachedCanvas = this._getCanvasCache(),\n      cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n    if (!this.colorKey) {\n      Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n    }\n    if (cachedHitCanvas) {\n      context.save();\n      const m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      this._drawCachedHitCanvas(context);\n      context.restore();\n      return this;\n    }\n    if (!drawFunc) {\n      return this;\n    }\n    context.save();\n    context._applyLineJoin(this);\n    const selfCache = this === top;\n    if (!selfCache) {\n      const o = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n    }\n    drawFunc.call(this, context, this);\n    context.restore();\n    return this;\n  }\n  drawHitFromCache(alphaThreshold = 0) {\n    const cachedCanvas = this._getCanvasCache(),\n      sceneCanvas = this._getCachedSceneCanvas(),\n      hitCanvas = cachedCanvas.hit,\n      hitContext = hitCanvas.getContext(),\n      hitWidth = hitCanvas.getWidth(),\n      hitHeight = hitCanvas.getHeight();\n    hitContext.clear();\n    hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n    try {\n      const hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n      const hitData = hitImageData.data;\n      const len = hitData.length;\n      const rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\n      for (let i = 0; i < len; i += 4) {\n        const alpha = hitData[i + 3];\n        if (alpha > alphaThreshold) {\n          hitData[i] = rgbColorKey.r;\n          hitData[i + 1] = rgbColorKey.g;\n          hitData[i + 2] = rgbColorKey.b;\n          hitData[i + 3] = 255;\n        } else {\n          hitData[i + 3] = 0;\n        }\n      }\n      hitContext.putImageData(hitImageData, 0, 0);\n    } catch (e) {\n      Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n    }\n    return this;\n  }\n  hasPointerCapture(pointerId) {\n    return PointerEvents.hasPointerCapture(pointerId, this);\n  }\n  setPointerCapture(pointerId) {\n    PointerEvents.setPointerCapture(pointerId, this);\n  }\n  releaseCapture(pointerId) {\n    PointerEvents.releaseCapture(pointerId, this);\n  }\n}\nexports.Shape = Shape;\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n(0, Global_2._registerNode)(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.backCompat(Shape, {\n  dashArray: 'dash',\n  getDashArray: 'getDash',\n  setDashArray: 'getDash',\n  drawFunc: 'sceneFunc',\n  getDrawFunc: 'getSceneFunc',\n  setDrawFunc: 'setSceneFunc',\n  drawHitFunc: 'hitFunc',\n  getDrawHitFunc: 'getHitFunc',\n  setDrawHitFunc: 'setHitFunc'\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Layer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Node_1 = require(\"./Node\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Validators_1 = require(\"./Validators\");\nconst Shape_1 = require(\"./Shape\");\nconst Global_1 = require(\"./Global\");\nconst HASH = '#',\n  BEFORE_DRAW = 'beforeDraw',\n  DRAW = 'draw',\n  INTERSECTION_OFFSETS = [{\n    x: 0,\n    y: 0\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 1,\n    y: 1\n  }, {\n    x: -1,\n    y: 1\n  }],\n  INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n  constructor(config) {\n    super(config);\n    this.canvas = new Canvas_1.SceneCanvas();\n    this.hitCanvas = new Canvas_1.HitCanvas({\n      pixelRatio: 1\n    });\n    this._waitingForDraw = false;\n    this.on('visibleChange.konva', this._checkVisibility);\n    this._checkVisibility();\n    this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n    this._setSmoothEnabled();\n  }\n  createPNGStream() {\n    const c = this.canvas._canvas;\n    return c.createPNGStream();\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  getNativeCanvasElement() {\n    return this.canvas._canvas;\n  }\n  getHitCanvas() {\n    return this.hitCanvas;\n  }\n  getContext() {\n    return this.getCanvas().getContext();\n  }\n  clear(bounds) {\n    this.getContext().clear(bounds);\n    this.getHitCanvas().getContext().clear(bounds);\n    return this;\n  }\n  setZIndex(index) {\n    super.setZIndex(index);\n    const stage = this.getStage();\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      if (index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n    }\n    return this;\n  }\n  moveToTop() {\n    Node_1.Node.prototype.moveToTop.call(this);\n    const stage = this.getStage();\n    if (stage && stage.content) {\n      stage.content.removeChild(this.getNativeCanvasElement());\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n    return true;\n  }\n  moveUp() {\n    const moved = Node_1.Node.prototype.moveUp.call(this);\n    if (!moved) {\n      return false;\n    }\n    const stage = this.getStage();\n    if (!stage || !stage.content) {\n      return false;\n    }\n    stage.content.removeChild(this.getNativeCanvasElement());\n    if (this.index < stage.children.length - 1) {\n      stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n    } else {\n      stage.content.appendChild(this.getNativeCanvasElement());\n    }\n    return true;\n  }\n  moveDown() {\n    if (Node_1.Node.prototype.moveDown.call(this)) {\n      const stage = this.getStage();\n      if (stage) {\n        const children = stage.children;\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  moveToBottom() {\n    if (Node_1.Node.prototype.moveToBottom.call(this)) {\n      const stage = this.getStage();\n      if (stage) {\n        const children = stage.children;\n        if (stage.content) {\n          stage.content.removeChild(this.getNativeCanvasElement());\n          stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  getLayer() {\n    return this;\n  }\n  remove() {\n    const _canvas = this.getNativeCanvasElement();\n    Node_1.Node.prototype.remove.call(this);\n    if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n      _canvas.parentNode.removeChild(_canvas);\n    }\n    return this;\n  }\n  getStage() {\n    return this.parent;\n  }\n  setSize({\n    width,\n    height\n  }) {\n    this.canvas.setSize(width, height);\n    this.hitCanvas.setSize(width, height);\n    this._setSmoothEnabled();\n    return this;\n  }\n  _validateAdd(child) {\n    const type = child.getType();\n    if (type !== 'Group' && type !== 'Shape') {\n      Util_1.Util.throw('You may only add groups and shapes to a layer.');\n    }\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.width = config.width || this.getWidth();\n    config.height = config.height || this.getHeight();\n    config.x = config.x !== undefined ? config.x : this.x();\n    config.y = config.y !== undefined ? config.y : this.y();\n    return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n  }\n  _checkVisibility() {\n    const visible = this.visible();\n    if (visible) {\n      this.canvas._canvas.style.display = 'block';\n    } else {\n      this.canvas._canvas.style.display = 'none';\n    }\n  }\n  _setSmoothEnabled() {\n    this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n  }\n  getWidth() {\n    if (this.parent) {\n      return this.parent.width();\n    }\n  }\n  setWidth() {\n    Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n  }\n  getHeight() {\n    if (this.parent) {\n      return this.parent.height();\n    }\n  }\n  setHeight() {\n    Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n  }\n  batchDraw() {\n    if (!this._waitingForDraw) {\n      this._waitingForDraw = true;\n      Util_1.Util.requestAnimFrame(() => {\n        this.draw();\n        this._waitingForDraw = false;\n      });\n    }\n    return this;\n  }\n  getIntersection(pos) {\n    if (!this.isListening() || !this.isVisible()) {\n      return null;\n    }\n    let spiralSearchDistance = 1;\n    let continueSearch = false;\n    while (true) {\n      for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n        const intersectionOffset = INTERSECTION_OFFSETS[i];\n        const obj = this._getIntersection({\n          x: pos.x + intersectionOffset.x * spiralSearchDistance,\n          y: pos.y + intersectionOffset.y * spiralSearchDistance\n        });\n        const shape = obj.shape;\n        if (shape) {\n          return shape;\n        }\n        continueSearch = !!obj.antialiased;\n        if (!obj.antialiased) {\n          break;\n        }\n      }\n      if (continueSearch) {\n        spiralSearchDistance += 1;\n      } else {\n        return null;\n      }\n    }\n  }\n  _getIntersection(pos) {\n    const ratio = this.hitCanvas.pixelRatio;\n    const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n    const p3 = p[3];\n    if (p3 === 255) {\n      const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n      const shape = Shape_1.shapes[HASH + colorKey];\n      if (shape) {\n        return {\n          shape: shape\n        };\n      }\n      return {\n        antialiased: true\n      };\n    } else if (p3 > 0) {\n      return {\n        antialiased: true\n      };\n    }\n    return {};\n  }\n  drawScene(can, top) {\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.getCanvas();\n    this._fire(BEFORE_DRAW, {\n      node: this\n    });\n    if (this.clearBeforeDraw()) {\n      canvas.getContext().clear();\n    }\n    Container_1.Container.prototype.drawScene.call(this, canvas, top);\n    this._fire(DRAW, {\n      node: this\n    });\n    return this;\n  }\n  drawHit(can, top) {\n    const layer = this.getLayer(),\n      canvas = can || layer && layer.hitCanvas;\n    if (layer && layer.clearBeforeDraw()) {\n      layer.getHitCanvas().getContext().clear();\n    }\n    Container_1.Container.prototype.drawHit.call(this, canvas, top);\n    return this;\n  }\n  enableHitGraph() {\n    this.hitGraphEnabled(true);\n    return this;\n  }\n  disableHitGraph() {\n    this.hitGraphEnabled(false);\n    return this;\n  }\n  setHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    this.listening(val);\n  }\n  getHitGraphEnabled(val) {\n    Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n    return this.listening();\n  }\n  toggleHitCanvas() {\n    if (!this.parent || !this.parent['content']) {\n      return;\n    }\n    const parent = this.parent;\n    const added = !!this.hitCanvas._canvas.parentNode;\n    if (added) {\n      parent.content.removeChild(this.hitCanvas._canvas);\n    } else {\n      parent.content.appendChild(this.hitCanvas._canvas);\n    }\n  }\n  destroy() {\n    Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n    return super.destroy();\n  }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FastLayer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Layer_1 = require(\"./Layer\");\nconst Global_1 = require(\"./Global\");\nclass FastLayer extends Layer_1.Layer {\n  constructor(attrs) {\n    super(attrs);\n    this.listening(false);\n    Util_1.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n  }\n}\nexports.FastLayer = FastLayer;\nFastLayer.prototype.nodeType = 'FastLayer';\n(0, Global_1._registerNode)(FastLayer);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Group = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nclass Group extends Container_1.Container {\n  _validateAdd(child) {\n    const type = child.getType();\n    if (type !== 'Group' && type !== 'Shape') {\n      Util_1.Util.throw('You may only add groups and shapes to groups.');\n    }\n  }\n}\nexports.Group = Group;\nGroup.prototype.nodeType = 'Group';\n(0, Global_1._registerNode)(Group);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst now = function () {\n  if (Global_1.glob.performance && Global_1.glob.performance.now) {\n    return function () {\n      return Global_1.glob.performance.now();\n    };\n  }\n  return function () {\n    return new Date().getTime();\n  };\n}();\nclass Animation {\n  constructor(func, layers) {\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n  setLayers(layers) {\n    let lays = [];\n    if (layers) {\n      lays = Array.isArray(layers) ? layers : [layers];\n    }\n    this.layers = lays;\n    return this;\n  }\n  getLayers() {\n    return this.layers;\n  }\n  addLayer(layer) {\n    const layers = this.layers;\n    const len = layers.length;\n    for (let n = 0; n < len; n++) {\n      if (layers[n]._id === layer._id) {\n        return false;\n      }\n    }\n    this.layers.push(layer);\n    return true;\n  }\n  isRunning() {\n    const a = Animation;\n    const animations = a.animations;\n    const len = animations.length;\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === this.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n  start() {\n    this.stop();\n    this.frame.timeDiff = 0;\n    this.frame.lastTime = now();\n    Animation._addAnimation(this);\n    return this;\n  }\n  stop() {\n    Animation._removeAnimation(this);\n    return this;\n  }\n  _updateFrameObject(time) {\n    this.frame.timeDiff = time - this.frame.lastTime;\n    this.frame.lastTime = time;\n    this.frame.time += this.frame.timeDiff;\n    this.frame.frameRate = 1000 / this.frame.timeDiff;\n  }\n  static _addAnimation(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  }\n  static _removeAnimation(anim) {\n    const id = anim.id;\n    const animations = this.animations;\n    const len = animations.length;\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  }\n  static _runFrames() {\n    const layerHash = {};\n    const animations = this.animations;\n    for (let n = 0; n < animations.length; n++) {\n      const anim = animations[n];\n      const layers = anim.layers;\n      const func = anim.func;\n      anim._updateFrameObject(now());\n      const layersLen = layers.length;\n      let needRedraw;\n      if (func) {\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (let i = 0; i < layersLen; i++) {\n        const layer = layers[i];\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n    for (const key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].batchDraw();\n    }\n  }\n  static _animationLoop() {\n    const Anim = Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      Util_1.Util.requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  }\n  static _handleAnimation() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      Util_1.Util.requestAnimFrame(this._animationLoop);\n    }\n  }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Easings = exports.Tween = void 0;\nconst Util_1 = require(\"./Util\");\nconst Animation_1 = require(\"./Animation\");\nconst Node_1 = require(\"./Node\");\nconst Global_1 = require(\"./Global\");\nconst blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1\n  },\n  PAUSED = 1,\n  PLAYING = 2,\n  REVERSING = 3,\n  colorAttrs = ['fill', 'stroke', 'shadowColor'];\nlet idCounter = 0;\nclass TweenEngine {\n  constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\n    this.prop = prop;\n    this.propFunc = propFunc;\n    this.begin = begin;\n    this._pos = begin;\n    this.duration = duration;\n    this._change = 0;\n    this.prevPos = 0;\n    this.yoyo = yoyo;\n    this._time = 0;\n    this._position = 0;\n    this._startTime = 0;\n    this._finish = 0;\n    this.func = func;\n    this._change = finish - this.begin;\n    this.pause();\n  }\n  fire(str) {\n    const handler = this[str];\n    if (handler) {\n      handler();\n    }\n  }\n  setTime(t) {\n    if (t > this.duration) {\n      if (this.yoyo) {\n        this._time = this.duration;\n        this.reverse();\n      } else {\n        this.finish();\n      }\n    } else if (t < 0) {\n      if (this.yoyo) {\n        this._time = 0;\n        this.play();\n      } else {\n        this.reset();\n      }\n    } else {\n      this._time = t;\n      this.update();\n    }\n  }\n  getTime() {\n    return this._time;\n  }\n  setPosition(p) {\n    this.prevPos = this._pos;\n    this.propFunc(p);\n    this._pos = p;\n  }\n  getPosition(t) {\n    if (t === undefined) {\n      t = this._time;\n    }\n    return this.func(t, this.begin, this._change, this.duration);\n  }\n  play() {\n    this.state = PLAYING;\n    this._startTime = this.getTimer() - this._time;\n    this.onEnterFrame();\n    this.fire('onPlay');\n  }\n  reverse() {\n    this.state = REVERSING;\n    this._time = this.duration - this._time;\n    this._startTime = this.getTimer() - this._time;\n    this.onEnterFrame();\n    this.fire('onReverse');\n  }\n  seek(t) {\n    this.pause();\n    this._time = t;\n    this.update();\n    this.fire('onSeek');\n  }\n  reset() {\n    this.pause();\n    this._time = 0;\n    this.update();\n    this.fire('onReset');\n  }\n  finish() {\n    this.pause();\n    this._time = this.duration;\n    this.update();\n    this.fire('onFinish');\n  }\n  update() {\n    this.setPosition(this.getPosition(this._time));\n    this.fire('onUpdate');\n  }\n  onEnterFrame() {\n    const t = this.getTimer() - this._startTime;\n    if (this.state === PLAYING) {\n      this.setTime(t);\n    } else if (this.state === REVERSING) {\n      this.setTime(this.duration - t);\n    }\n  }\n  pause() {\n    this.state = PAUSED;\n    this.fire('onPause');\n  }\n  getTimer() {\n    return new Date().getTime();\n  }\n}\nclass Tween {\n  constructor(config) {\n    const that = this,\n      node = config.node,\n      nodeId = node._id,\n      easing = config.easing || exports.Easings.Linear,\n      yoyo = !!config.yoyo;\n    let duration, key;\n    if (typeof config.duration === 'undefined') {\n      duration = 0.3;\n    } else if (config.duration === 0) {\n      duration = 0.001;\n    } else {\n      duration = config.duration;\n    }\n    this.node = node;\n    this._id = idCounter++;\n    const layers = node.getLayer() || (node instanceof Global_1.Konva['Stage'] ? node.getLayers() : null);\n    if (!layers) {\n      Util_1.Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\n    }\n    this.anim = new Animation_1.Animation(function () {\n      that.tween.onEnterFrame();\n    }, layers);\n    this.tween = new TweenEngine(key, function (i) {\n      that._tweenFunc(i);\n    }, easing, 0, 1, duration * 1000, yoyo);\n    this._addListeners();\n    if (!Tween.attrs[nodeId]) {\n      Tween.attrs[nodeId] = {};\n    }\n    if (!Tween.attrs[nodeId][this._id]) {\n      Tween.attrs[nodeId][this._id] = {};\n    }\n    if (!Tween.tweens[nodeId]) {\n      Tween.tweens[nodeId] = {};\n    }\n    for (key in config) {\n      if (blacklist[key] === undefined) {\n        this._addAttr(key, config[key]);\n      }\n    }\n    this.reset();\n    this.onFinish = config.onFinish;\n    this.onReset = config.onReset;\n    this.onUpdate = config.onUpdate;\n  }\n  _addAttr(key, end) {\n    const node = this.node,\n      nodeId = node._id;\n    let diff, len, trueEnd, trueStart, endRGBA;\n    const tweenId = Tween.tweens[nodeId][key];\n    if (tweenId) {\n      delete Tween.attrs[nodeId][tweenId][key];\n    }\n    let start = node.getAttr(key);\n    if (Util_1.Util._isArray(end)) {\n      diff = [];\n      len = Math.max(end.length, start.length);\n      if (key === 'points' && end.length !== start.length) {\n        if (end.length > start.length) {\n          trueStart = start;\n          start = Util_1.Util._prepareArrayForTween(start, end, node.closed());\n        } else {\n          trueEnd = end;\n          end = Util_1.Util._prepareArrayForTween(end, start, node.closed());\n        }\n      }\n      if (key.indexOf('fill') === 0) {\n        for (let n = 0; n < len; n++) {\n          if (n % 2 === 0) {\n            diff.push(end[n] - start[n]);\n          } else {\n            const startRGBA = Util_1.Util.colorToRGBA(start[n]);\n            endRGBA = Util_1.Util.colorToRGBA(end[n]);\n            start[n] = startRGBA;\n            diff.push({\n              r: endRGBA.r - startRGBA.r,\n              g: endRGBA.g - startRGBA.g,\n              b: endRGBA.b - startRGBA.b,\n              a: endRGBA.a - startRGBA.a\n            });\n          }\n        }\n      } else {\n        for (let n = 0; n < len; n++) {\n          diff.push(end[n] - start[n]);\n        }\n      }\n    } else if (colorAttrs.indexOf(key) !== -1) {\n      start = Util_1.Util.colorToRGBA(start);\n      endRGBA = Util_1.Util.colorToRGBA(end);\n      diff = {\n        r: endRGBA.r - start.r,\n        g: endRGBA.g - start.g,\n        b: endRGBA.b - start.b,\n        a: endRGBA.a - start.a\n      };\n    } else {\n      diff = end - start;\n    }\n    Tween.attrs[nodeId][this._id][key] = {\n      start: start,\n      diff: diff,\n      end: end,\n      trueEnd: trueEnd,\n      trueStart: trueStart\n    };\n    Tween.tweens[nodeId][key] = this._id;\n  }\n  _tweenFunc(i) {\n    const node = this.node,\n      attrs = Tween.attrs[node._id][this._id];\n    let key, attr, start, diff, newVal, n, len, end;\n    for (key in attrs) {\n      attr = attrs[key];\n      start = attr.start;\n      diff = attr.diff;\n      end = attr.end;\n      if (Util_1.Util._isArray(start)) {\n        newVal = [];\n        len = Math.max(start.length, end.length);\n        if (key.indexOf('fill') === 0) {\n          for (n = 0; n < len; n++) {\n            if (n % 2 === 0) {\n              newVal.push((start[n] || 0) + diff[n] * i);\n            } else {\n              newVal.push('rgba(' + Math.round(start[n].r + diff[n].r * i) + ',' + Math.round(start[n].g + diff[n].g * i) + ',' + Math.round(start[n].b + diff[n].b * i) + ',' + (start[n].a + diff[n].a * i) + ')');\n            }\n          }\n        } else {\n          for (n = 0; n < len; n++) {\n            newVal.push((start[n] || 0) + diff[n] * i);\n          }\n        }\n      } else if (colorAttrs.indexOf(key) !== -1) {\n        newVal = 'rgba(' + Math.round(start.r + diff.r * i) + ',' + Math.round(start.g + diff.g * i) + ',' + Math.round(start.b + diff.b * i) + ',' + (start.a + diff.a * i) + ')';\n      } else {\n        newVal = start + diff * i;\n      }\n      node.setAttr(key, newVal);\n    }\n  }\n  _addListeners() {\n    this.tween.onPlay = () => {\n      this.anim.start();\n    };\n    this.tween.onReverse = () => {\n      this.anim.start();\n    };\n    this.tween.onPause = () => {\n      this.anim.stop();\n    };\n    this.tween.onFinish = () => {\n      const node = this.node;\n      const attrs = Tween.attrs[node._id][this._id];\n      if (attrs.points && attrs.points.trueEnd) {\n        node.setAttr('points', attrs.points.trueEnd);\n      }\n      if (this.onFinish) {\n        this.onFinish.call(this);\n      }\n    };\n    this.tween.onReset = () => {\n      const node = this.node;\n      const attrs = Tween.attrs[node._id][this._id];\n      if (attrs.points && attrs.points.trueStart) {\n        node.points(attrs.points.trueStart);\n      }\n      if (this.onReset) {\n        this.onReset();\n      }\n    };\n    this.tween.onUpdate = () => {\n      if (this.onUpdate) {\n        this.onUpdate.call(this);\n      }\n    };\n  }\n  play() {\n    this.tween.play();\n    return this;\n  }\n  reverse() {\n    this.tween.reverse();\n    return this;\n  }\n  reset() {\n    this.tween.reset();\n    return this;\n  }\n  seek(t) {\n    this.tween.seek(t * 1000);\n    return this;\n  }\n  pause() {\n    this.tween.pause();\n    return this;\n  }\n  finish() {\n    this.tween.finish();\n    return this;\n  }\n  destroy() {\n    const nodeId = this.node._id,\n      thisId = this._id,\n      attrs = Tween.tweens[nodeId];\n    this.pause();\n    for (const key in attrs) {\n      delete Tween.tweens[nodeId][key];\n    }\n    delete Tween.attrs[nodeId][thisId];\n  }\n}\nexports.Tween = Tween;\nTween.attrs = {};\nTween.tweens = {};\nNode_1.Node.prototype.to = function (params) {\n  const onFinish = params.onFinish;\n  params.node = this;\n  params.onFinish = function () {\n    this.destroy();\n    if (onFinish) {\n      onFinish();\n    }\n  };\n  const tween = new Tween(params);\n  tween.play();\n};\nexports.Easings = {\n  BackEaseIn(t, b, c, d) {\n    const s = 1.70158;\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  },\n  BackEaseOut(t, b, c, d) {\n    const s = 1.70158;\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  },\n  BackEaseInOut(t, b, c, d) {\n    let s = 1.70158;\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  },\n  ElasticEaseIn(t, b, c, d, a, p) {\n    let s = 0;\n    if (t === 0) {\n      return b;\n    }\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (!a || a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  },\n  ElasticEaseOut(t, b, c, d, a, p) {\n    let s = 0;\n    if (t === 0) {\n      return b;\n    }\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    if (!a || a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  },\n  ElasticEaseInOut(t, b, c, d, a, p) {\n    let s = 0;\n    if (t === 0) {\n      return b;\n    }\n    if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    if (!a || a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    }\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n  },\n  BounceEaseOut(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  },\n  BounceEaseIn(t, b, c, d) {\n    return c - exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n  },\n  BounceEaseInOut(t, b, c, d) {\n    if (t < d / 2) {\n      return exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n    } else {\n      return exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n    }\n  },\n  EaseIn(t, b, c, d) {\n    return c * (t /= d) * t + b;\n  },\n  EaseOut(t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  EaseInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    }\n    return -c / 2 * (--t * (t - 2) - 1) + b;\n  },\n  StrongEaseIn(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  },\n  StrongEaseOut(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  },\n  StrongEaseInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  },\n  Linear(t, b, c, d) {\n    return c * t / d + b;\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Konva = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst Node_1 = require(\"./Node\");\nconst Container_1 = require(\"./Container\");\nconst Stage_1 = require(\"./Stage\");\nconst Layer_1 = require(\"./Layer\");\nconst FastLayer_1 = require(\"./FastLayer\");\nconst Group_1 = require(\"./Group\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Shape_1 = require(\"./Shape\");\nconst Animation_1 = require(\"./Animation\");\nconst Tween_1 = require(\"./Tween\");\nconst Context_1 = require(\"./Context\");\nconst Canvas_1 = require(\"./Canvas\");\nexports.Konva = Util_1.Util._assign(Global_1.Konva, {\n  Util: Util_1.Util,\n  Transform: Util_1.Transform,\n  Node: Node_1.Node,\n  Container: Container_1.Container,\n  Stage: Stage_1.Stage,\n  stages: Stage_1.stages,\n  Layer: Layer_1.Layer,\n  FastLayer: FastLayer_1.FastLayer,\n  Group: Group_1.Group,\n  DD: DragAndDrop_1.DD,\n  Shape: Shape_1.Shape,\n  shapes: Shape_1.shapes,\n  Animation: Animation_1.Animation,\n  Tween: Tween_1.Tween,\n  Easings: Tween_1.Easings,\n  Context: Context_1.Context,\n  Canvas: Canvas_1.Canvas\n});\nexports.default = exports.Konva;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Arc = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nclass Arc extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const angle = Global_1.Konva.getAngle(this.angle()),\n      clockwise = this.clockwise();\n    context.beginPath();\n    context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n    context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.outerRadius() * 2;\n  }\n  getHeight() {\n    return this.outerRadius() * 2;\n  }\n  setWidth(width) {\n    this.outerRadius(width / 2);\n  }\n  setHeight(height) {\n    this.outerRadius(height / 2);\n  }\n  getSelfRect() {\n    const innerRadius = this.innerRadius();\n    const outerRadius = this.outerRadius();\n    const clockwise = this.clockwise();\n    const angle = Global_1.Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n    const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n    const boundRightRatio = 1;\n    const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n    const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n    const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n    const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n    const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n    const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n    return {\n      x: boundLeft,\n      y: clockwise ? -1 * boundBottom : boundTop,\n      width: boundRight - boundLeft,\n      height: boundBottom - boundTop\n    };\n  }\n}\nexports.Arc = Arc;\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius', 'angle', 'clockwise'];\n(0, Global_2._registerNode)(Arc);\nFactory_1.Factory.addGetterSetter(Arc, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'clockwise', false, (0, Validators_1.getBooleanValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Line = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Global_1 = require(\"../Global\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n  const d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n    d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n    fa = t * d01 / (d01 + d12),\n    fb = t * d12 / (d01 + d12),\n    p1x = x1 - fa * (x2 - x0),\n    p1y = y1 - fa * (y2 - y0),\n    p2x = x1 + fb * (x2 - x0),\n    p2y = y1 + fb * (y2 - y0);\n  return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n  const len = p.length,\n    allPoints = [];\n  for (let n = 2; n < len - 2; n += 2) {\n    const cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n    if (isNaN(cp[0])) {\n      continue;\n    }\n    allPoints.push(cp[0]);\n    allPoints.push(cp[1]);\n    allPoints.push(p[n]);\n    allPoints.push(p[n + 1]);\n    allPoints.push(cp[2]);\n    allPoints.push(cp[3]);\n  }\n  return allPoints;\n}\nclass Line extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n      this._clearCache('tensionPoints');\n    });\n  }\n  _sceneFunc(context) {\n    let points = this.points(),\n      length = points.length,\n      tension = this.tension(),\n      closed = this.closed(),\n      bezier = this.bezier(),\n      tp,\n      len,\n      n;\n    if (!length) {\n      return;\n    }\n    context.beginPath();\n    context.moveTo(points[0], points[1]);\n    if (tension !== 0 && length > 4) {\n      tp = this.getTensionPoints();\n      len = tp.length;\n      n = closed ? 0 : 4;\n      if (!closed) {\n        context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n      }\n      while (n < len - 2) {\n        context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n      }\n      if (!closed) {\n        context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n      }\n    } else if (bezier) {\n      n = 2;\n      while (n < length) {\n        context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n      }\n    } else {\n      for (n = 2; n < length; n += 2) {\n        context.lineTo(points[n], points[n + 1]);\n      }\n    }\n    if (closed) {\n      context.closePath();\n      context.fillStrokeShape(this);\n    } else {\n      context.strokeShape(this);\n    }\n  }\n  getTensionPoints() {\n    return this._getCache('tensionPoints', this._getTensionPoints);\n  }\n  _getTensionPoints() {\n    if (this.closed()) {\n      return this._getTensionPointsClosed();\n    } else {\n      return expandPoints(this.points(), this.tension());\n    }\n  }\n  _getTensionPointsClosed() {\n    const p = this.points(),\n      len = p.length,\n      tension = this.tension(),\n      firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension),\n      lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension),\n      middle = expandPoints(p, tension),\n      tp = [firstControlPoints[2], firstControlPoints[3]].concat(middle).concat([lastControlPoints[0], lastControlPoints[1], p[len - 2], p[len - 1], lastControlPoints[2], lastControlPoints[3], firstControlPoints[0], firstControlPoints[1], p[0], p[1]]);\n    return tp;\n  }\n  getWidth() {\n    return this.getSelfRect().width;\n  }\n  getHeight() {\n    return this.getSelfRect().height;\n  }\n  getSelfRect() {\n    let points = this.points();\n    if (points.length < 4) {\n      return {\n        x: points[0] || 0,\n        y: points[1] || 0,\n        width: 0,\n        height: 0\n      };\n    }\n    if (this.tension() !== 0) {\n      points = [points[0], points[1], ...this._getTensionPoints(), points[points.length - 2], points[points.length - 1]];\n    } else {\n      points = this.points();\n    }\n    let minX = points[0];\n    let maxX = points[0];\n    let minY = points[1];\n    let maxY = points[1];\n    let x, y;\n    for (let i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      minX = Math.min(minX, x);\n      maxX = Math.max(maxX, x);\n      minY = Math.min(minY, y);\n      maxY = Math.max(maxY, y);\n    }\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n}\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n(0, Global_1._registerNode)(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], (0, Validators_1.getNumberArrayValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.t2length = exports.getQuadraticArcLength = exports.getCubicArcLength = exports.binomialCoefficients = exports.cValues = exports.tValues = void 0;\nexports.tValues = [[], [], [-0.5773502691896257645091487805019574556476, 0.5773502691896257645091487805019574556476], [0, -0.7745966692414833770358530799564799221665, 0.7745966692414833770358530799564799221665], [-0.3399810435848562648026657591032446872005, 0.3399810435848562648026657591032446872005, -0.8611363115940525752239464888928095050957, 0.8611363115940525752239464888928095050957], [0, -0.5384693101056830910363144207002088049672, 0.5384693101056830910363144207002088049672, -0.9061798459386639927976268782993929651256, 0.9061798459386639927976268782993929651256], [0.6612093864662645136613995950199053470064, -0.6612093864662645136613995950199053470064, -0.2386191860831969086305017216807119354186, 0.2386191860831969086305017216807119354186, -0.9324695142031520278123015544939946091347, 0.9324695142031520278123015544939946091347], [0, 0.4058451513773971669066064120769614633473, -0.4058451513773971669066064120769614633473, -0.7415311855993944398638647732807884070741, 0.7415311855993944398638647732807884070741, -0.9491079123427585245261896840478512624007, 0.9491079123427585245261896840478512624007], [-0.1834346424956498049394761423601839806667, 0.1834346424956498049394761423601839806667, -0.5255324099163289858177390491892463490419, 0.5255324099163289858177390491892463490419, -0.7966664774136267395915539364758304368371, 0.7966664774136267395915539364758304368371, -0.9602898564975362316835608685694729904282, 0.9602898564975362316835608685694729904282], [0, -0.8360311073266357942994297880697348765441, 0.8360311073266357942994297880697348765441, -0.9681602395076260898355762029036728700494, 0.9681602395076260898355762029036728700494, -0.3242534234038089290385380146433366085719, 0.3242534234038089290385380146433366085719, -0.6133714327005903973087020393414741847857, 0.6133714327005903973087020393414741847857], [-0.1488743389816312108848260011297199846175, 0.1488743389816312108848260011297199846175, -0.4333953941292471907992659431657841622, 0.4333953941292471907992659431657841622, -0.6794095682990244062343273651148735757692, 0.6794095682990244062343273651148735757692, -0.8650633666889845107320966884234930485275, 0.8650633666889845107320966884234930485275, -0.9739065285171717200779640120844520534282, 0.9739065285171717200779640120844520534282], [0, -0.2695431559523449723315319854008615246796, 0.2695431559523449723315319854008615246796, -0.5190961292068118159257256694586095544802, 0.5190961292068118159257256694586095544802, -0.7301520055740493240934162520311534580496, 0.7301520055740493240934162520311534580496, -0.8870625997680952990751577693039272666316, 0.8870625997680952990751577693039272666316, -0.9782286581460569928039380011228573907714, 0.9782286581460569928039380011228573907714], [-0.1252334085114689154724413694638531299833, 0.1252334085114689154724413694638531299833, -0.3678314989981801937526915366437175612563, 0.3678314989981801937526915366437175612563, -0.587317954286617447296702418940534280369, 0.587317954286617447296702418940534280369, -0.7699026741943046870368938332128180759849, 0.7699026741943046870368938332128180759849, -0.9041172563704748566784658661190961925375, 0.9041172563704748566784658661190961925375, -0.9815606342467192506905490901492808229601, 0.9815606342467192506905490901492808229601], [0, -0.2304583159551347940655281210979888352115, 0.2304583159551347940655281210979888352115, -0.4484927510364468528779128521276398678019, 0.4484927510364468528779128521276398678019, -0.6423493394403402206439846069955156500716, 0.6423493394403402206439846069955156500716, -0.8015780907333099127942064895828598903056, 0.8015780907333099127942064895828598903056, -0.9175983992229779652065478365007195123904, 0.9175983992229779652065478365007195123904, -0.9841830547185881494728294488071096110649, 0.9841830547185881494728294488071096110649], [-0.1080549487073436620662446502198347476119, 0.1080549487073436620662446502198347476119, -0.3191123689278897604356718241684754668342, 0.3191123689278897604356718241684754668342, -0.5152486363581540919652907185511886623088, 0.5152486363581540919652907185511886623088, -0.6872929048116854701480198030193341375384, 0.6872929048116854701480198030193341375384, -0.8272013150697649931897947426503949610397, 0.8272013150697649931897947426503949610397, -0.928434883663573517336391139377874264477, 0.928434883663573517336391139377874264477, -0.986283808696812338841597266704052801676, 0.986283808696812338841597266704052801676], [0, -0.2011940939974345223006283033945962078128, 0.2011940939974345223006283033945962078128, -0.3941513470775633698972073709810454683627, 0.3941513470775633698972073709810454683627, -0.5709721726085388475372267372539106412383, 0.5709721726085388475372267372539106412383, -0.7244177313601700474161860546139380096308, 0.7244177313601700474161860546139380096308, -0.8482065834104272162006483207742168513662, 0.8482065834104272162006483207742168513662, -0.9372733924007059043077589477102094712439, 0.9372733924007059043077589477102094712439, -0.9879925180204854284895657185866125811469, 0.9879925180204854284895657185866125811469], [-0.0950125098376374401853193354249580631303, 0.0950125098376374401853193354249580631303, -0.281603550779258913230460501460496106486, 0.281603550779258913230460501460496106486, -0.45801677765722738634241944298357757354, 0.45801677765722738634241944298357757354, -0.6178762444026437484466717640487910189918, 0.6178762444026437484466717640487910189918, -0.7554044083550030338951011948474422683538, 0.7554044083550030338951011948474422683538, -0.8656312023878317438804678977123931323873, 0.8656312023878317438804678977123931323873, -0.9445750230732325760779884155346083450911, 0.9445750230732325760779884155346083450911, -0.9894009349916499325961541734503326274262, 0.9894009349916499325961541734503326274262], [0, -0.1784841814958478558506774936540655574754, 0.1784841814958478558506774936540655574754, -0.3512317634538763152971855170953460050405, 0.3512317634538763152971855170953460050405, -0.5126905370864769678862465686295518745829, 0.5126905370864769678862465686295518745829, -0.6576711592166907658503022166430023351478, 0.6576711592166907658503022166430023351478, -0.7815140038968014069252300555204760502239, 0.7815140038968014069252300555204760502239, -0.8802391537269859021229556944881556926234, 0.8802391537269859021229556944881556926234, -0.9506755217687677612227169578958030214433, 0.9506755217687677612227169578958030214433, -0.9905754753144173356754340199406652765077, 0.9905754753144173356754340199406652765077], [-0.0847750130417353012422618529357838117333, 0.0847750130417353012422618529357838117333, -0.2518862256915055095889728548779112301628, 0.2518862256915055095889728548779112301628, -0.4117511614628426460359317938330516370789, 0.4117511614628426460359317938330516370789, -0.5597708310739475346078715485253291369276, 0.5597708310739475346078715485253291369276, -0.6916870430603532078748910812888483894522, 0.6916870430603532078748910812888483894522, -0.8037049589725231156824174550145907971032, 0.8037049589725231156824174550145907971032, -0.8926024664975557392060605911271455154078, 0.8926024664975557392060605911271455154078, -0.9558239495713977551811958929297763099728, 0.9558239495713977551811958929297763099728, -0.9915651684209309467300160047061507702525, 0.9915651684209309467300160047061507702525], [0, -0.1603586456402253758680961157407435495048, 0.1603586456402253758680961157407435495048, -0.3165640999636298319901173288498449178922, 0.3165640999636298319901173288498449178922, -0.4645707413759609457172671481041023679762, 0.4645707413759609457172671481041023679762, -0.6005453046616810234696381649462392798683, 0.6005453046616810234696381649462392798683, -0.7209661773352293786170958608237816296571, 0.7209661773352293786170958608237816296571, -0.8227146565371428249789224867127139017745, 0.8227146565371428249789224867127139017745, -0.9031559036148179016426609285323124878093, 0.9031559036148179016426609285323124878093, -0.960208152134830030852778840687651526615, 0.960208152134830030852778840687651526615, -0.9924068438435844031890176702532604935893, 0.9924068438435844031890176702532604935893], [-0.0765265211334973337546404093988382110047, 0.0765265211334973337546404093988382110047, -0.227785851141645078080496195368574624743, 0.227785851141645078080496195368574624743, -0.3737060887154195606725481770249272373957, 0.3737060887154195606725481770249272373957, -0.5108670019508270980043640509552509984254, 0.5108670019508270980043640509552509984254, -0.6360536807265150254528366962262859367433, 0.6360536807265150254528366962262859367433, -0.7463319064601507926143050703556415903107, 0.7463319064601507926143050703556415903107, -0.8391169718222188233945290617015206853296, 0.8391169718222188233945290617015206853296, -0.9122344282513259058677524412032981130491, 0.9122344282513259058677524412032981130491, -0.963971927277913791267666131197277221912, 0.963971927277913791267666131197277221912, -0.9931285991850949247861223884713202782226, 0.9931285991850949247861223884713202782226], [0, -0.1455618541608950909370309823386863301163, 0.1455618541608950909370309823386863301163, -0.288021316802401096600792516064600319909, 0.288021316802401096600792516064600319909, -0.4243421202074387835736688885437880520964, 0.4243421202074387835736688885437880520964, -0.551618835887219807059018796724313286622, 0.551618835887219807059018796724313286622, -0.667138804197412319305966669990339162597, 0.667138804197412319305966669990339162597, -0.7684399634756779086158778513062280348209, 0.7684399634756779086158778513062280348209, -0.8533633645833172836472506385875676702761, 0.8533633645833172836472506385875676702761, -0.9200993341504008287901871337149688941591, 0.9200993341504008287901871337149688941591, -0.9672268385663062943166222149076951614246, 0.9672268385663062943166222149076951614246, -0.9937521706203895002602420359379409291933, 0.9937521706203895002602420359379409291933], [-0.0697392733197222212138417961186280818222, 0.0697392733197222212138417961186280818222, -0.2078604266882212854788465339195457342156, 0.2078604266882212854788465339195457342156, -0.3419358208920842251581474204273796195591, 0.3419358208920842251581474204273796195591, -0.4693558379867570264063307109664063460953, 0.4693558379867570264063307109664063460953, -0.5876404035069115929588769276386473488776, 0.5876404035069115929588769276386473488776, -0.6944872631866827800506898357622567712673, 0.6944872631866827800506898357622567712673, -0.7878168059792081620042779554083515213881, 0.7878168059792081620042779554083515213881, -0.8658125777203001365364256370193787290847, 0.8658125777203001365364256370193787290847, -0.9269567721871740005206929392590531966353, 0.9269567721871740005206929392590531966353, -0.9700604978354287271239509867652687108059, 0.9700604978354287271239509867652687108059, -0.994294585482399292073031421161298980393, 0.994294585482399292073031421161298980393], [0, -0.1332568242984661109317426822417661370104, 0.1332568242984661109317426822417661370104, -0.264135680970344930533869538283309602979, 0.264135680970344930533869538283309602979, -0.390301038030290831421488872880605458578, 0.390301038030290831421488872880605458578, -0.5095014778460075496897930478668464305448, 0.5095014778460075496897930478668464305448, -0.6196098757636461563850973116495956533871, 0.6196098757636461563850973116495956533871, -0.7186613631319501944616244837486188483299, 0.7186613631319501944616244837486188483299, -0.8048884016188398921511184069967785579414, 0.8048884016188398921511184069967785579414, -0.8767523582704416673781568859341456716389, 0.8767523582704416673781568859341456716389, -0.9329710868260161023491969890384229782357, 0.9329710868260161023491969890384229782357, -0.9725424712181152319560240768207773751816, 0.9725424712181152319560240768207773751816, -0.9947693349975521235239257154455743605736, 0.9947693349975521235239257154455743605736], [-0.0640568928626056260850430826247450385909, 0.0640568928626056260850430826247450385909, -0.1911188674736163091586398207570696318404, 0.1911188674736163091586398207570696318404, -0.3150426796961633743867932913198102407864, 0.3150426796961633743867932913198102407864, -0.4337935076260451384870842319133497124524, 0.4337935076260451384870842319133497124524, -0.5454214713888395356583756172183723700107, 0.5454214713888395356583756172183723700107, -0.6480936519369755692524957869107476266696, 0.6480936519369755692524957869107476266696, -0.7401241915785543642438281030999784255232, 0.7401241915785543642438281030999784255232, -0.8200019859739029219539498726697452080761, 0.8200019859739029219539498726697452080761, -0.8864155270044010342131543419821967550873, 0.8864155270044010342131543419821967550873, -0.9382745520027327585236490017087214496548, 0.9382745520027327585236490017087214496548, -0.9747285559713094981983919930081690617411, 0.9747285559713094981983919930081690617411, -0.9951872199970213601799974097007368118745, 0.9951872199970213601799974097007368118745]];\nexports.cValues = [[], [], [1.0, 1.0], [0.8888888888888888888888888888888888888888, 0.5555555555555555555555555555555555555555, 0.5555555555555555555555555555555555555555], [0.6521451548625461426269360507780005927646, 0.6521451548625461426269360507780005927646, 0.3478548451374538573730639492219994072353, 0.3478548451374538573730639492219994072353], [0.5688888888888888888888888888888888888888, 0.4786286704993664680412915148356381929122, 0.4786286704993664680412915148356381929122, 0.2369268850561890875142640407199173626432, 0.2369268850561890875142640407199173626432], [0.3607615730481386075698335138377161116615, 0.3607615730481386075698335138377161116615, 0.4679139345726910473898703439895509948116, 0.4679139345726910473898703439895509948116, 0.1713244923791703450402961421727328935268, 0.1713244923791703450402961421727328935268], [0.4179591836734693877551020408163265306122, 0.3818300505051189449503697754889751338783, 0.3818300505051189449503697754889751338783, 0.2797053914892766679014677714237795824869, 0.2797053914892766679014677714237795824869, 0.1294849661688696932706114326790820183285, 0.1294849661688696932706114326790820183285], [0.3626837833783619829651504492771956121941, 0.3626837833783619829651504492771956121941, 0.3137066458778872873379622019866013132603, 0.3137066458778872873379622019866013132603, 0.2223810344533744705443559944262408844301, 0.2223810344533744705443559944262408844301, 0.1012285362903762591525313543099621901153, 0.1012285362903762591525313543099621901153], [0.3302393550012597631645250692869740488788, 0.1806481606948574040584720312429128095143, 0.1806481606948574040584720312429128095143, 0.0812743883615744119718921581105236506756, 0.0812743883615744119718921581105236506756, 0.3123470770400028400686304065844436655987, 0.3123470770400028400686304065844436655987, 0.2606106964029354623187428694186328497718, 0.2606106964029354623187428694186328497718], [0.295524224714752870173892994651338329421, 0.295524224714752870173892994651338329421, 0.2692667193099963550912269215694693528597, 0.2692667193099963550912269215694693528597, 0.2190863625159820439955349342281631924587, 0.2190863625159820439955349342281631924587, 0.1494513491505805931457763396576973324025, 0.1494513491505805931457763396576973324025, 0.0666713443086881375935688098933317928578, 0.0666713443086881375935688098933317928578], [0.272925086777900630714483528336342189156, 0.2628045445102466621806888698905091953727, 0.2628045445102466621806888698905091953727, 0.2331937645919904799185237048431751394317, 0.2331937645919904799185237048431751394317, 0.1862902109277342514260976414316558916912, 0.1862902109277342514260976414316558916912, 0.1255803694649046246346942992239401001976, 0.1255803694649046246346942992239401001976, 0.0556685671161736664827537204425485787285, 0.0556685671161736664827537204425485787285], [0.2491470458134027850005624360429512108304, 0.2491470458134027850005624360429512108304, 0.2334925365383548087608498989248780562594, 0.2334925365383548087608498989248780562594, 0.2031674267230659217490644558097983765065, 0.2031674267230659217490644558097983765065, 0.160078328543346226334652529543359071872, 0.160078328543346226334652529543359071872, 0.1069393259953184309602547181939962242145, 0.1069393259953184309602547181939962242145, 0.047175336386511827194615961485017060317, 0.047175336386511827194615961485017060317], [0.2325515532308739101945895152688359481566, 0.2262831802628972384120901860397766184347, 0.2262831802628972384120901860397766184347, 0.2078160475368885023125232193060527633865, 0.2078160475368885023125232193060527633865, 0.1781459807619457382800466919960979955128, 0.1781459807619457382800466919960979955128, 0.1388735102197872384636017768688714676218, 0.1388735102197872384636017768688714676218, 0.0921214998377284479144217759537971209236, 0.0921214998377284479144217759537971209236, 0.0404840047653158795200215922009860600419, 0.0404840047653158795200215922009860600419], [0.2152638534631577901958764433162600352749, 0.2152638534631577901958764433162600352749, 0.2051984637212956039659240656612180557103, 0.2051984637212956039659240656612180557103, 0.1855383974779378137417165901251570362489, 0.1855383974779378137417165901251570362489, 0.1572031671581935345696019386238421566056, 0.1572031671581935345696019386238421566056, 0.1215185706879031846894148090724766259566, 0.1215185706879031846894148090724766259566, 0.0801580871597602098056332770628543095836, 0.0801580871597602098056332770628543095836, 0.0351194603317518630318328761381917806197, 0.0351194603317518630318328761381917806197], [0.2025782419255612728806201999675193148386, 0.1984314853271115764561183264438393248186, 0.1984314853271115764561183264438393248186, 0.1861610000155622110268005618664228245062, 0.1861610000155622110268005618664228245062, 0.1662692058169939335532008604812088111309, 0.1662692058169939335532008604812088111309, 0.1395706779261543144478047945110283225208, 0.1395706779261543144478047945110283225208, 0.1071592204671719350118695466858693034155, 0.1071592204671719350118695466858693034155, 0.0703660474881081247092674164506673384667, 0.0703660474881081247092674164506673384667, 0.0307532419961172683546283935772044177217, 0.0307532419961172683546283935772044177217], [0.1894506104550684962853967232082831051469, 0.1894506104550684962853967232082831051469, 0.1826034150449235888667636679692199393835, 0.1826034150449235888667636679692199393835, 0.1691565193950025381893120790303599622116, 0.1691565193950025381893120790303599622116, 0.1495959888165767320815017305474785489704, 0.1495959888165767320815017305474785489704, 0.1246289712555338720524762821920164201448, 0.1246289712555338720524762821920164201448, 0.0951585116824927848099251076022462263552, 0.0951585116824927848099251076022462263552, 0.0622535239386478928628438369943776942749, 0.0622535239386478928628438369943776942749, 0.0271524594117540948517805724560181035122, 0.0271524594117540948517805724560181035122], [0.1794464703562065254582656442618856214487, 0.1765627053669926463252709901131972391509, 0.1765627053669926463252709901131972391509, 0.1680041021564500445099706637883231550211, 0.1680041021564500445099706637883231550211, 0.1540457610768102880814315948019586119404, 0.1540457610768102880814315948019586119404, 0.1351363684685254732863199817023501973721, 0.1351363684685254732863199817023501973721, 0.1118838471934039710947883856263559267358, 0.1118838471934039710947883856263559267358, 0.0850361483171791808835353701910620738504, 0.0850361483171791808835353701910620738504, 0.0554595293739872011294401653582446605128, 0.0554595293739872011294401653582446605128, 0.0241483028685479319601100262875653246916, 0.0241483028685479319601100262875653246916], [0.1691423829631435918406564701349866103341, 0.1691423829631435918406564701349866103341, 0.1642764837458327229860537764659275904123, 0.1642764837458327229860537764659275904123, 0.1546846751262652449254180038363747721932, 0.1546846751262652449254180038363747721932, 0.1406429146706506512047313037519472280955, 0.1406429146706506512047313037519472280955, 0.1225552067114784601845191268002015552281, 0.1225552067114784601845191268002015552281, 0.1009420441062871655628139849248346070628, 0.1009420441062871655628139849248346070628, 0.0764257302548890565291296776166365256053, 0.0764257302548890565291296776166365256053, 0.0497145488949697964533349462026386416808, 0.0497145488949697964533349462026386416808, 0.0216160135264833103133427102664524693876, 0.0216160135264833103133427102664524693876], [0.1610544498487836959791636253209167350399, 0.1589688433939543476499564394650472016787, 0.1589688433939543476499564394650472016787, 0.152766042065859666778855400897662998461, 0.152766042065859666778855400897662998461, 0.1426067021736066117757461094419029724756, 0.1426067021736066117757461094419029724756, 0.1287539625393362276755157848568771170558, 0.1287539625393362276755157848568771170558, 0.1115666455473339947160239016817659974813, 0.1115666455473339947160239016817659974813, 0.0914900216224499994644620941238396526609, 0.0914900216224499994644620941238396526609, 0.0690445427376412265807082580060130449618, 0.0690445427376412265807082580060130449618, 0.0448142267656996003328381574019942119517, 0.0448142267656996003328381574019942119517, 0.0194617882297264770363120414644384357529, 0.0194617882297264770363120414644384357529], [0.1527533871307258506980843319550975934919, 0.1527533871307258506980843319550975934919, 0.1491729864726037467878287370019694366926, 0.1491729864726037467878287370019694366926, 0.1420961093183820513292983250671649330345, 0.1420961093183820513292983250671649330345, 0.1316886384491766268984944997481631349161, 0.1316886384491766268984944997481631349161, 0.118194531961518417312377377711382287005, 0.118194531961518417312377377711382287005, 0.1019301198172404350367501354803498761666, 0.1019301198172404350367501354803498761666, 0.0832767415767047487247581432220462061001, 0.0832767415767047487247581432220462061001, 0.0626720483341090635695065351870416063516, 0.0626720483341090635695065351870416063516, 0.040601429800386941331039952274932109879, 0.040601429800386941331039952274932109879, 0.0176140071391521183118619623518528163621, 0.0176140071391521183118619623518528163621], [0.1460811336496904271919851476833711882448, 0.1445244039899700590638271665537525436099, 0.1445244039899700590638271665537525436099, 0.1398873947910731547221334238675831108927, 0.1398873947910731547221334238675831108927, 0.132268938633337461781052574496775604329, 0.132268938633337461781052574496775604329, 0.1218314160537285341953671771257335983563, 0.1218314160537285341953671771257335983563, 0.1087972991671483776634745780701056420336, 0.1087972991671483776634745780701056420336, 0.0934444234560338615532897411139320884835, 0.0934444234560338615532897411139320884835, 0.0761001136283793020170516533001831792261, 0.0761001136283793020170516533001831792261, 0.0571344254268572082836358264724479574912, 0.0571344254268572082836358264724479574912, 0.0369537897708524937999506682993296661889, 0.0369537897708524937999506682993296661889, 0.0160172282577743333242246168584710152658, 0.0160172282577743333242246168584710152658], [0.1392518728556319933754102483418099578739, 0.1392518728556319933754102483418099578739, 0.1365414983460151713525738312315173965863, 0.1365414983460151713525738312315173965863, 0.1311735047870623707329649925303074458757, 0.1311735047870623707329649925303074458757, 0.1232523768105124242855609861548144719594, 0.1232523768105124242855609861548144719594, 0.1129322960805392183934006074217843191142, 0.1129322960805392183934006074217843191142, 0.1004141444428809649320788378305362823508, 0.1004141444428809649320788378305362823508, 0.0859416062170677274144436813727028661891, 0.0859416062170677274144436813727028661891, 0.0697964684245204880949614189302176573987, 0.0697964684245204880949614189302176573987, 0.0522933351526832859403120512732112561121, 0.0522933351526832859403120512732112561121, 0.0337749015848141547933022468659129013491, 0.0337749015848141547933022468659129013491, 0.0146279952982722006849910980471854451902, 0.0146279952982722006849910980471854451902], [0.1336545721861061753514571105458443385831, 0.132462039404696617371642464703316925805, 0.132462039404696617371642464703316925805, 0.1289057221880821499785953393997936532597, 0.1289057221880821499785953393997936532597, 0.1230490843067295304675784006720096548158, 0.1230490843067295304675784006720096548158, 0.1149966402224113649416435129339613014914, 0.1149966402224113649416435129339613014914, 0.1048920914645414100740861850147438548584, 0.1048920914645414100740861850147438548584, 0.0929157660600351474770186173697646486034, 0.0929157660600351474770186173697646486034, 0.0792814117767189549228925247420432269137, 0.0792814117767189549228925247420432269137, 0.0642324214085258521271696151589109980391, 0.0642324214085258521271696151589109980391, 0.0480376717310846685716410716320339965612, 0.0480376717310846685716410716320339965612, 0.0309880058569794443106942196418845053837, 0.0309880058569794443106942196418845053837, 0.0134118594871417720813094934586150649766, 0.0134118594871417720813094934586150649766], [0.1279381953467521569740561652246953718517, 0.1279381953467521569740561652246953718517, 0.1258374563468282961213753825111836887264, 0.1258374563468282961213753825111836887264, 0.121670472927803391204463153476262425607, 0.121670472927803391204463153476262425607, 0.1155056680537256013533444839067835598622, 0.1155056680537256013533444839067835598622, 0.1074442701159656347825773424466062227946, 0.1074442701159656347825773424466062227946, 0.0976186521041138882698806644642471544279, 0.0976186521041138882698806644642471544279, 0.086190161531953275917185202983742667185, 0.086190161531953275917185202983742667185, 0.0733464814110803057340336152531165181193, 0.0733464814110803057340336152531165181193, 0.0592985849154367807463677585001085845412, 0.0592985849154367807463677585001085845412, 0.0442774388174198061686027482113382288593, 0.0442774388174198061686027482113382288593, 0.0285313886289336631813078159518782864491, 0.0285313886289336631813078159518782864491, 0.0123412297999871995468056670700372915759, 0.0123412297999871995468056670700372915759]];\nexports.binomialCoefficients = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]];\nconst getCubicArcLength = (xs, ys, t) => {\n  let sum;\n  let correctedT;\n  const n = 20;\n  const z = t / 2;\n  sum = 0;\n  for (let i = 0; i < n; i++) {\n    correctedT = z * exports.tValues[n][i] + z;\n    sum += exports.cValues[n][i] * BFunc(xs, ys, correctedT);\n  }\n  return z * sum;\n};\nexports.getCubicArcLength = getCubicArcLength;\nconst getQuadraticArcLength = (xs, ys, t) => {\n  if (t === undefined) {\n    t = 1;\n  }\n  const ax = xs[0] - 2 * xs[1] + xs[2];\n  const ay = ys[0] - 2 * ys[1] + ys[2];\n  const bx = 2 * xs[1] - 2 * xs[0];\n  const by = 2 * ys[1] - 2 * ys[0];\n  const A = 4 * (ax * ax + ay * ay);\n  const B = 4 * (ax * bx + ay * by);\n  const C = bx * bx + by * by;\n  if (A === 0) {\n    return t * Math.sqrt(Math.pow(xs[2] - xs[0], 2) + Math.pow(ys[2] - ys[0], 2));\n  }\n  const b = B / (2 * A);\n  const c = C / A;\n  const u = t + b;\n  const k = c - b * b;\n  const uuk = u * u + k > 0 ? Math.sqrt(u * u + k) : 0;\n  const bbk = b * b + k > 0 ? Math.sqrt(b * b + k) : 0;\n  const term = b + Math.sqrt(b * b + k) !== 0 ? k * Math.log(Math.abs((u + uuk) / (b + bbk))) : 0;\n  return Math.sqrt(A) / 2 * (u * uuk - b * bbk + term);\n};\nexports.getQuadraticArcLength = getQuadraticArcLength;\nfunction BFunc(xs, ys, t) {\n  const xbase = getDerivative(1, t, xs);\n  const ybase = getDerivative(1, t, ys);\n  const combined = xbase * xbase + ybase * ybase;\n  return Math.sqrt(combined);\n}\nconst getDerivative = (derivative, t, vs) => {\n  const n = vs.length - 1;\n  let _vs;\n  let value;\n  if (n === 0) {\n    return 0;\n  }\n  if (derivative === 0) {\n    value = 0;\n    for (let k = 0; k <= n; k++) {\n      value += exports.binomialCoefficients[n][k] * Math.pow(1 - t, n - k) * Math.pow(t, k) * vs[k];\n    }\n    return value;\n  } else {\n    _vs = new Array(n);\n    for (let k = 0; k < n; k++) {\n      _vs[k] = n * (vs[k + 1] - vs[k]);\n    }\n    return getDerivative(derivative - 1, t, _vs);\n  }\n};\nconst t2length = (length, totalLength, func) => {\n  let error = 1;\n  let t = length / totalLength;\n  let step = (length - func(t)) / totalLength;\n  let numIterations = 0;\n  while (error > 0.001) {\n    const increasedTLength = func(t + step);\n    const increasedTError = Math.abs(length - increasedTLength) / totalLength;\n    if (increasedTError < error) {\n      error = increasedTError;\n      t += step;\n    } else {\n      const decreasedTLength = func(t - step);\n      const decreasedTError = Math.abs(length - decreasedTLength) / totalLength;\n      if (decreasedTError < error) {\n        error = decreasedTError;\n        t -= step;\n      } else {\n        step /= 2;\n      }\n    }\n    numIterations++;\n    if (numIterations > 500) {\n      break;\n    }\n  }\n  return t;\n};\nexports.t2length = t2length;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Path = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\nclass Path extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this.dataArray = [];\n    this.pathLength = 0;\n    this._readDataAttribute();\n    this.on('dataChange.konva', function () {\n      this._readDataAttribute();\n    });\n  }\n  _readDataAttribute() {\n    this.dataArray = Path.parsePathData(this.data());\n    this.pathLength = Path.getPathLength(this.dataArray);\n  }\n  _sceneFunc(context) {\n    const ca = this.dataArray;\n    context.beginPath();\n    let isClosed = false;\n    for (let n = 0; n < ca.length; n++) {\n      const c = ca[n].command;\n      const p = ca[n].points;\n      switch (c) {\n        case 'L':\n          context.lineTo(p[0], p[1]);\n          break;\n        case 'M':\n          context.moveTo(p[0], p[1]);\n          break;\n        case 'C':\n          context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n          break;\n        case 'Q':\n          context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n          break;\n        case 'A':\n          var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6],\n            fs = p[7];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n        case 'z':\n          isClosed = true;\n          context.closePath();\n          break;\n      }\n    }\n    if (!isClosed && !this.hasFill()) {\n      context.strokeShape(this);\n    } else {\n      context.fillStrokeShape(this);\n    }\n  }\n  getSelfRect() {\n    let points = [];\n    this.dataArray.forEach(function (data) {\n      if (data.command === 'A') {\n        const start = data.points[4];\n        const dTheta = data.points[5];\n        const end = data.points[4] + dTheta;\n        let inc = Math.PI / 180.0;\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        if (dTheta < 0) {\n          for (let t = start - inc; t > end; t -= inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        } else {\n          for (let t = start + inc; t < end; t += inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        }\n      } else if (data.command === 'C') {\n        for (let t = 0.0; t <= 1; t += 0.01) {\n          const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n          points.push(point.x, point.y);\n        }\n      } else {\n        points = points.concat(data.points);\n      }\n    });\n    let minX = points[0];\n    let maxX = points[0];\n    let minY = points[1];\n    let maxY = points[1];\n    let x, y;\n    for (let i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      if (!isNaN(x)) {\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n      }\n      if (!isNaN(y)) {\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n    }\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  getLength() {\n    return this.pathLength;\n  }\n  getPointAtLength(length) {\n    return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n  }\n  static getLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  static getPathLength(dataArray) {\n    let pathLength = 0;\n    for (let i = 0; i < dataArray.length; ++i) {\n      pathLength += dataArray[i].pathLength;\n    }\n    return pathLength;\n  }\n  static getPointAtLengthOfDataArray(length, dataArray) {\n    let points,\n      i = 0,\n      ii = dataArray.length;\n    if (!ii) {\n      return null;\n    }\n    while (i < ii && length > dataArray[i].pathLength) {\n      length -= dataArray[i].pathLength;\n      ++i;\n    }\n    if (i === ii) {\n      points = dataArray[i - 1].points.slice(-2);\n      return {\n        x: points[0],\n        y: points[1]\n      };\n    }\n    if (length < 0.01) {\n      points = dataArray[i].points.slice(0, 2);\n      return {\n        x: points[0],\n        y: points[1]\n      };\n    }\n    const cp = dataArray[i];\n    const p = cp.points;\n    switch (cp.command) {\n      case 'L':\n        return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n      case 'C':\n        return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n      case 'Q':\n        return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n      case 'A':\n        var cx = p[0],\n          cy = p[1],\n          rx = p[2],\n          ry = p[3],\n          theta = p[4],\n          dTheta = p[5],\n          psi = p[6];\n        theta += dTheta * length / cp.pathLength;\n        return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n    }\n    return null;\n  }\n  static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n    fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n    const len = this.getLineLength(P1x, P1y, P2x, P2y);\n    if (len < 1e-10) {\n      return {\n        x: P1x,\n        y: P1y\n      };\n    }\n    if (P2x === P1x) {\n      return {\n        x: fromX,\n        y: fromY + (P2y > P1y ? dist : -dist)\n      };\n    }\n    const m = (P2y - P1y) / (P2x - P1x);\n    const run = Math.sqrt(dist * dist / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const rise = m * run;\n    if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n      return {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    }\n    const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n    const ix = P1x + u * (P2x - P1x);\n    const iy = P1y + u * (P2y - P1y);\n    const pRise = this.getLineLength(fromX, fromY, ix, iy);\n    const pRun = Math.sqrt(dist * dist - pRise * pRise);\n    const adjustedRun = Math.sqrt(pRun * pRun / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const adjustedRise = m * adjustedRun;\n    return {\n      x: ix + adjustedRun,\n      y: iy + adjustedRise\n    };\n  }\n  static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    const x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    const y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n  static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    const x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    const y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n  static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n    const cosPsi = Math.cos(psi),\n      sinPsi = Math.sin(psi);\n    const pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  }\n  static parsePathData(data) {\n    if (!data) {\n      return [];\n    }\n    let cs = data;\n    const cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    const arr = cs.split('|');\n    const ca = [];\n    const coords = [];\n    let cpx = 0;\n    let cpy = 0;\n    const re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    let match;\n    for (n = 1; n < arr.length; n++) {\n      let str = arr[n];\n      let c = str.charAt(0);\n      str = str.slice(1);\n      coords.length = 0;\n      while (match = re.exec(str)) {\n        coords.push(match[0]);\n      }\n      const p = [];\n      for (let j = 0, jlen = coords.length; j < jlen; j++) {\n        if (coords[j] === '00') {\n          p.push(0, 0);\n          continue;\n        }\n        const parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          break;\n        }\n        let cmd = '';\n        let points = [];\n        const startX = cpx,\n          startY = cpy;\n        var prevCmd, ctlPtx, ctlPty;\n        var rx, ry, psi, fa, fs, x1, y1;\n        switch (c) {\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (let idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            break;\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n        }\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n    return ca;\n  }\n  static calcLength(x, y, cmd, points) {\n    let len, p1, p2, t;\n    const path = Path;\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n      case 'Q':\n        return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n      case 'A':\n        len = 0.0;\n        var start = points[4];\n        var dTheta = points[5];\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n        if (dTheta < 0) {\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n        return len;\n    }\n    return 0;\n  }\n  static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n    const psi = psiDeg * (Math.PI / 180.0);\n    const xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    const yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n    const lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n    let f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n    const cxp = f * rx * yp / ry;\n    const cyp = f * -ry * xp / rx;\n    const cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    const cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n    const vMag = function (v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    const vRatio = function (u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    const vAngle = function (u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    const theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    const u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    const v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    let dTheta = vAngle(u, v);\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Arrow = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Line_1 = require(\"./Line\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nconst Path_1 = require(\"./Path\");\nclass Arrow extends Line_1.Line {\n  _sceneFunc(ctx) {\n    super._sceneFunc(ctx);\n    const PI2 = Math.PI * 2;\n    const points = this.points();\n    let tp = points;\n    const fromTension = this.tension() !== 0 && points.length > 4;\n    if (fromTension) {\n      tp = this.getTensionPoints();\n    }\n    const length = this.pointerLength();\n    const n = points.length;\n    let dx, dy;\n    if (fromTension) {\n      const lp = [tp[tp.length - 4], tp[tp.length - 3], tp[tp.length - 2], tp[tp.length - 1], points[n - 2], points[n - 1]];\n      const lastLength = Path_1.Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n      const previous = Path_1.Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n      dx = points[n - 2] - previous.x;\n      dy = points[n - 1] - previous.y;\n    } else {\n      dx = points[n - 2] - points[n - 4];\n      dy = points[n - 1] - points[n - 3];\n    }\n    const radians = (Math.atan2(dy, dx) + PI2) % PI2;\n    const width = this.pointerWidth();\n    if (this.pointerAtEnding()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n      this.__fillStroke(ctx);\n    }\n    if (this.pointerAtBeginning()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[0], points[1]);\n      if (fromTension) {\n        dx = (tp[0] + tp[2]) / 2 - points[0];\n        dy = (tp[1] + tp[3]) / 2 - points[1];\n      } else {\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n      }\n      ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n      this.__fillStroke(ctx);\n    }\n  }\n  __fillStroke(ctx) {\n    const isDashEnabled = this.dashEnabled();\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = false;\n      ctx.setLineDash([]);\n    }\n    ctx.fillStrokeShape(this);\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = true;\n    }\n  }\n  getSelfRect() {\n    const lineRect = super.getSelfRect();\n    const offset = this.pointerWidth() / 2;\n    return {\n      x: lineRect.x,\n      y: lineRect.y - offset,\n      width: lineRect.width,\n      height: lineRect.height + offset * 2\n    };\n  }\n}\nexports.Arrow = Arrow;\nArrow.prototype.className = 'Arrow';\n(0, Global_1._registerNode)(Arrow);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerLength', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerWidth', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtEnding', true);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Circle extends Shape_1.Shape {\n  _sceneFunc(context) {\n    context.beginPath();\n    context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.radius() * 2;\n  }\n  getHeight() {\n    return this.radius() * 2;\n  }\n  setWidth(width) {\n    if (this.radius() !== width / 2) {\n      this.radius(width / 2);\n    }\n  }\n  setHeight(height) {\n    if (this.radius() !== height / 2) {\n      this.radius(height / 2);\n    }\n  }\n}\nexports.Circle = Circle;\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(Circle);\nFactory_1.Factory.addGetterSetter(Circle, 'radius', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ellipse = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Ellipse extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const rx = this.radiusX(),\n      ry = this.radiusY();\n    context.beginPath();\n    context.save();\n    if (rx !== ry) {\n      context.scale(1, ry / rx);\n    }\n    context.arc(0, 0, rx, 0, Math.PI * 2, false);\n    context.restore();\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.radiusX() * 2;\n  }\n  getHeight() {\n    return this.radiusY() * 2;\n  }\n  setWidth(width) {\n    this.radiusX(width / 2);\n  }\n  setHeight(height) {\n    this.radiusY(height / 2);\n  }\n}\nexports.Ellipse = Ellipse;\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n(0, Global_1._registerNode)(Ellipse);\nFactory_1.Factory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusY', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Image = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nclass Image extends Shape_1.Shape {\n  constructor(attrs) {\n    super(attrs);\n    this._loadListener = () => {\n      this._requestDraw();\n    };\n    this.on('imageChange.konva', props => {\n      this._removeImageLoad(props.oldVal);\n      this._setImageLoad();\n    });\n    this._setImageLoad();\n  }\n  _setImageLoad() {\n    const image = this.image();\n    if (image && image.complete) {\n      return;\n    }\n    if (image && image.readyState === 4) {\n      return;\n    }\n    if (image && image['addEventListener']) {\n      image['addEventListener']('load', this._loadListener);\n    }\n  }\n  _removeImageLoad(image) {\n    if (image && image['removeEventListener']) {\n      image['removeEventListener']('load', this._loadListener);\n    }\n  }\n  destroy() {\n    this._removeImageLoad(this.image());\n    super.destroy();\n    return this;\n  }\n  _useBufferCanvas() {\n    const hasCornerRadius = !!this.cornerRadius();\n    const hasShadow = this.hasShadow();\n    if (hasCornerRadius && hasShadow) {\n      return true;\n    }\n    return super._useBufferCanvas(true);\n  }\n  _sceneFunc(context) {\n    const width = this.getWidth();\n    const height = this.getHeight();\n    const cornerRadius = this.cornerRadius();\n    const image = this.attrs.image;\n    let params;\n    if (image) {\n      const cropWidth = this.attrs.cropWidth;\n      const cropHeight = this.attrs.cropHeight;\n      if (cropWidth && cropHeight) {\n        params = [image, this.cropX(), this.cropY(), cropWidth, cropHeight, 0, 0, width, height];\n      } else {\n        params = [image, 0, 0, width, height];\n      }\n    }\n    if (this.hasFill() || this.hasStroke() || cornerRadius) {\n      context.beginPath();\n      cornerRadius ? Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius) : context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n    if (image) {\n      if (cornerRadius) {\n        context.clip();\n      }\n      context.drawImage.apply(context, params);\n    }\n  }\n  _hitFunc(context) {\n    const width = this.width(),\n      height = this.height(),\n      cornerRadius = this.cornerRadius();\n    context.beginPath();\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n    }\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    var _a, _b;\n    return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n  }\n  getHeight() {\n    var _a, _b;\n    return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n  }\n  static fromURL(url, callback, onError = null) {\n    const img = Util_1.Util.createImageElement();\n    img.onload = function () {\n      const image = new Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.onerror = onError;\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  }\n}\nexports.Image = Image;\nImage.prototype.className = 'Image';\n(0, Global_1._registerNode)(Image);\nFactory_1.Factory.addGetterSetter(Image, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\nFactory_1.Factory.addGetterSetter(Image, 'image');\nFactory_1.Factory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory_1.Factory.addGetterSetter(Image, 'cropX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropHeight', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tag = exports.Label = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Group_1 = require(\"../Group\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nconst ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text', 'width', 'height', 'pointerDirection', 'pointerWidth', 'pointerHeight'],\n  CHANGE_KONVA = 'Change.konva',\n  NONE = 'none',\n  UP = 'up',\n  RIGHT = 'right',\n  DOWN = 'down',\n  LEFT = 'left',\n  attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group_1.Group {\n  constructor(config) {\n    super(config);\n    this.on('add.konva', function (evt) {\n      this._addListeners(evt.child);\n      this._sync();\n    });\n  }\n  getText() {\n    return this.find('Text')[0];\n  }\n  getTag() {\n    return this.find('Tag')[0];\n  }\n  _addListeners(text) {\n    let that = this,\n      n;\n    const func = function () {\n      that._sync();\n    };\n    for (n = 0; n < attrChangeListLen; n++) {\n      text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n    }\n  }\n  getWidth() {\n    return this.getText().width();\n  }\n  getHeight() {\n    return this.getText().height();\n  }\n  _sync() {\n    let text = this.getText(),\n      tag = this.getTag(),\n      width,\n      height,\n      pointerDirection,\n      pointerWidth,\n      x,\n      y,\n      pointerHeight;\n    if (text && tag) {\n      width = text.width();\n      height = text.height();\n      pointerDirection = tag.pointerDirection();\n      pointerWidth = tag.pointerWidth();\n      pointerHeight = tag.pointerHeight();\n      x = 0;\n      y = 0;\n      switch (pointerDirection) {\n        case UP:\n          x = width / 2;\n          y = -1 * pointerHeight;\n          break;\n        case RIGHT:\n          x = width + pointerWidth;\n          y = height / 2;\n          break;\n        case DOWN:\n          x = width / 2;\n          y = height + pointerHeight;\n          break;\n        case LEFT:\n          x = -1 * pointerWidth;\n          y = height / 2;\n          break;\n      }\n      tag.setAttrs({\n        x: -1 * x,\n        y: -1 * y,\n        width: width,\n        height: height\n      });\n      text.setAttrs({\n        x: -1 * x,\n        y: -1 * y\n      });\n    }\n  }\n}\nexports.Label = Label;\nLabel.prototype.className = 'Label';\n(0, Global_1._registerNode)(Label);\nclass Tag extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const width = this.width(),\n      height = this.height(),\n      pointerDirection = this.pointerDirection(),\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      cornerRadius = this.cornerRadius();\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.beginPath();\n    context.moveTo(topLeft, 0);\n    if (pointerDirection === UP) {\n      context.lineTo((width - pointerWidth) / 2, 0);\n      context.lineTo(width / 2, -1 * pointerHeight);\n      context.lineTo((width + pointerWidth) / 2, 0);\n    }\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n    if (pointerDirection === RIGHT) {\n      context.lineTo(width, (height - pointerHeight) / 2);\n      context.lineTo(width + pointerWidth, height / 2);\n      context.lineTo(width, (height + pointerHeight) / 2);\n    }\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    if (pointerDirection === DOWN) {\n      context.lineTo((width + pointerWidth) / 2, height);\n      context.lineTo(width / 2, height + pointerHeight);\n      context.lineTo((width - pointerWidth) / 2, height);\n    }\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    if (pointerDirection === LEFT) {\n      context.lineTo(0, (height + pointerHeight) / 2);\n      context.lineTo(-1 * pointerWidth, height / 2);\n      context.lineTo(0, (height - pointerHeight) / 2);\n    }\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getSelfRect() {\n    let x = 0,\n      y = 0,\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      direction = this.pointerDirection(),\n      width = this.width(),\n      height = this.height();\n    if (direction === UP) {\n      y -= pointerHeight;\n      height += pointerHeight;\n    } else if (direction === DOWN) {\n      height += pointerHeight;\n    } else if (direction === LEFT) {\n      x -= pointerWidth * 1.5;\n      width += pointerWidth;\n    } else if (direction === RIGHT) {\n      width += pointerWidth * 1.5;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }\n}\nexports.Tag = Tag;\nTag.prototype.className = 'Tag';\n(0, Global_1._registerNode)(Tag);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rect = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nclass Rect extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const cornerRadius = this.cornerRadius(),\n      width = this.width(),\n      height = this.height();\n    context.beginPath();\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n    }\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n}\nexports.Rect = Rect;\nRect.prototype.className = 'Rect';\n(0, Global_1._registerNode)(Rect);\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegularPolygon = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass RegularPolygon extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const points = this._getPoints();\n    context.beginPath();\n    context.moveTo(points[0].x, points[0].y);\n    for (let n = 1; n < points.length; n++) {\n      context.lineTo(points[n].x, points[n].y);\n    }\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  _getPoints() {\n    const sides = this.attrs.sides;\n    const radius = this.attrs.radius || 0;\n    const points = [];\n    for (let n = 0; n < sides; n++) {\n      points.push({\n        x: radius * Math.sin(n * 2 * Math.PI / sides),\n        y: -1 * radius * Math.cos(n * 2 * Math.PI / sides)\n      });\n    }\n    return points;\n  }\n  getSelfRect() {\n    const points = this._getPoints();\n    let minX = points[0].x;\n    let maxX = points[0].y;\n    let minY = points[0].x;\n    let maxY = points[0].y;\n    points.forEach(point => {\n      minX = Math.min(minX, point.x);\n      maxX = Math.max(maxX, point.x);\n      minY = Math.min(minY, point.y);\n      maxY = Math.max(maxY, point.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  getWidth() {\n    return this.radius() * 2;\n  }\n  getHeight() {\n    return this.radius() * 2;\n  }\n  setWidth(width) {\n    this.radius(width / 2);\n  }\n  setHeight(height) {\n    this.radius(height / 2);\n  }\n}\nexports.RegularPolygon = RegularPolygon;\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(RegularPolygon);\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Ring = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nconst PIx2 = Math.PI * 2;\nclass Ring extends Shape_1.Shape {\n  _sceneFunc(context) {\n    context.beginPath();\n    context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n    context.moveTo(this.outerRadius(), 0);\n    context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.outerRadius() * 2;\n  }\n  getHeight() {\n    return this.outerRadius() * 2;\n  }\n  setWidth(width) {\n    this.outerRadius(width / 2);\n  }\n  setHeight(height) {\n    this.outerRadius(height / 2);\n  }\n}\nexports.Ring = Ring;\nRing.prototype.className = 'Ring';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Ring);\nFactory_1.Factory.addGetterSetter(Ring, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ring, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sprite = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Animation_1 = require(\"../Animation\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Sprite extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this._updated = true;\n    this.anim = new Animation_1.Animation(() => {\n      const updated = this._updated;\n      this._updated = false;\n      return updated;\n    });\n    this.on('animationChange.konva', function () {\n      this.frameIndex(0);\n    });\n    this.on('frameIndexChange.konva', function () {\n      this._updated = true;\n    });\n    this.on('frameRateChange.konva', function () {\n      if (!this.anim.isRunning()) {\n        return;\n      }\n      clearInterval(this.interval);\n      this._setInterval();\n    });\n  }\n  _sceneFunc(context) {\n    const anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      x = set[ix4 + 0],\n      y = set[ix4 + 1],\n      width = set[ix4 + 2],\n      height = set[ix4 + 3],\n      image = this.image();\n    if (this.hasFill() || this.hasStroke()) {\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n    if (image) {\n      if (offsets) {\n        const offset = offsets[anim],\n          ix2 = index * 2;\n        context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.drawImage(image, x, y, width, height, 0, 0, width, height);\n      }\n    }\n  }\n  _hitFunc(context) {\n    const anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      width = set[ix4 + 2],\n      height = set[ix4 + 3];\n    context.beginPath();\n    if (offsets) {\n      const offset = offsets[anim];\n      const ix2 = index * 2;\n      context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n    } else {\n      context.rect(0, 0, width, height);\n    }\n    context.closePath();\n    context.fillShape(this);\n  }\n  _useBufferCanvas() {\n    return super._useBufferCanvas(true);\n  }\n  _setInterval() {\n    const that = this;\n    this.interval = setInterval(function () {\n      that._updateIndex();\n    }, 1000 / this.frameRate());\n  }\n  start() {\n    if (this.isRunning()) {\n      return;\n    }\n    const layer = this.getLayer();\n    this.anim.setLayers(layer);\n    this._setInterval();\n    this.anim.start();\n  }\n  stop() {\n    this.anim.stop();\n    clearInterval(this.interval);\n  }\n  isRunning() {\n    return this.anim.isRunning();\n  }\n  _updateIndex() {\n    const index = this.frameIndex(),\n      animation = this.animation(),\n      animations = this.animations(),\n      anim = animations[animation],\n      len = anim.length / 4;\n    if (index < len - 1) {\n      this.frameIndex(index + 1);\n    } else {\n      this.frameIndex(0);\n    }\n  }\n}\nexports.Sprite = Sprite;\nSprite.prototype.className = 'Sprite';\n(0, Global_1._registerNode)(Sprite);\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.backCompat(Sprite, {\n  index: 'frameIndex',\n  getIndex: 'getFrameIndex',\n  setIndex: 'setFrameIndex'\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Star = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Star extends Shape_1.Shape {\n  _sceneFunc(context) {\n    const innerRadius = this.innerRadius(),\n      outerRadius = this.outerRadius(),\n      numPoints = this.numPoints();\n    context.beginPath();\n    context.moveTo(0, 0 - outerRadius);\n    for (let n = 1; n < numPoints * 2; n++) {\n      const radius = n % 2 === 0 ? outerRadius : innerRadius;\n      const x = radius * Math.sin(n * Math.PI / numPoints);\n      const y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n      context.lineTo(x, y);\n    }\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.outerRadius() * 2;\n  }\n  getHeight() {\n    return this.outerRadius() * 2;\n  }\n  setWidth(width) {\n    this.outerRadius(width / 2);\n  }\n  setHeight(height) {\n    this.outerRadius(height / 2);\n  }\n}\nexports.Star = Star;\nStar.prototype.className = 'Star';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Star);\nFactory_1.Factory.addGetterSetter(Star, 'numPoints', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = void 0;\nexports.stringToArray = stringToArray;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nfunction stringToArray(string) {\n  return [...string].reduce((acc, char, index, array) => {\n    if (/\\p{Emoji}/u.test(char)) {\n      const nextChar = array[index + 1];\n      if (nextChar && /\\p{Emoji_Modifier}|\\u200D/u.test(nextChar)) {\n        acc.push(char + nextChar);\n        array[index + 1] = '';\n      } else {\n        acc.push(char);\n      }\n    } else if (/\\p{Regional_Indicator}{2}/u.test(char + (array[index + 1] || ''))) {\n      acc.push(char + array[index + 1]);\n    } else if (index > 0 && /\\p{Mn}|\\p{Me}|\\p{Mc}/u.test(char)) {\n      acc[acc.length - 1] += char;\n    } else if (char) {\n      acc.push(char);\n    }\n    return acc;\n  }, []);\n}\nconst AUTO = 'auto',\n  CENTER = 'center',\n  INHERIT = 'inherit',\n  JUSTIFY = 'justify',\n  CHANGE_KONVA = 'Change.konva',\n  CONTEXT_2D = '2d',\n  DASH = '-',\n  LEFT = 'left',\n  TEXT = 'text',\n  TEXT_UPPER = 'Text',\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  MIDDLE = 'middle',\n  NORMAL = 'normal',\n  PX_SPACE = 'px ',\n  SPACE = ' ',\n  RIGHT = 'right',\n  RTL = 'rtl',\n  WORD = 'word',\n  CHAR = 'char',\n  NONE = 'none',\n  ELLIPSIS = '…',\n  ATTR_CHANGE_LIST = ['direction', 'fontFamily', 'fontSize', 'fontStyle', 'fontVariant', 'padding', 'align', 'verticalAlign', 'lineHeight', 'text', 'width', 'height', 'wrap', 'ellipsis', 'letterSpacing'],\n  attrChangeListLen = ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n  return fontFamily.split(',').map(family => {\n    family = family.trim();\n    const hasSpace = family.indexOf(' ') >= 0;\n    const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n    if (hasSpace && !hasQuotes) {\n      family = `\"${family}\"`;\n    }\n    return family;\n  }).join(', ');\n}\nlet dummyContext;\nfunction getDummyContext() {\n  if (dummyContext) {\n    return dummyContext;\n  }\n  dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n  return dummyContext;\n}\nfunction _fillFunc(context) {\n  context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n  context.setAttr('miterLimit', 2);\n  context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n  config = config || {};\n  if (!config.fillLinearGradientColorStops && !config.fillRadialGradientColorStops && !config.fillPatternImage) {\n    config.fill = config.fill || 'black';\n  }\n  return config;\n}\nclass Text extends Shape_1.Shape {\n  constructor(config) {\n    super(checkDefaultFill(config));\n    this._partialTextX = 0;\n    this._partialTextY = 0;\n    for (let n = 0; n < attrChangeListLen; n++) {\n      this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n    }\n    this._setTextData();\n  }\n  _sceneFunc(context) {\n    const textArr = this.textArr,\n      textArrLen = textArr.length;\n    if (!this.text()) {\n      return;\n    }\n    let padding = this.padding(),\n      fontSize = this.fontSize(),\n      lineHeightPx = this.lineHeight() * fontSize,\n      verticalAlign = this.verticalAlign(),\n      direction = this.direction(),\n      alignY = 0,\n      align = this.align(),\n      totalWidth = this.getWidth(),\n      letterSpacing = this.letterSpacing(),\n      fill = this.fill(),\n      textDecoration = this.textDecoration(),\n      shouldUnderline = textDecoration.indexOf('underline') !== -1,\n      shouldLineThrough = textDecoration.indexOf('line-through') !== -1,\n      n;\n    direction = direction === INHERIT ? context.direction : direction;\n    let translateY = lineHeightPx / 2;\n    let baseline = MIDDLE;\n    if (Global_1.Konva._fixTextRendering) {\n      const metrics = this.measureSize('M');\n      baseline = 'alphabetic';\n      translateY = (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent) / 2 + lineHeightPx / 2;\n    }\n    var lineTranslateX = 0;\n    var lineTranslateY = 0;\n    if (direction === RTL) {\n      context.setAttr('direction', direction);\n    }\n    context.setAttr('font', this._getContextFont());\n    context.setAttr('textBaseline', baseline);\n    context.setAttr('textAlign', LEFT);\n    if (verticalAlign === MIDDLE) {\n      alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n    } else if (verticalAlign === BOTTOM) {\n      alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n    }\n    context.translate(padding, alignY + padding);\n    for (n = 0; n < textArrLen; n++) {\n      var lineTranslateX = 0;\n      var lineTranslateY = 0;\n      var obj = textArr[n],\n        text = obj.text,\n        width = obj.width,\n        lastLine = obj.lastInParagraph,\n        spacesNumber,\n        oneWord,\n        lineWidth;\n      context.save();\n      if (align === RIGHT) {\n        lineTranslateX += totalWidth - width - padding * 2;\n      } else if (align === CENTER) {\n        lineTranslateX += (totalWidth - width - padding * 2) / 2;\n      }\n      if (shouldUnderline) {\n        context.save();\n        context.beginPath();\n        const yOffset = Global_1.Konva._fixTextRendering ? Math.round(fontSize / 4) : Math.round(fontSize / 2);\n        const x = lineTranslateX;\n        const y = translateY + lineTranslateY + yOffset;\n        context.moveTo(x, y);\n        spacesNumber = text.split(' ').length - 1;\n        oneWord = spacesNumber === 0;\n        lineWidth = align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n        context.lineTo(x + Math.round(lineWidth), y);\n        context.lineWidth = fontSize / 15;\n        const gradient = this._getLinearGradient();\n        context.strokeStyle = gradient || fill;\n        context.stroke();\n        context.restore();\n      }\n      if (shouldLineThrough) {\n        context.save();\n        context.beginPath();\n        const yOffset = Global_1.Konva._fixTextRendering ? -Math.round(fontSize / 4) : 0;\n        context.moveTo(lineTranslateX, translateY + lineTranslateY + yOffset);\n        spacesNumber = text.split(' ').length - 1;\n        oneWord = spacesNumber === 0;\n        lineWidth = align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n        context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + yOffset);\n        context.lineWidth = fontSize / 15;\n        const gradient = this._getLinearGradient();\n        context.strokeStyle = gradient || fill;\n        context.stroke();\n        context.restore();\n      }\n      if (direction !== RTL && (letterSpacing !== 0 || align === JUSTIFY)) {\n        spacesNumber = text.split(' ').length - 1;\n        const array = stringToArray(text);\n        for (let li = 0; li < array.length; li++) {\n          const letter = array[li];\n          if (letter === ' ' && !lastLine && align === JUSTIFY) {\n            lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n          }\n          this._partialTextX = lineTranslateX;\n          this._partialTextY = translateY + lineTranslateY;\n          this._partialText = letter;\n          context.fillStrokeShape(this);\n          lineTranslateX += this.measureSize(letter).width + letterSpacing;\n        }\n      } else {\n        if (letterSpacing !== 0) {\n          context.setAttr('letterSpacing', `${letterSpacing}px`);\n        }\n        this._partialTextX = lineTranslateX;\n        this._partialTextY = translateY + lineTranslateY;\n        this._partialText = text;\n        context.fillStrokeShape(this);\n      }\n      context.restore();\n      if (textArrLen > 1) {\n        translateY += lineHeightPx;\n      }\n    }\n  }\n  _hitFunc(context) {\n    const width = this.getWidth(),\n      height = this.getHeight();\n    context.beginPath();\n    context.rect(0, 0, width, height);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  setText(text) {\n    const str = Util_1.Util._isString(text) ? text : text === null || text === undefined ? '' : text + '';\n    this._setAttr(TEXT, str);\n    return this;\n  }\n  getWidth() {\n    const isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n    return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n  }\n  getHeight() {\n    const isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n    return isAuto ? this.fontSize() * this.textArr.length * this.lineHeight() + this.padding() * 2 : this.attrs.height;\n  }\n  getTextWidth() {\n    return this.textWidth;\n  }\n  getTextHeight() {\n    Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n    return this.textHeight;\n  }\n  measureSize(text) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    let _context = getDummyContext(),\n      fontSize = this.fontSize(),\n      metrics;\n    _context.save();\n    _context.font = this._getContextFont();\n    metrics = _context.measureText(text);\n    _context.restore();\n    const scaleFactor = fontSize / 100;\n    return {\n      actualBoundingBoxAscent: (_a = metrics.actualBoundingBoxAscent) !== null && _a !== void 0 ? _a : 71.58203125 * scaleFactor,\n      actualBoundingBoxDescent: (_b = metrics.actualBoundingBoxDescent) !== null && _b !== void 0 ? _b : 0,\n      actualBoundingBoxLeft: (_c = metrics.actualBoundingBoxLeft) !== null && _c !== void 0 ? _c : -7.421875 * scaleFactor,\n      actualBoundingBoxRight: (_d = metrics.actualBoundingBoxRight) !== null && _d !== void 0 ? _d : 75.732421875 * scaleFactor,\n      alphabeticBaseline: (_e = metrics.alphabeticBaseline) !== null && _e !== void 0 ? _e : 0,\n      emHeightAscent: (_f = metrics.emHeightAscent) !== null && _f !== void 0 ? _f : 100 * scaleFactor,\n      emHeightDescent: (_g = metrics.emHeightDescent) !== null && _g !== void 0 ? _g : -20 * scaleFactor,\n      fontBoundingBoxAscent: (_h = metrics.fontBoundingBoxAscent) !== null && _h !== void 0 ? _h : 91 * scaleFactor,\n      fontBoundingBoxDescent: (_j = metrics.fontBoundingBoxDescent) !== null && _j !== void 0 ? _j : 21 * scaleFactor,\n      hangingBaseline: (_k = metrics.hangingBaseline) !== null && _k !== void 0 ? _k : 72.80000305175781 * scaleFactor,\n      ideographicBaseline: (_l = metrics.ideographicBaseline) !== null && _l !== void 0 ? _l : -21 * scaleFactor,\n      width: metrics.width,\n      height: fontSize\n    };\n  }\n  _getContextFont() {\n    return this.fontStyle() + SPACE + this.fontVariant() + SPACE + (this.fontSize() + PX_SPACE) + normalizeFontFamily(this.fontFamily());\n  }\n  _addTextLine(line) {\n    const align = this.align();\n    if (align === JUSTIFY) {\n      line = line.trim();\n    }\n    const width = this._getTextWidth(line);\n    return this.textArr.push({\n      text: line,\n      width: width,\n      lastInParagraph: false\n    });\n  }\n  _getTextWidth(text) {\n    const letterSpacing = this.letterSpacing();\n    const length = text.length;\n    return getDummyContext().measureText(text).width + letterSpacing * length;\n  }\n  _setTextData() {\n    let lines = this.text().split('\\n'),\n      fontSize = +this.fontSize(),\n      textWidth = 0,\n      lineHeightPx = this.lineHeight() * fontSize,\n      width = this.attrs.width,\n      height = this.attrs.height,\n      fixedWidth = width !== AUTO && width !== undefined,\n      fixedHeight = height !== AUTO && height !== undefined,\n      padding = this.padding(),\n      maxWidth = width - padding * 2,\n      maxHeightPx = height - padding * 2,\n      currentHeightPx = 0,\n      wrap = this.wrap(),\n      shouldWrap = wrap !== NONE,\n      wrapAtWord = wrap !== CHAR && shouldWrap,\n      shouldAddEllipsis = this.ellipsis();\n    this.textArr = [];\n    getDummyContext().font = this._getContextFont();\n    const additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n    for (let i = 0, max = lines.length; i < max; ++i) {\n      let line = lines[i];\n      let lineWidth = this._getTextWidth(line);\n      if (fixedWidth && lineWidth > maxWidth) {\n        while (line.length > 0) {\n          let low = 0,\n            high = stringToArray(line).length,\n            match = '',\n            matchWidth = 0;\n          while (low < high) {\n            const mid = low + high >>> 1,\n              lineArray = stringToArray(line),\n              substr = lineArray.slice(0, mid + 1).join(''),\n              substrWidth = this._getTextWidth(substr);\n            const shouldConsiderEllipsis = shouldAddEllipsis && fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx;\n            const effectiveWidth = shouldConsiderEllipsis ? substrWidth + additionalWidth : substrWidth;\n            if (effectiveWidth <= maxWidth) {\n              low = mid + 1;\n              match = substr;\n              matchWidth = substrWidth;\n            } else {\n              high = mid;\n            }\n          }\n          if (match) {\n            if (wrapAtWord) {\n              const lineArray = stringToArray(line);\n              const matchArray = stringToArray(match);\n              const nextChar = lineArray[matchArray.length];\n              const nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n              let wrapIndex;\n              if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                wrapIndex = matchArray.length;\n              } else {\n                const lastSpaceIndex = matchArray.lastIndexOf(SPACE);\n                const lastDashIndex = matchArray.lastIndexOf(DASH);\n                wrapIndex = Math.max(lastSpaceIndex, lastDashIndex) + 1;\n              }\n              if (wrapIndex > 0) {\n                low = wrapIndex;\n                match = lineArray.slice(0, low).join('');\n                matchWidth = this._getTextWidth(match);\n              }\n            }\n            match = match.trimRight();\n            this._addTextLine(match);\n            textWidth = Math.max(textWidth, matchWidth);\n            currentHeightPx += lineHeightPx;\n            const shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\n            if (shouldHandleEllipsis) {\n              this._tryToAddEllipsisToLastLine();\n              break;\n            }\n            const lineArray = stringToArray(line);\n            line = lineArray.slice(low).join('').trimLeft();\n            if (line.length > 0) {\n              lineWidth = this._getTextWidth(line);\n              if (lineWidth <= maxWidth) {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                break;\n              }\n            }\n          } else {\n            break;\n          }\n        }\n      } else {\n        this._addTextLine(line);\n        currentHeightPx += lineHeightPx;\n        textWidth = Math.max(textWidth, lineWidth);\n        if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) {\n          this._tryToAddEllipsisToLastLine();\n        }\n      }\n      if (this.textArr[this.textArr.length - 1]) {\n        this.textArr[this.textArr.length - 1].lastInParagraph = true;\n      }\n      if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n        break;\n      }\n    }\n    this.textHeight = fontSize;\n    this.textWidth = textWidth;\n  }\n  _shouldHandleEllipsis(currentHeightPx) {\n    const fontSize = +this.fontSize(),\n      lineHeightPx = this.lineHeight() * fontSize,\n      height = this.attrs.height,\n      fixedHeight = height !== AUTO && height !== undefined,\n      padding = this.padding(),\n      maxHeightPx = height - padding * 2,\n      wrap = this.wrap(),\n      shouldWrap = wrap !== NONE;\n    return !shouldWrap || fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx;\n  }\n  _tryToAddEllipsisToLastLine() {\n    const width = this.attrs.width,\n      fixedWidth = width !== AUTO && width !== undefined,\n      padding = this.padding(),\n      maxWidth = width - padding * 2,\n      shouldAddEllipsis = this.ellipsis();\n    const lastLine = this.textArr[this.textArr.length - 1];\n    if (!lastLine || !shouldAddEllipsis) {\n      return;\n    }\n    if (fixedWidth) {\n      const haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n      if (!haveSpace) {\n        lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n      }\n    }\n    this.textArr.splice(this.textArr.length - 1, 1);\n    this._addTextLine(lastLine.text + ELLIPSIS);\n  }\n  getStrokeScaleEnabled() {\n    return true;\n  }\n  _useBufferCanvas() {\n    const hasLine = this.textDecoration().indexOf('underline') !== -1 || this.textDecoration().indexOf('line-through') !== -1;\n    const hasShadow = this.hasShadow();\n    if (hasLine && hasShadow) {\n      return true;\n    }\n    return super._useBufferCanvas();\n  }\n}\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = ['text', 'fontSize', 'padding', 'wrap', 'lineHeight', 'letterSpacing'];\n(0, Global_2._registerNode)(Text);\nFactory_1.Factory.overWriteSetter(Text, 'width', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.overWriteSetter(Text, 'height', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'direction', INHERIT);\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextPath = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Path_1 = require(\"./Path\");\nconst Text_1 = require(\"./Text\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nconst EMPTY_STRING = '',\n  NORMAL = 'normal';\nfunction _fillFunc(context) {\n  context.fillText(this.partialText, 0, 0);\n}\nfunction _strokeFunc(context) {\n  context.strokeText(this.partialText, 0, 0);\n}\nclass TextPath extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this.dummyCanvas = Util_1.Util.createCanvasElement();\n    this.dataArray = [];\n    this._readDataAttribute();\n    this.on('dataChange.konva', function () {\n      this._readDataAttribute();\n      this._setTextData();\n    });\n    this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\n    this._setTextData();\n  }\n  _getTextPathLength() {\n    return Path_1.Path.getPathLength(this.dataArray);\n  }\n  _getPointAtLength(length) {\n    if (!this.attrs.data) {\n      return null;\n    }\n    const totalLength = this.pathLength;\n    if (length - 1 > totalLength) {\n      return null;\n    }\n    return Path_1.Path.getPointAtLengthOfDataArray(length, this.dataArray);\n  }\n  _readDataAttribute() {\n    this.dataArray = Path_1.Path.parsePathData(this.attrs.data);\n    this.pathLength = this._getTextPathLength();\n  }\n  _sceneFunc(context) {\n    context.setAttr('font', this._getContextFont());\n    context.setAttr('textBaseline', this.textBaseline());\n    context.setAttr('textAlign', 'left');\n    context.save();\n    const textDecoration = this.textDecoration();\n    const fill = this.fill();\n    const fontSize = this.fontSize();\n    const glyphInfo = this.glyphInfo;\n    if (textDecoration === 'underline') {\n      context.beginPath();\n    }\n    for (let i = 0; i < glyphInfo.length; i++) {\n      context.save();\n      const p0 = glyphInfo[i].p0;\n      context.translate(p0.x, p0.y);\n      context.rotate(glyphInfo[i].rotation);\n      this.partialText = glyphInfo[i].text;\n      context.fillStrokeShape(this);\n      if (textDecoration === 'underline') {\n        if (i === 0) {\n          context.moveTo(0, fontSize / 2 + 1);\n        }\n        context.lineTo(fontSize, fontSize / 2 + 1);\n      }\n      context.restore();\n    }\n    if (textDecoration === 'underline') {\n      context.strokeStyle = fill;\n      context.lineWidth = fontSize / 20;\n      context.stroke();\n    }\n    context.restore();\n  }\n  _hitFunc(context) {\n    context.beginPath();\n    const glyphInfo = this.glyphInfo;\n    if (glyphInfo.length >= 1) {\n      const p0 = glyphInfo[0].p0;\n      context.moveTo(p0.x, p0.y);\n    }\n    for (let i = 0; i < glyphInfo.length; i++) {\n      const p1 = glyphInfo[i].p1;\n      context.lineTo(p1.x, p1.y);\n    }\n    context.setAttr('lineWidth', this.fontSize());\n    context.setAttr('strokeStyle', this.colorKey);\n    context.stroke();\n  }\n  getTextWidth() {\n    return this.textWidth;\n  }\n  getTextHeight() {\n    Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n    return this.textHeight;\n  }\n  setText(text) {\n    return Text_1.Text.prototype.setText.call(this, text);\n  }\n  _getContextFont() {\n    return Text_1.Text.prototype._getContextFont.call(this);\n  }\n  _getTextSize(text) {\n    const dummyCanvas = this.dummyCanvas;\n    const _context = dummyCanvas.getContext('2d');\n    _context.save();\n    _context.font = this._getContextFont();\n    const metrics = _context.measureText(text);\n    _context.restore();\n    return {\n      width: metrics.width,\n      height: parseInt(`${this.fontSize()}`, 10)\n    };\n  }\n  _setTextData() {\n    const {\n      width,\n      height\n    } = this._getTextSize(this.attrs.text);\n    this.textWidth = width;\n    this.textHeight = height;\n    this.glyphInfo = [];\n    if (!this.attrs.data) {\n      return null;\n    }\n    const letterSpacing = this.letterSpacing();\n    const align = this.align();\n    const kerningFunc = this.kerningFunc();\n    const textWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\n    let offset = 0;\n    if (align === 'center') {\n      offset = Math.max(0, this.pathLength / 2 - textWidth / 2);\n    }\n    if (align === 'right') {\n      offset = Math.max(0, this.pathLength - textWidth);\n    }\n    const charArr = (0, Text_1.stringToArray)(this.text());\n    let offsetToGlyph = offset;\n    for (let i = 0; i < charArr.length; i++) {\n      const charStartPoint = this._getPointAtLength(offsetToGlyph);\n      if (!charStartPoint) return;\n      let glyphWidth = this._getTextSize(charArr[i]).width + letterSpacing;\n      if (charArr[i] === ' ' && align === 'justify') {\n        const numberOfSpaces = this.text().split(' ').length - 1;\n        glyphWidth += (this.pathLength - textWidth) / numberOfSpaces;\n      }\n      const charEndPoint = this._getPointAtLength(offsetToGlyph + glyphWidth);\n      if (!charEndPoint) return;\n      const width = Path_1.Path.getLineLength(charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n      let kern = 0;\n      if (kerningFunc) {\n        try {\n          kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n        } catch (e) {\n          kern = 0;\n        }\n      }\n      charStartPoint.x += kern;\n      charEndPoint.x += kern;\n      this.textWidth += kern;\n      const midpoint = Path_1.Path.getPointOnLine(kern + width / 2.0, charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n      const rotation = Math.atan2(charEndPoint.y - charStartPoint.y, charEndPoint.x - charStartPoint.x);\n      this.glyphInfo.push({\n        transposeX: midpoint.x,\n        transposeY: midpoint.y,\n        text: charArr[i],\n        rotation: rotation,\n        p0: charStartPoint,\n        p1: charEndPoint\n      });\n      offsetToGlyph += glyphWidth;\n    }\n  }\n  getSelfRect() {\n    if (!this.glyphInfo.length) {\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const points = [];\n    this.glyphInfo.forEach(function (info) {\n      points.push(info.p0.x);\n      points.push(info.p0.y);\n      points.push(info.p1.x);\n      points.push(info.p1.y);\n    });\n    let minX = points[0] || 0;\n    let maxX = points[0] || 0;\n    let minY = points[1] || 0;\n    let maxY = points[1] || 0;\n    let x, y;\n    for (let i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      minX = Math.min(minX, x);\n      maxX = Math.max(maxX, x);\n      minY = Math.min(minY, y);\n      maxY = Math.max(maxY, y);\n    }\n    const fontSize = this.fontSize();\n    return {\n      x: minX - fontSize / 2,\n      y: minY - fontSize / 2,\n      width: maxX - minX + fontSize,\n      height: maxY - minY + fontSize\n    };\n  }\n  destroy() {\n    Util_1.Util.releaseCanvas(this.dummyCanvas);\n    return super.destroy();\n  }\n}\nexports.TextPath = TextPath;\nTextPath.prototype._fillFunc = _fillFunc;\nTextPath.prototype._strokeFunc = _strokeFunc;\nTextPath.prototype._fillFuncHit = _fillFunc;\nTextPath.prototype._strokeFuncHit = _strokeFunc;\nTextPath.prototype.className = 'TextPath';\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\n(0, Global_1._registerNode)(TextPath);\nFactory_1.Factory.addGetterSetter(TextPath, 'data');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'align', 'left');\nFactory_1.Factory.addGetterSetter(TextPath, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'textBaseline', 'middle');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\nFactory_1.Factory.addGetterSetter(TextPath, 'textDecoration', '');\nFactory_1.Factory.addGetterSetter(TextPath, 'kerningFunc', undefined);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transformer = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Shape_1 = require(\"../Shape\");\nconst Rect_1 = require(\"./Rect\");\nconst Group_1 = require(\"../Group\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nconst EVENTS_NAME = 'tr-konva';\nconst ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange', 'anchorStyleFuncChange'].map(e => e + `.${EVENTS_NAME}`).join(' ');\nconst NODES_RECT = 'nodesRect';\nconst TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'];\nconst ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad, rotateCursor) {\n  if (anchorName === 'rotater') {\n    return rotateCursor;\n  }\n  rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n  const angle = (Util_1.Util.radToDeg(rad) % 360 + 360) % 360;\n  if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\nconst ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nconst MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n  const x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  const y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return {\n    ...shape,\n    rotation: shape.rotation + angleRad,\n    x,\n    y\n  };\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n  const center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n  let snapped = newRotationRad;\n  for (let i = 0; i < snaps.length; i++) {\n    const angle = Global_1.Konva.getAngle(snaps[i]);\n    const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n  return snapped;\n}\nlet activeTransformersCount = 0;\nclass Transformer extends Group_1.Group {\n  constructor(config) {\n    super(config);\n    this._movingAnchorName = null;\n    this._transforming = false;\n    this._createElements();\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this.update = this.update.bind(this);\n    this.on(ATTR_CHANGE_LIST, this.update);\n    if (this.getNode()) {\n      this.update();\n    }\n  }\n  attachTo(node) {\n    this.setNode(node);\n    return this;\n  }\n  setNode(node) {\n    Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n    return this.setNodes([node]);\n  }\n  getNode() {\n    return this._nodes && this._nodes[0];\n  }\n  _getEventNamespace() {\n    return EVENTS_NAME + this._id;\n  }\n  setNodes(nodes = []) {\n    if (this._nodes && this._nodes.length) {\n      this.detach();\n    }\n    const filteredNodes = nodes.filter(node => {\n      if (node.isAncestorOf(this)) {\n        Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n        return false;\n      }\n      return true;\n    });\n    this._nodes = nodes = filteredNodes;\n    if (nodes.length === 1 && this.useSingleNodeRotation()) {\n      this.rotation(nodes[0].getAbsoluteRotation());\n    } else {\n      this.rotation(0);\n    }\n    this._nodes.forEach(node => {\n      const onChange = () => {\n        if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n          this.rotation(this.nodes()[0].getAbsoluteRotation());\n        }\n        this._resetTransformCache();\n        if (!this._transforming && !this.isDragging()) {\n          this.update();\n        }\n      };\n      if (node._attrsAffectingSize.length) {\n        const additionalEvents = node._attrsAffectingSize.map(prop => prop + 'Change.' + this._getEventNamespace()).join(' ');\n        node.on(additionalEvents, onChange);\n      }\n      node.on(TRANSFORM_CHANGE_STR.map(e => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n      node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n      this._proxyDrag(node);\n    });\n    this._resetTransformCache();\n    const elementsCreated = !!this.findOne('.top-left');\n    if (elementsCreated) {\n      this.update();\n    }\n    return this;\n  }\n  _proxyDrag(node) {\n    let lastPos;\n    node.on(`dragstart.${this._getEventNamespace()}`, e => {\n      lastPos = node.getAbsolutePosition();\n      if (!this.isDragging() && node !== this.findOne('.back')) {\n        this.startDrag(e, false);\n      }\n    });\n    node.on(`dragmove.${this._getEventNamespace()}`, e => {\n      if (!lastPos) {\n        return;\n      }\n      const abs = node.getAbsolutePosition();\n      const dx = abs.x - lastPos.x;\n      const dy = abs.y - lastPos.y;\n      this.nodes().forEach(otherNode => {\n        if (otherNode === node) {\n          return;\n        }\n        if (otherNode.isDragging()) {\n          return;\n        }\n        const otherAbs = otherNode.getAbsolutePosition();\n        otherNode.setAbsolutePosition({\n          x: otherAbs.x + dx,\n          y: otherAbs.y + dy\n        });\n        otherNode.startDrag(e);\n      });\n      lastPos = null;\n    });\n  }\n  getNodes() {\n    return this._nodes || [];\n  }\n  getActiveAnchor() {\n    return this._movingAnchorName;\n  }\n  detach() {\n    if (this._nodes) {\n      this._nodes.forEach(node => {\n        node.off('.' + this._getEventNamespace());\n      });\n    }\n    this._nodes = [];\n    this._resetTransformCache();\n  }\n  _resetTransformCache() {\n    this._clearCache(NODES_RECT);\n    this._clearCache('transform');\n    this._clearSelfAndDescendantCache('absoluteTransform');\n  }\n  _getNodeRect() {\n    return this._getCache(NODES_RECT, this.__getNodeRect);\n  }\n  __getNodeShape(node, rot = this.rotation(), relative) {\n    const rect = node.getClientRect({\n      skipTransform: true,\n      skipShadow: true,\n      skipStroke: this.ignoreStroke()\n    });\n    const absScale = node.getAbsoluteScale(relative);\n    const absPos = node.getAbsolutePosition(relative);\n    const dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n    const dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n    const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n    const box = {\n      x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n      y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n      width: rect.width * absScale.x,\n      height: rect.height * absScale.y,\n      rotation: rotation\n    };\n    return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n      x: 0,\n      y: 0\n    });\n  }\n  __getNodeRect() {\n    const node = this.getNode();\n    if (!node) {\n      return {\n        x: -MAX_SAFE_INTEGER,\n        y: -MAX_SAFE_INTEGER,\n        width: 0,\n        height: 0,\n        rotation: 0\n      };\n    }\n    const totalPoints = [];\n    this.nodes().map(node => {\n      const box = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      const points = [{\n        x: box.x,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }, {\n        x: box.x,\n        y: box.y + box.height\n      }];\n      const trans = node.getAbsoluteTransform();\n      points.forEach(function (point) {\n        const transformed = trans.point(point);\n        totalPoints.push(transformed);\n      });\n    });\n    const tr = new Util_1.Transform();\n    tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    totalPoints.forEach(function (point) {\n      const transformed = tr.point(point);\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    tr.invert();\n    const p = tr.point({\n      x: minX,\n      y: minY\n    });\n    return {\n      x: p.x,\n      y: p.y,\n      width: maxX - minX,\n      height: maxY - minY,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    };\n  }\n  getX() {\n    return this._getNodeRect().x;\n  }\n  getY() {\n    return this._getNodeRect().y;\n  }\n  getWidth() {\n    return this._getNodeRect().width;\n  }\n  getHeight() {\n    return this._getNodeRect().height;\n  }\n  _createElements() {\n    this._createBack();\n    ANCHORS_NAMES.forEach(name => {\n      this._createAnchor(name);\n    });\n    this._createAnchor('rotater');\n  }\n  _createAnchor(name) {\n    const anchor = new Rect_1.Rect({\n      stroke: 'rgb(0, 161, 255)',\n      fill: 'white',\n      strokeWidth: 1,\n      name: name + ' _anchor',\n      dragDistance: 0,\n      draggable: true,\n      hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n    });\n    const self = this;\n    anchor.on('mousedown touchstart', function (e) {\n      self._handleMouseDown(e);\n    });\n    anchor.on('dragstart', e => {\n      anchor.stopDrag();\n      e.cancelBubble = true;\n    });\n    anchor.on('dragend', e => {\n      e.cancelBubble = true;\n    });\n    anchor.on('mouseenter', () => {\n      const rad = Global_1.Konva.getAngle(this.rotation());\n      const rotateCursor = this.rotateAnchorCursor();\n      const cursor = getCursor(name, rad, rotateCursor);\n      anchor.getStage().content && (anchor.getStage().content.style.cursor = cursor);\n      this._cursorChange = true;\n    });\n    anchor.on('mouseout', () => {\n      anchor.getStage().content && (anchor.getStage().content.style.cursor = '');\n      this._cursorChange = false;\n    });\n    this.add(anchor);\n  }\n  _createBack() {\n    const back = new Shape_1.Shape({\n      name: 'back',\n      width: 0,\n      height: 0,\n      draggable: true,\n      sceneFunc(ctx, shape) {\n        const tr = shape.getParent();\n        const padding = tr.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.moveTo(shape.width() / 2, -padding);\n        if (tr.rotateEnabled() && tr.rotateLineVisible()) {\n          ctx.lineTo(shape.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(shape.height()) - padding);\n        }\n        ctx.fillStrokeShape(shape);\n      },\n      hitFunc: (ctx, shape) => {\n        if (!this.shouldOverdrawWholeArea()) {\n          return;\n        }\n        const padding = this.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.fillStrokeShape(shape);\n      }\n    });\n    this.add(back);\n    this._proxyDrag(back);\n    back.on('dragstart', e => {\n      e.cancelBubble = true;\n    });\n    back.on('dragmove', e => {\n      e.cancelBubble = true;\n    });\n    back.on('dragend', e => {\n      e.cancelBubble = true;\n    });\n    this.on('dragmove', e => {\n      this.update();\n    });\n  }\n  _handleMouseDown(e) {\n    if (this._transforming) {\n      return;\n    }\n    this._movingAnchorName = e.target.name().split(' ')[0];\n    const attrs = this._getNodeRect();\n    const width = attrs.width;\n    const height = attrs.height;\n    const hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.sin = Math.abs(height / hypotenuse);\n    this.cos = Math.abs(width / hypotenuse);\n    if (typeof window !== 'undefined') {\n      window.addEventListener('mousemove', this._handleMouseMove);\n      window.addEventListener('touchmove', this._handleMouseMove);\n      window.addEventListener('mouseup', this._handleMouseUp, true);\n      window.addEventListener('touchend', this._handleMouseUp, true);\n    }\n    this._transforming = true;\n    const ap = e.target.getAbsolutePosition();\n    const pos = e.target.getStage().getPointerPosition();\n    this._anchorDragOffset = {\n      x: pos.x - ap.x,\n      y: pos.y - ap.y\n    };\n    activeTransformersCount++;\n    this._fire('transformstart', {\n      evt: e.evt,\n      target: this.getNode()\n    });\n    this._nodes.forEach(target => {\n      target._fire('transformstart', {\n        evt: e.evt,\n        target\n      });\n    });\n  }\n  _handleMouseMove(e) {\n    let x, y, newHypotenuse;\n    const anchorNode = this.findOne('.' + this._movingAnchorName);\n    const stage = anchorNode.getStage();\n    stage.setPointersPositions(e);\n    const pp = stage.getPointerPosition();\n    let newNodePos = {\n      x: pp.x - this._anchorDragOffset.x,\n      y: pp.y - this._anchorDragOffset.y\n    };\n    const oldAbs = anchorNode.getAbsolutePosition();\n    if (this.anchorDragBoundFunc()) {\n      newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n    }\n    anchorNode.setAbsolutePosition(newNodePos);\n    const newAbs = anchorNode.getAbsolutePosition();\n    if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n      return;\n    }\n    if (this._movingAnchorName === 'rotater') {\n      const attrs = this._getNodeRect();\n      x = anchorNode.x() - attrs.width / 2;\n      y = -anchorNode.y() + attrs.height / 2;\n      let delta = Math.atan2(-y, x) + Math.PI / 2;\n      if (attrs.height < 0) {\n        delta -= Math.PI;\n      }\n      const oldRotation = Global_1.Konva.getAngle(this.rotation());\n      const newRotation = oldRotation + delta;\n      const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n      const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n      const diff = snappedRot - attrs.rotation;\n      const shape = rotateAroundCenter(attrs, diff);\n      this._fitNodesInto(shape, e);\n      return;\n    }\n    const shiftBehavior = this.shiftBehavior();\n    let keepProportion;\n    if (shiftBehavior === 'inverted') {\n      keepProportion = this.keepRatio() && !e.shiftKey;\n    } else if (shiftBehavior === 'none') {\n      keepProportion = this.keepRatio();\n    } else {\n      keepProportion = this.keepRatio() || e.shiftKey;\n    }\n    var centeredScaling = this.centeredScaling() || e.altKey;\n    if (this._movingAnchorName === 'top-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-right').x(),\n          y: this.findOne('.bottom-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-left').x(comparePoint.x - x);\n        this.findOne('.top-left').y(comparePoint.y - y);\n      }\n    } else if (this._movingAnchorName === 'top-center') {\n      this.findOne('.top-left').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'top-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-left').x(),\n          y: this.findOne('.bottom-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-right').x(comparePoint.x + x);\n        this.findOne('.top-right').y(comparePoint.y - y);\n      }\n      var pos = anchorNode.position();\n      this.findOne('.top-left').y(pos.y);\n      this.findOne('.bottom-right').x(pos.x);\n    } else if (this._movingAnchorName === 'middle-left') {\n      this.findOne('.top-left').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'middle-right') {\n      this.findOne('.bottom-right').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'bottom-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-right').x(),\n          y: this.findOne('.top-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n        var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        anchorNode.x(comparePoint.x - x);\n        anchorNode.y(comparePoint.y + y);\n      }\n      pos = anchorNode.position();\n      this.findOne('.top-left').x(pos.x);\n      this.findOne('.bottom-right').y(pos.y);\n    } else if (this._movingAnchorName === 'bottom-center') {\n      this.findOne('.bottom-right').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'bottom-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-left').x(),\n          y: this.findOne('.top-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.bottom-right').x(comparePoint.x + x);\n        this.findOne('.bottom-right').y(comparePoint.y + y);\n      }\n    } else {\n      console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n    }\n    var centeredScaling = this.centeredScaling() || e.altKey;\n    if (centeredScaling) {\n      const topLeft = this.findOne('.top-left');\n      const bottomRight = this.findOne('.bottom-right');\n      const topOffsetX = topLeft.x();\n      const topOffsetY = topLeft.y();\n      const bottomOffsetX = this.getWidth() - bottomRight.x();\n      const bottomOffsetY = this.getHeight() - bottomRight.y();\n      bottomRight.move({\n        x: -topOffsetX,\n        y: -topOffsetY\n      });\n      topLeft.move({\n        x: bottomOffsetX,\n        y: bottomOffsetY\n      });\n    }\n    const absPos = this.findOne('.top-left').getAbsolutePosition();\n    x = absPos.x;\n    y = absPos.y;\n    const width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n    const height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n    this._fitNodesInto({\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    }, e);\n  }\n  _handleMouseUp(e) {\n    this._removeEvents(e);\n  }\n  getAbsoluteTransform() {\n    return this.getTransform();\n  }\n  _removeEvents(e) {\n    var _a;\n    if (this._transforming) {\n      this._transforming = false;\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('mousemove', this._handleMouseMove);\n        window.removeEventListener('touchmove', this._handleMouseMove);\n        window.removeEventListener('mouseup', this._handleMouseUp, true);\n        window.removeEventListener('touchend', this._handleMouseUp, true);\n      }\n      const node = this.getNode();\n      activeTransformersCount--;\n      this._fire('transformend', {\n        evt: e,\n        target: node\n      });\n      (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n      if (node) {\n        this._nodes.forEach(target => {\n          var _a;\n          target._fire('transformend', {\n            evt: e,\n            target\n          });\n          (_a = target.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n      }\n      this._movingAnchorName = null;\n    }\n  }\n  _fitNodesInto(newAttrs, evt) {\n    const oldAttrs = this._getNodeRect();\n    const minSize = 1;\n    if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n    if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n    const t = new Util_1.Transform();\n    t.rotate(Global_1.Konva.getAngle(this.rotation()));\n    if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n      const offset = t.point({\n        x: -this.padding() * 2,\n        y: 0\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      newAttrs.width += this.padding() * 2;\n      this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n    } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n      const offset = t.point({\n        x: this.padding() * 2,\n        y: 0\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.width += this.padding() * 2;\n    }\n    if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n      const offset = t.point({\n        x: 0,\n        y: -this.padding() * 2\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n    } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n      const offset = t.point({\n        x: 0,\n        y: this.padding() * 2\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n    }\n    if (this.boundBoxFunc()) {\n      const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n      if (bounded) {\n        newAttrs = bounded;\n      } else {\n        Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n      }\n    }\n    const baseSize = 10000000;\n    const oldTr = new Util_1.Transform();\n    oldTr.translate(oldAttrs.x, oldAttrs.y);\n    oldTr.rotate(oldAttrs.rotation);\n    oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n    const newTr = new Util_1.Transform();\n    const newScaleX = newAttrs.width / baseSize;\n    const newScaleY = newAttrs.height / baseSize;\n    if (this.flipEnabled() === false) {\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.translate(newAttrs.width < 0 ? newAttrs.width : 0, newAttrs.height < 0 ? newAttrs.height : 0);\n      newTr.scale(Math.abs(newScaleX), Math.abs(newScaleY));\n    } else {\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.scale(newScaleX, newScaleY);\n    }\n    const delta = newTr.multiply(oldTr.invert());\n    this._nodes.forEach(node => {\n      var _a;\n      const parentTransform = node.getParent().getAbsoluteTransform();\n      const localTransform = node.getTransform().copy();\n      localTransform.translate(node.offsetX(), node.offsetY());\n      const newLocalTransform = new Util_1.Transform();\n      newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n      const attrs = newLocalTransform.decompose();\n      node.setAttrs(attrs);\n      (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    });\n    this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n    this._nodes.forEach(node => {\n      this._fire('transform', {\n        evt: evt,\n        target: node\n      });\n      node._fire('transform', {\n        evt: evt,\n        target: node\n      });\n    });\n    this._resetTransformCache();\n    this.update();\n    this.getLayer().batchDraw();\n  }\n  forceUpdate() {\n    this._resetTransformCache();\n    this.update();\n  }\n  _batchChangeChild(selector, attrs) {\n    const anchor = this.findOne(selector);\n    anchor.setAttrs(attrs);\n  }\n  update() {\n    var _a;\n    const attrs = this._getNodeRect();\n    this.rotation(Util_1.Util._getRotation(attrs.rotation));\n    const width = attrs.width;\n    const height = attrs.height;\n    const enabledAnchors = this.enabledAnchors();\n    const resizeEnabled = this.resizeEnabled();\n    const padding = this.padding();\n    const anchorSize = this.anchorSize();\n    const anchors = this.find('._anchor');\n    anchors.forEach(node => {\n      node.setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: this.anchorStroke(),\n        strokeWidth: this.anchorStrokeWidth(),\n        fill: this.anchorFill(),\n        cornerRadius: this.anchorCornerRadius()\n      });\n    });\n    this._batchChangeChild('.top-left', {\n      x: 0,\n      y: 0,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n    });\n    this._batchChangeChild('.top-center', {\n      x: width / 2,\n      y: 0,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n    });\n    this._batchChangeChild('.top-right', {\n      x: width,\n      y: 0,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n    });\n    this._batchChangeChild('.middle-left', {\n      x: 0,\n      y: height / 2,\n      offsetX: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n    });\n    this._batchChangeChild('.middle-right', {\n      x: width,\n      y: height / 2,\n      offsetX: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n    });\n    this._batchChangeChild('.bottom-left', {\n      x: 0,\n      y: height,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n    });\n    this._batchChangeChild('.bottom-center', {\n      x: width / 2,\n      y: height,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n    });\n    this._batchChangeChild('.bottom-right', {\n      x: width,\n      y: height,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n    });\n    this._batchChangeChild('.rotater', {\n      x: width / 2,\n      y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n      visible: this.rotateEnabled()\n    });\n    this._batchChangeChild('.back', {\n      width: width,\n      height: height,\n      visible: this.borderEnabled(),\n      stroke: this.borderStroke(),\n      strokeWidth: this.borderStrokeWidth(),\n      dash: this.borderDash(),\n      x: 0,\n      y: 0\n    });\n    const styleFunc = this.anchorStyleFunc();\n    if (styleFunc) {\n      anchors.forEach(node => {\n        styleFunc(node);\n      });\n    }\n    (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n  }\n  isTransforming() {\n    return this._transforming;\n  }\n  stopTransform() {\n    if (this._transforming) {\n      this._removeEvents();\n      const anchorNode = this.findOne('.' + this._movingAnchorName);\n      if (anchorNode) {\n        anchorNode.stopDrag();\n      }\n    }\n  }\n  destroy() {\n    if (this.getStage() && this._cursorChange) {\n      this.getStage().content && (this.getStage().content.style.cursor = '');\n    }\n    Group_1.Group.prototype.destroy.call(this);\n    this.detach();\n    this._removeEvents();\n    return this;\n  }\n  toObject() {\n    return Node_1.Node.prototype.toObject.call(this);\n  }\n  clone(obj) {\n    const node = Node_1.Node.prototype.clone.call(this, obj);\n    return node;\n  }\n  getClientRect() {\n    if (this.nodes().length > 0) {\n      return super.getClientRect();\n    } else {\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n  }\n}\nexports.Transformer = Transformer;\nTransformer.isTransforming = () => {\n  return activeTransformersCount > 0;\n};\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util_1.Util.warn('enabledAnchors value should be an array');\n  }\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util_1.Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n  return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateLineVisible', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorCursor', 'crosshair');\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wedge = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nclass Wedge extends Shape_1.Shape {\n  _sceneFunc(context) {\n    context.beginPath();\n    context.arc(0, 0, this.radius(), 0, Global_1.Konva.getAngle(this.angle()), this.clockwise());\n    context.lineTo(0, 0);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.radius() * 2;\n  }\n  getHeight() {\n    return this.radius() * 2;\n  }\n  setWidth(width) {\n    this.radius(width / 2);\n  }\n  setHeight(height) {\n    this.radius(height / 2);\n  }\n}\nexports.Wedge = Wedge;\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n(0, Global_2._registerNode)(Wedge);\nFactory_1.Factory.addGetterSetter(Wedge, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'clockwise', false);\nFactory_1.Factory.backCompat(Wedge, {\n  angleDeg: 'angle',\n  getAngleDeg: 'getAngle',\n  setAngleDeg: 'setAngle'\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blur = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction BlurStack() {\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n}\nconst mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nconst shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\nfunction filterGaussBlurRGBA(imageData, radius) {\n  const pixels = imageData.data,\n    width = imageData.width,\n    height = imageData.height;\n  let x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n  const div = radius + radius + 1,\n    widthMinus1 = width - 1,\n    heightMinus1 = height - 1,\n    radiusPlus1 = radius + 1,\n    sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n    stackStart = new BlurStack(),\n    mul_sum = mul_table[radius],\n    shg_sum = shg_table[radius];\n  let stackEnd = null,\n    stack = stackStart,\n    stackIn = null,\n    stackOut = null;\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  yw = yi = 0;\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n    }\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      a_in_sum += stackIn.a = pixels[p + 3];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      a_sum += a_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n    yw += width;\n  }\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n    yp = width;\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n}\nconst Blur = function Blur(imageData) {\n  const radius = Math.round(this.blurRadius());\n  if (radius > 0) {\n    filterGaussBlurRGBA(imageData, radius);\n  }\n};\nexports.Blur = Blur;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Brighten = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Brighten = function (imageData) {\n  const brightness = this.brightness() * 255,\n    data = imageData.data,\n    len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    data[i] += brightness;\n    data[i + 1] += brightness;\n    data[i + 2] += brightness;\n  }\n};\nexports.Brighten = Brighten;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'brightness', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contrast = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Contrast = function (imageData) {\n  const adjust = Math.pow((this.contrast() + 100) / 100, 2);\n  const data = imageData.data,\n    nPixels = data.length;\n  let red = 150,\n    green = 150,\n    blue = 150;\n  for (let i = 0; i < nPixels; i += 4) {\n    red = data[i];\n    green = data[i + 1];\n    blue = data[i + 2];\n    red /= 255;\n    red -= 0.5;\n    red *= adjust;\n    red += 0.5;\n    red *= 255;\n    green /= 255;\n    green -= 0.5;\n    green *= adjust;\n    green += 0.5;\n    green *= 255;\n    blue /= 255;\n    blue -= 0.5;\n    blue *= adjust;\n    blue += 0.5;\n    blue *= 255;\n    red = red < 0 ? 0 : red > 255 ? 255 : red;\n    green = green < 0 ? 0 : green > 255 ? 255 : green;\n    blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n    data[i] = red;\n    data[i + 1] = green;\n    data[i + 2] = blue;\n  }\n};\nexports.Contrast = Contrast;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emboss = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst Emboss = function (imageData) {\n  const strength = this.embossStrength() * 10,\n    greyLevel = this.embossWhiteLevel() * 255,\n    direction = this.embossDirection(),\n    blend = this.embossBlend(),\n    data = imageData.data,\n    w = imageData.width,\n    h = imageData.height,\n    w4 = w * 4;\n  let dirY = 0,\n    dirX = 0,\n    y = h;\n  switch (direction) {\n    case 'top-left':\n      dirY = -1;\n      dirX = -1;\n      break;\n    case 'top':\n      dirY = -1;\n      dirX = 0;\n      break;\n    case 'top-right':\n      dirY = -1;\n      dirX = 1;\n      break;\n    case 'right':\n      dirY = 0;\n      dirX = 1;\n      break;\n    case 'bottom-right':\n      dirY = 1;\n      dirX = 1;\n      break;\n    case 'bottom':\n      dirY = 1;\n      dirX = 0;\n      break;\n    case 'bottom-left':\n      dirY = 1;\n      dirX = -1;\n      break;\n    case 'left':\n      dirY = 0;\n      dirX = -1;\n      break;\n    default:\n      Util_1.Util.error('Unknown emboss direction: ' + direction);\n  }\n  do {\n    const offsetY = (y - 1) * w4;\n    let otherY = dirY;\n    if (y + otherY < 1) {\n      otherY = 0;\n    }\n    if (y + otherY > h) {\n      otherY = 0;\n    }\n    const offsetYOther = (y - 1 + otherY) * w * 4;\n    let x = w;\n    do {\n      const offset = offsetY + (x - 1) * 4;\n      let otherX = dirX;\n      if (x + otherX < 1) {\n        otherX = 0;\n      }\n      if (x + otherX > w) {\n        otherX = 0;\n      }\n      const offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n      const dR = data[offset] - data[offsetOther];\n      const dG = data[offset + 1] - data[offsetOther + 1];\n      const dB = data[offset + 2] - data[offsetOther + 2];\n      let dif = dR;\n      const absDif = dif > 0 ? dif : -dif;\n      const absG = dG > 0 ? dG : -dG;\n      const absB = dB > 0 ? dB : -dB;\n      if (absG > absDif) {\n        dif = dG;\n      }\n      if (absB > absDif) {\n        dif = dB;\n      }\n      dif *= strength;\n      if (blend) {\n        const r = data[offset] + dif;\n        const g = data[offset + 1] + dif;\n        const b = data[offset + 2] + dif;\n        data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n        data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n        data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n      } else {\n        let grey = greyLevel - dif;\n        if (grey < 0) {\n          grey = 0;\n        } else if (grey > 255) {\n          grey = 255;\n        }\n        data[offset] = data[offset + 1] = data[offset + 2] = grey;\n      }\n    } while (--x);\n  } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', undefined, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, undefined, Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Enhance = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n  const fromRange = fromMax - fromMin,\n    toRange = toMax - toMin;\n  if (fromRange === 0) {\n    return toMin + toRange / 2;\n  }\n  if (toRange === 0) {\n    return toMin;\n  }\n  let toValue = (fromValue - fromMin) / fromRange;\n  toValue = toRange * toValue + toMin;\n  return toValue;\n}\nconst Enhance = function (imageData) {\n  const data = imageData.data,\n    nSubPixels = data.length;\n  let rMin = data[0],\n    rMax = rMin,\n    r,\n    gMin = data[1],\n    gMax = gMin,\n    g,\n    bMin = data[2],\n    bMax = bMin,\n    b;\n  const enhanceAmount = this.enhance();\n  if (enhanceAmount === 0) {\n    return;\n  }\n  for (let i = 0; i < nSubPixels; i += 4) {\n    r = data[i + 0];\n    if (r < rMin) {\n      rMin = r;\n    } else if (r > rMax) {\n      rMax = r;\n    }\n    g = data[i + 1];\n    if (g < gMin) {\n      gMin = g;\n    } else if (g > gMax) {\n      gMax = g;\n    }\n    b = data[i + 2];\n    if (b < bMin) {\n      bMin = b;\n    } else if (b > bMax) {\n      bMax = b;\n    }\n  }\n  if (rMax === rMin) {\n    rMax = 255;\n    rMin = 0;\n  }\n  if (gMax === gMin) {\n    gMax = 255;\n    gMin = 0;\n  }\n  if (bMax === bMin) {\n    bMax = 255;\n    bMin = 0;\n  }\n  let rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n  if (enhanceAmount > 0) {\n    rGoalMax = rMax + enhanceAmount * (255 - rMax);\n    rGoalMin = rMin - enhanceAmount * (rMin - 0);\n    gGoalMax = gMax + enhanceAmount * (255 - gMax);\n    gGoalMin = gMin - enhanceAmount * (gMin - 0);\n    bGoalMax = bMax + enhanceAmount * (255 - bMax);\n    bGoalMin = bMin - enhanceAmount * (bMin - 0);\n  } else {\n    rMid = (rMax + rMin) * 0.5;\n    rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n    rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n    gMid = (gMax + gMin) * 0.5;\n    gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n    gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n    bMid = (bMax + bMin) * 0.5;\n    bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n    bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n  }\n  for (let i = 0; i < nSubPixels; i += 4) {\n    data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n    data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n    data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n  }\n};\nexports.Enhance = Enhance;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grayscale = void 0;\nconst Grayscale = function (imageData) {\n  const data = imageData.data,\n    len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    const brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n    data[i] = brightness;\n    data[i + 1] = brightness;\n    data[i + 2] = brightness;\n  }\n};\nexports.Grayscale = Grayscale;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HSL = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'luminance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nconst HSL = function (imageData) {\n  const data = imageData.data,\n    nPixels = data.length,\n    v = 1,\n    s = Math.pow(2, this.saturation()),\n    h = Math.abs(this.hue() + 360) % 360,\n    l = this.luminance() * 127;\n  const vsu = v * s * Math.cos(h * Math.PI / 180),\n    vsw = v * s * Math.sin(h * Math.PI / 180);\n  const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n    rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n    rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n  const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n    gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n    gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n  const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n    bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n    bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n  let r, g, b, a;\n  for (let i = 0; i < nPixels; i += 4) {\n    r = data[i + 0];\n    g = data[i + 1];\n    b = data[i + 2];\n    a = data[i + 3];\n    data[i + 0] = rr * r + rg * g + rb * b + l;\n    data[i + 1] = gr * r + gg * g + gb * b + l;\n    data[i + 2] = br * r + bg * g + bb * b + l;\n    data[i + 3] = a;\n  }\n};\nexports.HSL = HSL;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HSV = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst HSV = function (imageData) {\n  const data = imageData.data,\n    nPixels = data.length,\n    v = Math.pow(2, this.value()),\n    s = Math.pow(2, this.saturation()),\n    h = Math.abs(this.hue() + 360) % 360;\n  const vsu = v * s * Math.cos(h * Math.PI / 180),\n    vsw = v * s * Math.sin(h * Math.PI / 180);\n  const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n    rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n    rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n  const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n    gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n    gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n  const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n    bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n    bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n  let r, g, b, a;\n  for (let i = 0; i < nPixels; i += 4) {\n    r = data[i + 0];\n    g = data[i + 1];\n    b = data[i + 2];\n    a = data[i + 3];\n    data[i + 0] = rr * r + rg * g + rb * b;\n    data[i + 1] = gr * r + gg * g + gb * b;\n    data[i + 2] = br * r + bg * g + bb * b;\n    data[i + 3] = a;\n  }\n};\nexports.HSV = HSV;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'value', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Invert = void 0;\nconst Invert = function (imageData) {\n  const data = imageData.data,\n    len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    data[i] = 255 - data[i];\n    data[i + 1] = 255 - data[i + 1];\n    data[i + 2] = 255 - data[i + 2];\n  }\n};\nexports.Invert = Invert;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Kaleidoscope = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst ToPolar = function (src, dst, opt) {\n  const srcPixels = src.data,\n    dstPixels = dst.data,\n    xSize = src.width,\n    ySize = src.height,\n    xMid = opt.polarCenterX || xSize / 2,\n    yMid = opt.polarCenterY || ySize / 2;\n  let rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n  let x = xSize - xMid;\n  let y = ySize - yMid;\n  const rad = Math.sqrt(x * x + y * y);\n  rMax = rad > rMax ? rad : rMax;\n  const rSize = ySize,\n    tSize = xSize;\n  const conversion = 360 / tSize * Math.PI / 180;\n  for (let theta = 0; theta < tSize; theta += 1) {\n    const sin = Math.sin(theta * conversion);\n    const cos = Math.cos(theta * conversion);\n    for (let radius = 0; radius < rSize; radius += 1) {\n      x = Math.floor(xMid + rMax * radius / rSize * cos);\n      y = Math.floor(yMid + rMax * radius / rSize * sin);\n      let i = (y * xSize + x) * 4;\n      const r = srcPixels[i + 0];\n      const g = srcPixels[i + 1];\n      const b = srcPixels[i + 2];\n      const a = srcPixels[i + 3];\n      i = (theta + radius * xSize) * 4;\n      dstPixels[i + 0] = r;\n      dstPixels[i + 1] = g;\n      dstPixels[i + 2] = b;\n      dstPixels[i + 3] = a;\n    }\n  }\n};\nconst FromPolar = function (src, dst, opt) {\n  const srcPixels = src.data,\n    dstPixels = dst.data,\n    xSize = src.width,\n    ySize = src.height,\n    xMid = opt.polarCenterX || xSize / 2,\n    yMid = opt.polarCenterY || ySize / 2;\n  let rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n  let x = xSize - xMid;\n  let y = ySize - yMid;\n  const rad = Math.sqrt(x * x + y * y);\n  rMax = rad > rMax ? rad : rMax;\n  const rSize = ySize,\n    tSize = xSize,\n    phaseShift = opt.polarRotation || 0;\n  let x1, y1;\n  for (x = 0; x < xSize; x += 1) {\n    for (y = 0; y < ySize; y += 1) {\n      const dx = x - xMid;\n      const dy = y - yMid;\n      const radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n      let theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n      theta = theta * tSize / 360;\n      x1 = Math.floor(theta);\n      y1 = Math.floor(radius);\n      let i = (y1 * xSize + x1) * 4;\n      const r = srcPixels[i + 0];\n      const g = srcPixels[i + 1];\n      const b = srcPixels[i + 2];\n      const a = srcPixels[i + 3];\n      i = (y * xSize + x) * 4;\n      dstPixels[i + 0] = r;\n      dstPixels[i + 1] = g;\n      dstPixels[i + 2] = b;\n      dstPixels[i + 3] = a;\n    }\n  }\n};\nconst Kaleidoscope = function (imageData) {\n  const xSize = imageData.width,\n    ySize = imageData.height;\n  let x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n  let power = Math.round(this.kaleidoscopePower());\n  const angle = Math.round(this.kaleidoscopeAngle());\n  const offset = Math.floor(xSize * (angle % 360) / 360);\n  if (power < 1) {\n    return;\n  }\n  const tempCanvas = Util_1.Util.createCanvasElement();\n  tempCanvas.width = xSize;\n  tempCanvas.height = ySize;\n  const scratchData = tempCanvas.getContext('2d').getImageData(0, 0, xSize, ySize);\n  Util_1.Util.releaseCanvas(tempCanvas);\n  ToPolar(imageData, scratchData, {\n    polarCenterX: xSize / 2,\n    polarCenterY: ySize / 2\n  });\n  let minSectionSize = xSize / Math.pow(2, power);\n  while (minSectionSize <= 8) {\n    minSectionSize = minSectionSize * 2;\n    power -= 1;\n  }\n  minSectionSize = Math.ceil(minSectionSize);\n  let sectionSize = minSectionSize;\n  let xStart = 0,\n    xEnd = sectionSize,\n    xDelta = 1;\n  if (offset + minSectionSize > xSize) {\n    xStart = sectionSize;\n    xEnd = 0;\n    xDelta = -1;\n  }\n  for (y = 0; y < ySize; y += 1) {\n    for (x = xStart; x !== xEnd; x += xDelta) {\n      xoff = Math.round(x + offset) % xSize;\n      srcPos = (xSize * y + xoff) * 4;\n      r = scratchData.data[srcPos + 0];\n      g = scratchData.data[srcPos + 1];\n      b = scratchData.data[srcPos + 2];\n      a = scratchData.data[srcPos + 3];\n      dstPos = (xSize * y + x) * 4;\n      scratchData.data[dstPos + 0] = r;\n      scratchData.data[dstPos + 1] = g;\n      scratchData.data[dstPos + 2] = b;\n      scratchData.data[dstPos + 3] = a;\n    }\n  }\n  for (y = 0; y < ySize; y += 1) {\n    sectionSize = Math.floor(minSectionSize);\n    for (i = 0; i < power; i += 1) {\n      for (x = 0; x < sectionSize + 1; x += 1) {\n        srcPos = (xSize * y + x) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n      }\n      sectionSize *= 2;\n    }\n  }\n  FromPolar(scratchData, imageData, {\n    polarRotation: 0\n  });\n};\nexports.Kaleidoscope = Kaleidoscope;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mask = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n  let idx = (y * idata.width + x) * 4;\n  const d = [];\n  d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n  return d;\n}\nfunction rgbDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n  const m = [0, 0, 0];\n  for (let i = 0; i < pTab.length; i++) {\n    m[0] += pTab[i][0];\n    m[1] += pTab[i][1];\n    m[2] += pTab[i][2];\n  }\n  m[0] /= pTab.length;\n  m[1] /= pTab.length;\n  m[2] /= pTab.length;\n  return m;\n}\nfunction backgroundMask(idata, threshold) {\n  const rgbv_no = pixelAt(idata, 0, 0);\n  const rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n  const rgbv_so = pixelAt(idata, 0, idata.height - 1);\n  const rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n  const thres = threshold || 10;\n  if (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {\n    const mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n    const mask = [];\n    for (let i = 0; i < idata.width * idata.height; i++) {\n      const d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);\n      mask[i] = d < thres ? 0 : 255;\n    }\n    return mask;\n  }\n}\nfunction applyMask(idata, mask) {\n  for (let i = 0; i < idata.width * idata.height; i++) {\n    idata.data[4 * i + 3] = mask[i];\n  }\n}\nfunction erodeMask(mask, sw, sh) {\n  const weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n  const side = Math.round(Math.sqrt(weights.length));\n  const halfSide = Math.floor(side / 2);\n  const maskResult = [];\n  for (let y = 0; y < sh; y++) {\n    for (let x = 0; x < sw; x++) {\n      const so = y * sw + x;\n      let a = 0;\n      for (let cy = 0; cy < side; cy++) {\n        for (let cx = 0; cx < side; cx++) {\n          const scy = y + cy - halfSide;\n          const scx = x + cx - halfSide;\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            const srcOff = scy * sw + scx;\n            const wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n      maskResult[so] = a === 255 * 8 ? 255 : 0;\n    }\n  }\n  return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n  const weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n  const side = Math.round(Math.sqrt(weights.length));\n  const halfSide = Math.floor(side / 2);\n  const maskResult = [];\n  for (let y = 0; y < sh; y++) {\n    for (let x = 0; x < sw; x++) {\n      const so = y * sw + x;\n      let a = 0;\n      for (let cy = 0; cy < side; cy++) {\n        for (let cx = 0; cx < side; cx++) {\n          const scy = y + cy - halfSide;\n          const scx = x + cx - halfSide;\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            const srcOff = scy * sw + scx;\n            const wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n      maskResult[so] = a >= 255 * 4 ? 255 : 0;\n    }\n  }\n  return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n  const weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n  const side = Math.round(Math.sqrt(weights.length));\n  const halfSide = Math.floor(side / 2);\n  const maskResult = [];\n  for (let y = 0; y < sh; y++) {\n    for (let x = 0; x < sw; x++) {\n      const so = y * sw + x;\n      let a = 0;\n      for (let cy = 0; cy < side; cy++) {\n        for (let cx = 0; cx < side; cx++) {\n          const scy = y + cy - halfSide;\n          const scx = x + cx - halfSide;\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            const srcOff = scy * sw + scx;\n            const wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n      maskResult[so] = a;\n    }\n  }\n  return maskResult;\n}\nconst Mask = function (imageData) {\n  const threshold = this.threshold();\n  let mask = backgroundMask(imageData, threshold);\n  if (mask) {\n    mask = erodeMask(mask, imageData.width, imageData.height);\n    mask = dilateMask(mask, imageData.width, imageData.height);\n    mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n    applyMask(imageData, mask);\n  }\n  return imageData;\n};\nexports.Mask = Mask;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Noise = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Noise = function (imageData) {\n  const amount = this.noise() * 255,\n    data = imageData.data,\n    nPixels = data.length,\n    half = amount / 2;\n  for (let i = 0; i < nPixels; i += 4) {\n    data[i + 0] += half - 2 * half * Math.random();\n    data[i + 1] += half - 2 * half * Math.random();\n    data[i + 2] += half - 2 * half * Math.random();\n  }\n};\nexports.Noise = Noise;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pixelate = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Util_1 = require(\"../Util\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Pixelate = function (imageData) {\n  let pixelSize = Math.ceil(this.pixelSize()),\n    width = imageData.width,\n    height = imageData.height,\n    x,\n    y,\n    i,\n    red,\n    green,\n    blue,\n    alpha,\n    nBinsX = Math.ceil(width / pixelSize),\n    nBinsY = Math.ceil(height / pixelSize),\n    xBinStart,\n    xBinEnd,\n    yBinStart,\n    yBinEnd,\n    xBin,\n    yBin,\n    pixelsInBin,\n    data = imageData.data;\n  if (pixelSize <= 0) {\n    Util_1.Util.error('pixelSize value can not be <= 0');\n    return;\n  }\n  for (xBin = 0; xBin < nBinsX; xBin += 1) {\n    for (yBin = 0; yBin < nBinsY; yBin += 1) {\n      red = 0;\n      green = 0;\n      blue = 0;\n      alpha = 0;\n      xBinStart = xBin * pixelSize;\n      xBinEnd = xBinStart + pixelSize;\n      yBinStart = yBin * pixelSize;\n      yBinEnd = yBinStart + pixelSize;\n      pixelsInBin = 0;\n      for (x = xBinStart; x < xBinEnd; x += 1) {\n        if (x >= width) {\n          continue;\n        }\n        for (y = yBinStart; y < yBinEnd; y += 1) {\n          if (y >= height) {\n            continue;\n          }\n          i = (width * y + x) * 4;\n          red += data[i + 0];\n          green += data[i + 1];\n          blue += data[i + 2];\n          alpha += data[i + 3];\n          pixelsInBin += 1;\n        }\n      }\n      red = red / pixelsInBin;\n      green = green / pixelsInBin;\n      blue = blue / pixelsInBin;\n      alpha = alpha / pixelsInBin;\n      for (x = xBinStart; x < xBinEnd; x += 1) {\n        if (x >= width) {\n          continue;\n        }\n        for (y = yBinStart; y < yBinEnd; y += 1) {\n          if (y >= height) {\n            continue;\n          }\n          i = (width * y + x) * 4;\n          data[i + 0] = red;\n          data[i + 1] = green;\n          data[i + 2] = blue;\n          data[i + 3] = alpha;\n        }\n      }\n    }\n  }\n};\nexports.Pixelate = Pixelate;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Posterize = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Posterize = function (imageData) {\n  const levels = Math.round(this.levels() * 254) + 1,\n    data = imageData.data,\n    len = data.length,\n    scale = 255 / levels;\n  for (let i = 0; i < len; i += 1) {\n    data[i] = Math.floor(data[i] / scale) * scale;\n  }\n};\nexports.Posterize = Posterize;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'levels', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGB = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGB = function (imageData) {\n  const data = imageData.data,\n    nPixels = data.length,\n    red = this.red(),\n    green = this.green(),\n    blue = this.blue();\n  for (let i = 0; i < nPixels; i += 4) {\n    const brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n    data[i] = brightness * red;\n    data[i + 1] = brightness * green;\n    data[i + 2] = brightness * blue;\n    data[i + 3] = data[i + 3];\n  }\n};\nexports.RGB = RGB;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGBA = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGBA = function (imageData) {\n  const data = imageData.data,\n    nPixels = data.length,\n    red = this.red(),\n    green = this.green(),\n    blue = this.blue(),\n    alpha = this.alpha();\n  for (let i = 0; i < nPixels; i += 4) {\n    const ia = 1 - alpha;\n    data[i] = red * alpha + data[i] * ia;\n    data[i + 1] = green * alpha + data[i + 1] * ia;\n    data[i + 2] = blue * alpha + data[i + 2] * ia;\n  }\n};\nexports.RGBA = RGBA;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n  this._filterUpToDate = false;\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n  this._filterUpToDate = false;\n  if (val > 1) {\n    return 1;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return val;\n  }\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sepia = void 0;\nconst Sepia = function (imageData) {\n  const data = imageData.data,\n    nPixels = data.length;\n  for (let i = 0; i < nPixels; i += 4) {\n    const r = data[i + 0];\n    const g = data[i + 1];\n    const b = data[i + 2];\n    data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n    data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n    data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n  }\n};\nexports.Sepia = Sepia;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Solarize = void 0;\nconst Solarize = function (imageData) {\n  const data = imageData.data,\n    w = imageData.width,\n    h = imageData.height,\n    w4 = w * 4;\n  let y = h;\n  do {\n    const offsetY = (y - 1) * w4;\n    let x = w;\n    do {\n      const offset = offsetY + (x - 1) * 4;\n      let r = data[offset];\n      let g = data[offset + 1];\n      let b = data[offset + 2];\n      if (r > 127) {\n        r = 255 - r;\n      }\n      if (g > 127) {\n        g = 255 - g;\n      }\n      if (b > 127) {\n        b = 255 - b;\n      }\n      data[offset] = r;\n      data[offset + 1] = g;\n      data[offset + 2] = b;\n    } while (--x);\n  } while (--y);\n};\nexports.Solarize = Solarize;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Threshold = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Threshold = function (imageData) {\n  const level = this.threshold() * 255,\n    data = imageData.data,\n    len = data.length;\n  for (let i = 0; i < len; i += 1) {\n    data[i] = data[i] < level ? 0 : 255;\n  }\n};\nexports.Threshold = Threshold;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Konva = void 0;\nconst _CoreInternals_1 = require(\"./_CoreInternals\");\nconst Arc_1 = require(\"./shapes/Arc\");\nconst Arrow_1 = require(\"./shapes/Arrow\");\nconst Circle_1 = require(\"./shapes/Circle\");\nconst Ellipse_1 = require(\"./shapes/Ellipse\");\nconst Image_1 = require(\"./shapes/Image\");\nconst Label_1 = require(\"./shapes/Label\");\nconst Line_1 = require(\"./shapes/Line\");\nconst Path_1 = require(\"./shapes/Path\");\nconst Rect_1 = require(\"./shapes/Rect\");\nconst RegularPolygon_1 = require(\"./shapes/RegularPolygon\");\nconst Ring_1 = require(\"./shapes/Ring\");\nconst Sprite_1 = require(\"./shapes/Sprite\");\nconst Star_1 = require(\"./shapes/Star\");\nconst Text_1 = require(\"./shapes/Text\");\nconst TextPath_1 = require(\"./shapes/TextPath\");\nconst Transformer_1 = require(\"./shapes/Transformer\");\nconst Wedge_1 = require(\"./shapes/Wedge\");\nconst Blur_1 = require(\"./filters/Blur\");\nconst Brighten_1 = require(\"./filters/Brighten\");\nconst Contrast_1 = require(\"./filters/Contrast\");\nconst Emboss_1 = require(\"./filters/Emboss\");\nconst Enhance_1 = require(\"./filters/Enhance\");\nconst Grayscale_1 = require(\"./filters/Grayscale\");\nconst HSL_1 = require(\"./filters/HSL\");\nconst HSV_1 = require(\"./filters/HSV\");\nconst Invert_1 = require(\"./filters/Invert\");\nconst Kaleidoscope_1 = require(\"./filters/Kaleidoscope\");\nconst Mask_1 = require(\"./filters/Mask\");\nconst Noise_1 = require(\"./filters/Noise\");\nconst Pixelate_1 = require(\"./filters/Pixelate\");\nconst Posterize_1 = require(\"./filters/Posterize\");\nconst RGB_1 = require(\"./filters/RGB\");\nconst RGBA_1 = require(\"./filters/RGBA\");\nconst Sepia_1 = require(\"./filters/Sepia\");\nconst Solarize_1 = require(\"./filters/Solarize\");\nconst Threshold_1 = require(\"./filters/Threshold\");\nexports.Konva = _CoreInternals_1.Konva.Util._assign(_CoreInternals_1.Konva, {\n  Arc: Arc_1.Arc,\n  Arrow: Arrow_1.Arrow,\n  Circle: Circle_1.Circle,\n  Ellipse: Ellipse_1.Ellipse,\n  Image: Image_1.Image,\n  Label: Label_1.Label,\n  Tag: Label_1.Tag,\n  Line: Line_1.Line,\n  Path: Path_1.Path,\n  Rect: Rect_1.Rect,\n  RegularPolygon: RegularPolygon_1.RegularPolygon,\n  Ring: Ring_1.Ring,\n  Sprite: Sprite_1.Sprite,\n  Star: Star_1.Star,\n  Text: Text_1.Text,\n  TextPath: TextPath_1.TextPath,\n  Transformer: Transformer_1.Transformer,\n  Wedge: Wedge_1.Wedge,\n  Filters: {\n    Blur: Blur_1.Blur,\n    Brighten: Brighten_1.Brighten,\n    Contrast: Contrast_1.Contrast,\n    Emboss: Emboss_1.Emboss,\n    Enhance: Enhance_1.Enhance,\n    Grayscale: Grayscale_1.Grayscale,\n    HSL: HSL_1.HSL,\n    HSV: HSV_1.HSV,\n    Invert: Invert_1.Invert,\n    Kaleidoscope: Kaleidoscope_1.Kaleidoscope,\n    Mask: Mask_1.Mask,\n    Noise: Noise_1.Noise,\n    Pixelate: Pixelate_1.Pixelate,\n    Posterize: Posterize_1.Posterize,\n    RGB: RGB_1.RGB,\n    RGBA: RGBA_1.RGBA,\n    Sepia: Sepia_1.Sepia,\n    Solarize: Solarize_1.Solarize,\n    Threshold: Threshold_1.Threshold\n  }\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst _FullInternals_1 = require(\"./_FullInternals\");\nmodule.exports = _FullInternals_1.Konva;"],
  "mappings": "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",
  "names": ["pos", "i", "v", "u", "lineArray", "width", "node", "self", "_a", "Blur"]
}
